
lab9_app.elf:     file format elf32-littlenios2
lab9_app.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x18000230

Program Header:
    LOAD off    0x00001000 vaddr 0x18000000 paddr 0x18000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x18000020 paddr 0x18000020 align 2**12
         filesz 0x0000e368 memsz 0x0000e368 flags r-x
    LOAD off    0x0000f388 vaddr 0x1800e388 paddr 0x180102cc align 2**12
         filesz 0x00001f44 memsz 0x00001f44 flags rw-
    LOAD off    0x00012210 vaddr 0x18012210 paddr 0x18012210 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  18000000  18000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  18000020  18000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000de08  18000230  18000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000350  1800e038  1800e038  0000f038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001f44  1800e388  180102cc  0000f388  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  18012210  18012210  00012210  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  000112cc  2**0
                  CONTENTS
  7 .sdram        00000000  18012370  18012370  000112cc  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000112cc  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000b80  00000000  00000000  000112f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0001663b  00000000  00000000  00011e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00006326  00000000  00000000  000284ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00008380  00000000  00000000  0002e7d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000182c  00000000  00000000  00036b54  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003240  00000000  00000000  00038380  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00015095  00000000  00000000  0003b5c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00050658  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001408  00000000  00000000  00050698  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00054506  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00054509  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00054515  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00054516  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00054517  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0005451b  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0005451f  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  00054523  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0005452e  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00054539  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  00054544  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000033  00000000  00000000  0005454c  2**0
                  CONTENTS, READONLY
 30 .jdi          00004f1a  00000000  00000000  0005457f  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0007aa83  00000000  00000000  00059499  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
18000000 l    d  .entry	00000000 .entry
18000020 l    d  .exceptions	00000000 .exceptions
18000230 l    d  .text	00000000 .text
1800e038 l    d  .rodata	00000000 .rodata
1800e388 l    d  .rwdata	00000000 .rwdata
18012210 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
18012370 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab9_app_bsp//obj/HAL/src/crt0.o
18000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
18010284 l     O .rwdata	00000004 vga_ctrl
1800e388 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 palette_test.c
18010288 l     O .rwdata	00000004 vga_ctrl
1800e4f8 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
1801028c l     O .rwdata	00000004 vga_ctrl
1800e668 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1800e0ce l     O .rodata	00000010 zeroes.4389
1800e0de l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
18002f90 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 impure.c
1800e7d8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
1800ec1c l     O .rwdata	00000020 lc_ctype_charset
1800ebfc l     O .rwdata	00000020 lc_message_charset
1800ec3c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
1800e110 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
1800e234 l     O .rodata	00000010 zeroes.4333
1800e244 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_load.c
1800bd88 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
180102a4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
1800c018 l     F .text	00000034 alt_dev_reg
1800f07c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1800c2f4 l     F .text	0000020c altera_avalon_jtag_uart_irq
1800c500 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_close.c
1800cdbc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
1800cef0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1800cf1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1800d37c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1800d4dc l     F .text	0000003c alt_get_errno
1800d518 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
18012244 g     O .bss	00000004 alt_instruction_exception_handler
18006294 g     F .text	00000074 _mprec_log10
18006380 g     F .text	0000008c __any_on
1800e11c g     O .rodata	00000028 __mprec_tinytens
1800be74 g     F .text	0000007c alt_main
18012270 g     O .bss	00000100 alt_irq
180102cc g       *ABS*	00000000 __flash_rwdata_start
1800a760 g     F .text	00000088 .hidden __eqdf2
18012370 g       *ABS*	00000000 __alt_heap_start
18004840 g     F .text	0000007c _setlocale_r
1800bf14 g     F .text	00000024 __malloc_unlock
180006b4 g     F .text	0000026c textVGAColorScreenSaver
18008030 g     F .text	0000015c memmove
18005354 g     F .text	000000a8 _Balloc
1800a7e8 g     F .text	000000dc .hidden __gtdf2
1800d988 g     F .text	00000024 altera_nios2_gen2_irq_init
18000000 g     F .entry	0000000c __reset
18000020 g       *ABS*	00000000 __flash_exceptions_start
18012228 g     O .bss	00000004 errno
18006780 g     F .text	000013a0 ___svfiprintf_internal_r
18012230 g     O .bss	00000004 alt_argv
18018284 g       *ABS*	00000000 _gp
1800bfe8 g     F .text	00000030 usleep
18000438 g     F .text	00000050 textVGAColorClr
18010104 g     O .rwdata	00000180 alt_fd_list
1800d9ac g     F .text	00000090 alt_find_dev
1800520c g     F .text	00000148 memcpy
1800bba0 g     F .text	000000dc .hidden __floatsidf
1800d460 g     F .text	0000007c alt_io_redirect
1800a8c4 g     F .text	000000f4 .hidden __ltdf2
1800e038 g       *ABS*	00000000 __DTOR_END__
1800dc08 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1800640c g     F .text	00000074 __fpclassifyd
180061f0 g     F .text	000000a4 __ratio
1800c6f8 g     F .text	0000021c altera_avalon_jtag_uart_read
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
18000a18 g     F .text	00000064 .hidden __udivsi3
1800e16c g     O .rodata	000000c8 __mprec_tens
180048bc g     F .text	0000000c __locale_charset
18012224 g     O .bss	00000004 __malloc_top_pad
18010298 g     O .rwdata	00000004 __mb_cur_max
180048ec g     F .text	0000000c _localeconv_r
18005788 g     F .text	0000003c __i2b
18006480 g     F .text	00000054 _sbrk_r
180102b8 g     O .rwdata	00000004 alt_max_fd
18012220 g     O .bss	00000004 __malloc_max_sbrked_mem
180094e4 g     F .text	000008ac .hidden __adddf3
18005f98 g     F .text	0000010c __b2d
18008f20 g     F .text	000005c4 .hidden __umoddi3
18010290 g     O .rwdata	00000004 _global_impure_ptr
180082b4 g     F .text	00000564 _realloc_r
18012370 g       *ABS*	00000000 __bss_end
1800d28c g     F .text	000000f0 alt_iic_isr_register
1800d880 g     F .text	00000108 alt_tick
18008924 g     F .text	000005fc .hidden __udivdi3
1800e144 g     O .rodata	00000028 __mprec_bigtens
1800556c g     F .text	00000104 __s2b
1800bc7c g     F .text	000000a8 .hidden __floatunsidf
18005cd8 g     F .text	00000060 __mcmp
1800d240 g     F .text	0000004c alt_ic_irq_enabled
1800d7e4 g     F .text	0000009c alt_alarm_stop
18012238 g     O .bss	00000004 alt_irq_active
180000fc g     F .exceptions	000000d4 alt_irq_handler
180100dc g     O .rwdata	00000028 alt_dev_null
1800ced0 g     F .text	00000020 alt_dcache_flush_all
18005670 g     F .text	00000068 __hi0bits
1800bb20 g     F .text	00000080 .hidden __fixdfsi
180102cc g       *ABS*	00000000 __ram_rwdata_end
180102b0 g     O .rwdata	00000008 alt_dev_list
1800e388 g       *ABS*	00000000 __ram_rodata_end
1800a8c4 g     F .text	000000f4 .hidden __ledf2
18005a50 g     F .text	00000140 __pow5mult
18012218 g     O .bss	00000004 __nlocale_changed
18000a7c g     F .text	00000058 .hidden __umodsi3
18012370 g       *ABS*	00000000 end
1800c234 g     F .text	000000c0 altera_avalon_jtag_uart_init
180001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
1800e038 g       *ABS*	00000000 __CTOR_LIST__
20000000 g       *ABS*	00000000 __alt_stack_pointer
1800bd24 g     F .text	00000064 .hidden __clzsi2
1800c914 g     F .text	00000224 altera_avalon_jtag_uart_write
18005128 g     F .text	000000e4 memchr
18000b78 g     F .text	00000058 _sprintf_r
18007d20 g     F .text	00000310 _free_r
180048c8 g     F .text	00000010 __locale_mb_cur_max
1800de84 g     F .text	00000180 __call_exitprocs
18012214 g     O .bss	00000004 __mlocale_changed
1801029c g     O .rwdata	00000004 __malloc_sbrk_base
18000230 g     F .text	0000003c _start
1801223c g     O .bss	00000004 _alt_tick_rate
18000b14 g     F .text	00000064 rand
18005b90 g     F .text	00000148 __lshift
18012240 g     O .bss	00000004 _alt_nticks
1800c084 g     F .text	0000004c alt_sys_init
180065b0 g     F .text	000001d0 __ssprint_r
1800dd6c g     F .text	00000118 __register_exitproc
180057c4 g     F .text	0000028c __multiply
1800c5a0 g     F .text	00000068 altera_avalon_jtag_uart_close
18000ad4 g     F .text	00000028 .hidden __mulsi3
1800e388 g       *ABS*	00000000 __ram_rwdata_start
1800e038 g       *ABS*	00000000 __ram_rodata_start
18012248 g     O .bss	00000028 __malloc_current_mallinfo
180060a4 g     F .text	0000014c __d2b
1800c0d0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1800db44 g     F .text	000000c4 alt_get_fd
1800cc64 g     F .text	00000158 alt_busy_sleep
1800dcf0 g     F .text	0000007c memcmp
1800c190 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
18012370 g       *ABS*	00000000 __alt_stack_base
1800c1e0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
18009d90 g     F .text	000009d0 .hidden __divdf3
18006308 g     F .text	00000078 __copybits
1800ec74 g     O .rwdata	00000408 __malloc_av_
1800a9b8 g     F .text	0000086c .hidden __muldf3
1800da3c g     F .text	00000108 alt_find_file
1800cf58 g     F .text	000000a4 alt_dev_llist_insert
1800bef0 g     F .text	00000024 __malloc_lock
1800bf38 g     F .text	000000b0 sbrk
18000cd4 g     F .text	000022bc ___svfprintf_internal_r
18007b20 g     F .text	000000dc _calloc_r
18012210 g       *ABS*	00000000 __bss_start
1800818c g     F .text	00000128 memset
1800026c g     F .text	00000018 main
18012234 g     O .bss	00000004 alt_envp
1801221c g     O .bss	00000004 __malloc_max_total_mem
1800c130 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
18000afc g     F .text	00000018 srand
20000000 g       *ABS*	00000000 __alt_heap_limit
180031b8 g     F .text	00001688 _dtoa_r
1800491c g     F .text	0000080c _malloc_r
180102bc g     O .rwdata	00000004 alt_errno
18000920 g     F .text	00000084 .hidden __divsi3
18000598 g     F .text	0000011c setColorPalette
18007bfc g     F .text	00000124 _malloc_trim_r
1800e038 g       *ABS*	00000000 __CTOR_END__
180064d4 g     F .text	000000dc strcmp
1800e038 g       *ABS*	00000000 __flash_rodata_start
1800e038 g       *ABS*	00000000 __DTOR_LIST__
1800a760 g     F .text	00000088 .hidden __nedf2
1800c04c g     F .text	00000038 alt_irq_init
1800d760 g     F .text	00000084 alt_release_fd
18000bd0 g     F .text	0000006c sprintf
1800e254 g     O .rodata	00000100 .hidden __clz_tab
18012210 g     O .bss	00000004 _PathLocale
1800dca4 g     F .text	00000014 atexit
180048f8 g     F .text	00000018 setlocale
18010294 g     O .rwdata	00000004 _impure_ptr
1801222c g     O .bss	00000004 alt_argc
1800d05c g     F .text	00000060 _do_dtors
180048e4 g     F .text	00000008 __locale_cjk_lang
18000020 g       .exceptions	00000000 alt_irq_entry
18005f34 g     F .text	00000064 __ulp
180102a8 g     O .rwdata	00000008 alt_fs_list
18000020 g       *ABS*	00000000 __ram_exceptions_start
18004910 g     F .text	0000000c localeconv
1800d0dc g     F .text	00000050 alt_ic_isr_register
180102cc g       *ABS*	00000000 _edata
18012370 g       *ABS*	00000000 _end
18000230 g       *ABS*	00000000 __ram_exceptions_end
1800c608 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
18000488 g     F .text	00000110 textVGADrawColorText
1800d1b4 g     F .text	0000008c alt_ic_irq_disable
180102a0 g     O .rwdata	00000004 __malloc_trim_threshold
180048d8 g     F .text	0000000c __locale_msgcharset
1800dcb8 g     F .text	00000038 exit
18005d38 g     F .text	000001fc __mdiff
180009a4 g     F .text	00000074 .hidden __modsi3
20000000 g       *ABS*	00000000 __alt_data_end
18000020 g     F .exceptions	00000000 alt_exception
18000000 g       *ABS*	00000000 __alt_mem_sdram
1800e004 g     F .text	00000034 _exit
1800cb38 g     F .text	0000012c alt_alarm_start
18008818 g     F .text	0000010c .hidden __muldi3
18000c3c g     F .text	00000098 strlen
1800d604 g     F .text	0000015c open
1800a7e8 g     F .text	000000dc .hidden __gedf2
1800d0bc g     F .text	00000020 alt_icache_flush_all
180102c0 g     O .rwdata	00000004 alt_priority_mask
1800d12c g     F .text	00000088 alt_ic_irq_enable
1800b224 g     F .text	000008fc .hidden __subdf3
180056d8 g     F .text	000000b0 __lo0bits
180102c4 g     O .rwdata	00000008 alt_alarm_list
1800cffc g     F .text	00000060 _do_ctors
1800cdf8 g     F .text	000000d8 close
18000284 g     F .text	000001b4 paletteTest
1800bdf0 g     F .text	00000084 alt_load
18005424 g     F .text	00000148 __multadd
180053fc g     F .text	00000028 _Bfree



Disassembly of section .entry:

18000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
18000000:	00460034 	movhi	at,6144
    ori r1, r1, %lo(_start)
18000004:	08408c14 	ori	at,at,560
    jmp r1
18000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

18000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
18000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
18000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
18000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
18000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
18000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
18000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
18000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
18000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
18000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
18000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
18000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
18000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
18000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
18000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
18000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
18000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
18000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
18000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1800007c:	10000326 	beq	r2,zero,1800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
18000080:	20000226 	beq	r4,zero,1800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
18000084:	80000fc0 	call	180000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
18000088:	00000706 	br	180000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1800008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
18000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
18000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
18000098:	80001d00 	call	180001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1800009c:	1000021e 	bne	r2,zero,180000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
180000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
180000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
180000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
180000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
180000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
180000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
180000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
180000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
180000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
180000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
180000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
180000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
180000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
180000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
180000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
180000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
180000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
180000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
180000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
180000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
180000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
180000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
180000f8:	ef80083a 	eret

180000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
180000fc:	defff904 	addi	sp,sp,-28
18000100:	dfc00615 	stw	ra,24(sp)
18000104:	df000515 	stw	fp,20(sp)
18000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
18000110:	0005313a 	rdctl	r2,ipending
18000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
18000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
18000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
18000124:	00800044 	movi	r2,1
18000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1800012c:	e0fffb17 	ldw	r3,-20(fp)
18000130:	e0bffc17 	ldw	r2,-16(fp)
18000134:	1884703a 	and	r2,r3,r2
18000138:	10001426 	beq	r2,zero,1800018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1800013c:	00860074 	movhi	r2,6145
18000140:	10889c04 	addi	r2,r2,8816
18000144:	e0fffd17 	ldw	r3,-12(fp)
18000148:	180690fa 	slli	r3,r3,3
1800014c:	10c5883a 	add	r2,r2,r3
18000150:	10c00017 	ldw	r3,0(r2)
18000154:	00860074 	movhi	r2,6145
18000158:	10889c04 	addi	r2,r2,8816
1800015c:	e13ffd17 	ldw	r4,-12(fp)
18000160:	200890fa 	slli	r4,r4,3
18000164:	1105883a 	add	r2,r2,r4
18000168:	10800104 	addi	r2,r2,4
1800016c:	10800017 	ldw	r2,0(r2)
18000170:	1009883a 	mov	r4,r2
18000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
18000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1800017c:	0005313a 	rdctl	r2,ipending
18000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
18000184:	e0bfff17 	ldw	r2,-4(fp)
18000188:	00000706 	br	180001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1800018c:	e0bffc17 	ldw	r2,-16(fp)
18000190:	1085883a 	add	r2,r2,r2
18000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
18000198:	e0bffd17 	ldw	r2,-12(fp)
1800019c:	10800044 	addi	r2,r2,1
180001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
180001a4:	003fe106 	br	1800012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
180001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
180001ac:	e0bffb17 	ldw	r2,-20(fp)
180001b0:	103fdb1e 	bne	r2,zero,18000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
180001b4:	0001883a 	nop
}
180001b8:	0001883a 	nop
180001bc:	e037883a 	mov	sp,fp
180001c0:	dfc00117 	ldw	ra,4(sp)
180001c4:	df000017 	ldw	fp,0(sp)
180001c8:	dec00204 	addi	sp,sp,8
180001cc:	f800283a 	ret

180001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
180001d0:	defffb04 	addi	sp,sp,-20
180001d4:	dfc00415 	stw	ra,16(sp)
180001d8:	df000315 	stw	fp,12(sp)
180001dc:	df000304 	addi	fp,sp,12
180001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
180001e4:	00bfffc4 	movi	r2,-1
180001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
180001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
180001f0:	d0a7f017 	ldw	r2,-24640(gp)
180001f4:	10000726 	beq	r2,zero,18000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
180001f8:	d0a7f017 	ldw	r2,-24640(gp)
180001fc:	e0fffd17 	ldw	r3,-12(fp)
18000200:	e1bffe17 	ldw	r6,-8(fp)
18000204:	e17fff17 	ldw	r5,-4(fp)
18000208:	1809883a 	mov	r4,r3
1800020c:	103ee83a 	callr	r2
18000210:	00000206 	br	1800021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
18000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
18000218:	0005883a 	mov	r2,zero
}
1800021c:	e037883a 	mov	sp,fp
18000220:	dfc00117 	ldw	ra,4(sp)
18000224:	df000017 	ldw	fp,0(sp)
18000228:	dec00204 	addi	sp,sp,8
1800022c:	f800283a 	ret

Disassembly of section .text:

18000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
18000230:	06c80034 	movhi	sp,8192
    ori sp, sp, %lo(__alt_stack_pointer)
18000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
18000238:	06860074 	movhi	gp,6145
    ori gp, gp, %lo(_gp)
1800023c:	d6a0a114 	ori	gp,gp,33412
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
18000240:	00860074 	movhi	r2,6145
    ori r2, r2, %lo(__bss_start)
18000244:	10888414 	ori	r2,r2,8720

    movhi r3, %hi(__bss_end)
18000248:	00c60074 	movhi	r3,6145
    ori r3, r3, %lo(__bss_end)
1800024c:	18c8dc14 	ori	r3,r3,9072

    beq r2, r3, 1f
18000250:	10c00326 	beq	r2,r3,18000260 <_start+0x30>

0:
    stw zero, (r2)
18000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
18000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1800025c:	10fffd36 	bltu	r2,r3,18000254 <__alt_data_end+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
18000260:	800bdf00 	call	1800bdf0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
18000264:	800be740 	call	1800be74 <alt_main>

18000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
18000268:	003fff06 	br	18000268 <__alt_data_end+0xf8000268>

1800026c <main>:

//#include "text_mode_vga.h"
#include "palette_test.h"
#include "text_mode_vga_color.h"

int main() {
1800026c:	defffe04 	addi	sp,sp,-8
18000270:	dfc00115 	stw	ra,4(sp)
18000274:	df000015 	stw	fp,0(sp)
18000278:	d839883a 	mov	fp,sp
    
    while(1){
    	//textVGATest();
    	paletteTest();
1800027c:	80002840 	call	18000284 <paletteTest>
    	//textVGAColorScreenSaver();
    }
18000280:	003ffe06 	br	1800027c <__alt_data_end+0xf800027c>

18000284 <paletteTest>:

#include "text_mode_vga_color.h"


void paletteTest()
{
18000284:	defffa04 	addi	sp,sp,-24
18000288:	dfc00515 	stw	ra,20(sp)
1800028c:	df000415 	stw	fp,16(sp)
18000290:	dc400315 	stw	r17,12(sp)
18000294:	dc000215 	stw	r16,8(sp)
18000298:	df000404 	addi	fp,sp,16
	textVGAColorClr();
1800029c:	80004380 	call	18000438 <textVGAColorClr>
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);
180002a0:	00800044 	movi	r2,1
180002a4:	d8800015 	stw	r2,0(sp)
180002a8:	000f883a 	mov	r7,zero
180002ac:	000d883a 	mov	r6,zero
180002b0:	000b883a 	mov	r5,zero
180002b4:	01060074 	movhi	r4,6145
180002b8:	21380e04 	addi	r4,r4,-8136
180002bc:	80004880 	call	18000488 <textVGADrawColorText>

	for (int i = 0; i < 100; i ++)
180002c0:	e03ffd15 	stw	zero,-12(fp)
180002c4:	00005106 	br	1800040c <paletteTest+0x188>
	{
		usleep (20000);
180002c8:	01138804 	movi	r4,20000
180002cc:	800bfe80 	call	1800bfe8 <usleep>
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
180002d0:	8000b140 	call	18000b14 <rand>
180002d4:	1007883a 	mov	r3,r2
180002d8:	00a00034 	movhi	r2,32768
180002dc:	108003c4 	addi	r2,r2,15
180002e0:	1884703a 	and	r2,r3,r2
180002e4:	1000040e 	bge	r2,zero,180002f8 <paletteTest+0x74>
180002e8:	10bfffc4 	addi	r2,r2,-1
180002ec:	00fffc04 	movi	r3,-16
180002f0:	10c4b03a 	or	r2,r2,r3
180002f4:	10800044 	addi	r2,r2,1
180002f8:	14003fcc 	andi	r16,r2,255
180002fc:	8000b140 	call	18000b14 <rand>
18000300:	1007883a 	mov	r3,r2
18000304:	00a00034 	movhi	r2,32768
18000308:	108003c4 	addi	r2,r2,15
1800030c:	1884703a 	and	r2,r3,r2
18000310:	1000040e 	bge	r2,zero,18000324 <paletteTest+0xa0>
18000314:	10bfffc4 	addi	r2,r2,-1
18000318:	00fffc04 	movi	r3,-16
1800031c:	10c4b03a 	or	r2,r2,r3
18000320:	10800044 	addi	r2,r2,1
18000324:	14403fcc 	andi	r17,r2,255
18000328:	8000b140 	call	18000b14 <rand>
1800032c:	1007883a 	mov	r3,r2
18000330:	00a00034 	movhi	r2,32768
18000334:	108003c4 	addi	r2,r2,15
18000338:	1884703a 	and	r2,r3,r2
1800033c:	1000040e 	bge	r2,zero,18000350 <paletteTest+0xcc>
18000340:	10bfffc4 	addi	r2,r2,-1
18000344:	00fffc04 	movi	r3,-16
18000348:	10c4b03a 	or	r2,r2,r3
1800034c:	10800044 	addi	r2,r2,1
18000350:	10803fcc 	andi	r2,r2,255
18000354:	100f883a 	mov	r7,r2
18000358:	880d883a 	mov	r6,r17
1800035c:	800b883a 	mov	r5,r16
18000360:	0009883a 	mov	r4,zero
18000364:	80005980 	call	18000598 <setColorPalette>
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
18000368:	8000b140 	call	18000b14 <rand>
1800036c:	1007883a 	mov	r3,r2
18000370:	00a00034 	movhi	r2,32768
18000374:	108003c4 	addi	r2,r2,15
18000378:	1884703a 	and	r2,r3,r2
1800037c:	1000040e 	bge	r2,zero,18000390 <paletteTest+0x10c>
18000380:	10bfffc4 	addi	r2,r2,-1
18000384:	00fffc04 	movi	r3,-16
18000388:	10c4b03a 	or	r2,r2,r3
1800038c:	10800044 	addi	r2,r2,1
18000390:	14003fcc 	andi	r16,r2,255
18000394:	8000b140 	call	18000b14 <rand>
18000398:	1007883a 	mov	r3,r2
1800039c:	00a00034 	movhi	r2,32768
180003a0:	108003c4 	addi	r2,r2,15
180003a4:	1884703a 	and	r2,r3,r2
180003a8:	1000040e 	bge	r2,zero,180003bc <paletteTest+0x138>
180003ac:	10bfffc4 	addi	r2,r2,-1
180003b0:	00fffc04 	movi	r3,-16
180003b4:	10c4b03a 	or	r2,r2,r3
180003b8:	10800044 	addi	r2,r2,1
180003bc:	14403fcc 	andi	r17,r2,255
180003c0:	8000b140 	call	18000b14 <rand>
180003c4:	1007883a 	mov	r3,r2
180003c8:	00a00034 	movhi	r2,32768
180003cc:	108003c4 	addi	r2,r2,15
180003d0:	1884703a 	and	r2,r3,r2
180003d4:	1000040e 	bge	r2,zero,180003e8 <paletteTest+0x164>
180003d8:	10bfffc4 	addi	r2,r2,-1
180003dc:	00fffc04 	movi	r3,-16
180003e0:	10c4b03a 	or	r2,r2,r3
180003e4:	10800044 	addi	r2,r2,1
180003e8:	10803fcc 	andi	r2,r2,255
180003ec:	100f883a 	mov	r7,r2
180003f0:	880d883a 	mov	r6,r17
180003f4:	800b883a 	mov	r5,r16
180003f8:	01000044 	movi	r4,1
180003fc:	80005980 	call	18000598 <setColorPalette>
void paletteTest()
{
	textVGAColorClr();
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);

	for (int i = 0; i < 100; i ++)
18000400:	e0bffd17 	ldw	r2,-12(fp)
18000404:	10800044 	addi	r2,r2,1
18000408:	e0bffd15 	stw	r2,-12(fp)
1800040c:	e0bffd17 	ldw	r2,-12(fp)
18000410:	10801910 	cmplti	r2,r2,100
18000414:	103fac1e 	bne	r2,zero,180002c8 <__alt_data_end+0xf80002c8>
		usleep (20000);
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
	}

}
18000418:	0001883a 	nop
1800041c:	e6fffe04 	addi	sp,fp,-8
18000420:	dfc00317 	ldw	ra,12(sp)
18000424:	df000217 	ldw	fp,8(sp)
18000428:	dc400117 	ldw	r17,4(sp)
1800042c:	dc000017 	ldw	r16,0(sp)
18000430:	dec00404 	addi	sp,sp,16
18000434:	f800283a 	ret

18000438 <textVGAColorClr>:
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
18000438:	defffe04 	addi	sp,sp,-8
1800043c:	df000115 	stw	fp,4(sp)
18000440:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
18000444:	e03fff15 	stw	zero,-4(fp)
18000448:	00000706 	br	18000468 <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
1800044c:	d0e00217 	ldw	r3,-32760(gp)
18000450:	e0bfff17 	ldw	r2,-4(fp)
18000454:	1885883a 	add	r2,r3,r2
18000458:	10000005 	stb	zero,0(r2)
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
1800045c:	e0bfff17 	ldw	r2,-4(fp)
18000460:	10800044 	addi	r2,r2,1
18000464:	e0bfff15 	stw	r2,-4(fp)
18000468:	e0bfff17 	ldw	r2,-4(fp)
1800046c:	1084b010 	cmplti	r2,r2,4800
18000470:	103ff61e 	bne	r2,zero,1800044c <__alt_data_end+0xf800044c>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}
18000474:	0001883a 	nop
18000478:	e037883a 	mov	sp,fp
1800047c:	df000017 	ldw	fp,0(sp)
18000480:	dec00104 	addi	sp,sp,4
18000484:	f800283a 	ret

18000488 <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
18000488:	defff704 	addi	sp,sp,-36
1800048c:	dfc00815 	stw	ra,32(sp)
18000490:	df000715 	stw	fp,28(sp)
18000494:	dc000615 	stw	r16,24(sp)
18000498:	df000704 	addi	fp,sp,28
1800049c:	e13ffa15 	stw	r4,-24(fp)
180004a0:	e17ffb15 	stw	r5,-20(fp)
180004a4:	e1bffc15 	stw	r6,-16(fp)
180004a8:	3807883a 	mov	r3,r7
180004ac:	e0800217 	ldw	r2,8(fp)
180004b0:	e0fffd05 	stb	r3,-12(fp)
180004b4:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
180004b8:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
180004bc:	00002706 	br	1800055c <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
180004c0:	d4200217 	ldw	r16,-32760(gp)
180004c4:	01401404 	movi	r5,80
180004c8:	e13ffc17 	ldw	r4,-16(fp)
180004cc:	8000ad40 	call	18000ad4 <__mulsi3>
180004d0:	1007883a 	mov	r3,r2
180004d4:	e0bffb17 	ldw	r2,-20(fp)
180004d8:	1887883a 	add	r3,r3,r2
180004dc:	e0bff917 	ldw	r2,-28(fp)
180004e0:	1885883a 	add	r2,r3,r2
180004e4:	1085883a 	add	r2,r2,r2
180004e8:	1009883a 	mov	r4,r2
180004ec:	e0bffe03 	ldbu	r2,-8(fp)
180004f0:	1004913a 	slli	r2,r2,4
180004f4:	1007883a 	mov	r3,r2
180004f8:	e0bffd03 	ldbu	r2,-12(fp)
180004fc:	1884b03a 	or	r2,r3,r2
18000500:	1007883a 	mov	r3,r2
18000504:	8105883a 	add	r2,r16,r4
18000508:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
1800050c:	d4200217 	ldw	r16,-32760(gp)
18000510:	01401404 	movi	r5,80
18000514:	e13ffc17 	ldw	r4,-16(fp)
18000518:	8000ad40 	call	18000ad4 <__mulsi3>
1800051c:	1007883a 	mov	r3,r2
18000520:	e0bffb17 	ldw	r2,-20(fp)
18000524:	1887883a 	add	r3,r3,r2
18000528:	e0bff917 	ldw	r2,-28(fp)
1800052c:	1885883a 	add	r2,r3,r2
18000530:	1085883a 	add	r2,r2,r2
18000534:	10800044 	addi	r2,r2,1
18000538:	e0fff917 	ldw	r3,-28(fp)
1800053c:	e13ffa17 	ldw	r4,-24(fp)
18000540:	20c7883a 	add	r3,r4,r3
18000544:	18c00003 	ldbu	r3,0(r3)
18000548:	8085883a 	add	r2,r16,r2
1800054c:	10c00005 	stb	r3,0(r2)
		i++;
18000550:	e0bff917 	ldw	r2,-28(fp)
18000554:	10800044 	addi	r2,r2,1
18000558:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
1800055c:	e0bff917 	ldw	r2,-28(fp)
18000560:	e0fffa17 	ldw	r3,-24(fp)
18000564:	1885883a 	add	r2,r3,r2
18000568:	10800003 	ldbu	r2,0(r2)
1800056c:	10803fcc 	andi	r2,r2,255
18000570:	1080201c 	xori	r2,r2,128
18000574:	10bfe004 	addi	r2,r2,-128
18000578:	103fd11e 	bne	r2,zero,180004c0 <__alt_data_end+0xf80004c0>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
1800057c:	0001883a 	nop
18000580:	e6ffff04 	addi	sp,fp,-4
18000584:	dfc00217 	ldw	ra,8(sp)
18000588:	df000117 	ldw	fp,4(sp)
1800058c:	dc000017 	ldw	r16,0(sp)
18000590:	dec00304 	addi	sp,sp,12
18000594:	f800283a 	ret

18000598 <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
18000598:	defffb04 	addi	sp,sp,-20
1800059c:	df000415 	stw	fp,16(sp)
180005a0:	df000404 	addi	fp,sp,16
180005a4:	2011883a 	mov	r8,r4
180005a8:	2809883a 	mov	r4,r5
180005ac:	3007883a 	mov	r3,r6
180005b0:	3805883a 	mov	r2,r7
180005b4:	e23ffc05 	stb	r8,-16(fp)
180005b8:	e13ffd05 	stb	r4,-12(fp)
180005bc:	e0fffe05 	stb	r3,-8(fp)
180005c0:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	if (color % 2 == 0)
180005c4:	e0bffc03 	ldbu	r2,-16(fp)
180005c8:	1080004c 	andi	r2,r2,1
180005cc:	10803fcc 	andi	r2,r2,255
180005d0:	10001a1e 	bne	r2,zero,1800063c <setColorPalette+0xa4>
        vga_ctrl->PALETTE[color / 2] += red << 9 + green << 5 + blue << 1;
180005d4:	d1200217 	ldw	r4,-32760(gp)
180005d8:	e0bffc03 	ldbu	r2,-16(fp)
180005dc:	1004d07a 	srli	r2,r2,1
180005e0:	11403fcc 	andi	r5,r2,255
180005e4:	d0e00217 	ldw	r3,-32760(gp)
180005e8:	10803fcc 	andi	r2,r2,255
180005ec:	10820004 	addi	r2,r2,2048
180005f0:	1085883a 	add	r2,r2,r2
180005f4:	1085883a 	add	r2,r2,r2
180005f8:	1885883a 	add	r2,r3,r2
180005fc:	10c00017 	ldw	r3,0(r2)
18000600:	e1bffd03 	ldbu	r6,-12(fp)
18000604:	e0bffe03 	ldbu	r2,-8(fp)
18000608:	10800244 	addi	r2,r2,9
1800060c:	308c983a 	sll	r6,r6,r2
18000610:	e0bfff03 	ldbu	r2,-4(fp)
18000614:	10800144 	addi	r2,r2,5
18000618:	3084983a 	sll	r2,r6,r2
1800061c:	1085883a 	add	r2,r2,r2
18000620:	1887883a 	add	r3,r3,r2
18000624:	28820004 	addi	r2,r5,2048
18000628:	1085883a 	add	r2,r2,r2
1800062c:	1085883a 	add	r2,r2,r2
18000630:	2085883a 	add	r2,r4,r2
18000634:	10c00015 	stw	r3,0(r2)
    else
        vga_ctrl->PALETTE[color / 2] += red << 21 + green << 17 + blue << 13;

}
18000638:	00001906 	br	180006a0 <setColorPalette+0x108>
{
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)
	if (color % 2 == 0)
        vga_ctrl->PALETTE[color / 2] += red << 9 + green << 5 + blue << 1;
    else
        vga_ctrl->PALETTE[color / 2] += red << 21 + green << 17 + blue << 13;
1800063c:	d1200217 	ldw	r4,-32760(gp)
18000640:	e0bffc03 	ldbu	r2,-16(fp)
18000644:	1004d07a 	srli	r2,r2,1
18000648:	11403fcc 	andi	r5,r2,255
1800064c:	d0e00217 	ldw	r3,-32760(gp)
18000650:	10803fcc 	andi	r2,r2,255
18000654:	10820004 	addi	r2,r2,2048
18000658:	1085883a 	add	r2,r2,r2
1800065c:	1085883a 	add	r2,r2,r2
18000660:	1885883a 	add	r2,r3,r2
18000664:	10800017 	ldw	r2,0(r2)
18000668:	e1bffd03 	ldbu	r6,-12(fp)
1800066c:	e0fffe03 	ldbu	r3,-8(fp)
18000670:	18c00544 	addi	r3,r3,21
18000674:	30cc983a 	sll	r6,r6,r3
18000678:	e0ffff03 	ldbu	r3,-4(fp)
1800067c:	18c00444 	addi	r3,r3,17
18000680:	30c6983a 	sll	r3,r6,r3
18000684:	1806937a 	slli	r3,r3,13
18000688:	10c7883a 	add	r3,r2,r3
1800068c:	28820004 	addi	r2,r5,2048
18000690:	1085883a 	add	r2,r2,r2
18000694:	1085883a 	add	r2,r2,r2
18000698:	2085883a 	add	r2,r4,r2
1800069c:	10c00015 	stw	r3,0(r2)

}
180006a0:	0001883a 	nop
180006a4:	e037883a 	mov	sp,fp
180006a8:	df000017 	ldw	fp,0(sp)
180006ac:	dec00104 	addi	sp,sp,4
180006b0:	f800283a 	ret

180006b4 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
180006b4:	deffe004 	addi	sp,sp,-128
180006b8:	dfc01f15 	stw	ra,124(sp)
180006bc:	df001e15 	stw	fp,120(sp)
180006c0:	dcc01d15 	stw	r19,116(sp)
180006c4:	dc801c15 	stw	r18,112(sp)
180006c8:	dc401b15 	stw	r17,108(sp)
180006cc:	dc001a15 	stw	r16,104(sp)
180006d0:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
180006d4:	80004380 	call	18000438 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
180006d8:	e03fe515 	stw	zero,-108(fp)
180006dc:	00002806 	br	18000780 <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
180006e0:	e0bfe517 	ldw	r2,-108(fp)
180006e4:	14403fcc 	andi	r17,r2,255
180006e8:	04060074 	movhi	r16,6145
180006ec:	84399a04 	addi	r16,r16,-6552
180006f0:	e0bfe517 	ldw	r2,-108(fp)
180006f4:	014005c4 	movi	r5,23
180006f8:	1009883a 	mov	r4,r2
180006fc:	8000ad40 	call	18000ad4 <__mulsi3>
18000700:	8085883a 	add	r2,r16,r2
18000704:	10800504 	addi	r2,r2,20
18000708:	10800003 	ldbu	r2,0(r2)
1800070c:	14803fcc 	andi	r18,r2,255
18000710:	04060074 	movhi	r16,6145
18000714:	84399a04 	addi	r16,r16,-6552
18000718:	e0bfe517 	ldw	r2,-108(fp)
1800071c:	014005c4 	movi	r5,23
18000720:	1009883a 	mov	r4,r2
18000724:	8000ad40 	call	18000ad4 <__mulsi3>
18000728:	8085883a 	add	r2,r16,r2
1800072c:	10800544 	addi	r2,r2,21
18000730:	10800003 	ldbu	r2,0(r2)
18000734:	14c03fcc 	andi	r19,r2,255
18000738:	04060074 	movhi	r16,6145
1800073c:	84399a04 	addi	r16,r16,-6552
18000740:	e0bfe517 	ldw	r2,-108(fp)
18000744:	014005c4 	movi	r5,23
18000748:	1009883a 	mov	r4,r2
1800074c:	8000ad40 	call	18000ad4 <__mulsi3>
18000750:	8085883a 	add	r2,r16,r2
18000754:	10800584 	addi	r2,r2,22
18000758:	10800003 	ldbu	r2,0(r2)
1800075c:	10803fcc 	andi	r2,r2,255
18000760:	100f883a 	mov	r7,r2
18000764:	980d883a 	mov	r6,r19
18000768:	900b883a 	mov	r5,r18
1800076c:	8809883a 	mov	r4,r17
18000770:	80005980 	call	18000598 <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
18000774:	e0bfe517 	ldw	r2,-108(fp)
18000778:	10800044 	addi	r2,r2,1
1800077c:	e0bfe515 	stw	r2,-108(fp)
18000780:	e0bfe517 	ldw	r2,-108(fp)
18000784:	10800410 	cmplti	r2,r2,16
18000788:	103fd51e 	bne	r2,zero,180006e0 <__alt_data_end+0xf80006e0>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
1800078c:	8000b140 	call	18000b14 <rand>
18000790:	1007883a 	mov	r3,r2
18000794:	00a00034 	movhi	r2,32768
18000798:	108003c4 	addi	r2,r2,15
1800079c:	1884703a 	and	r2,r3,r2
180007a0:	1000040e 	bge	r2,zero,180007b4 <textVGAColorScreenSaver+0x100>
180007a4:	10bfffc4 	addi	r2,r2,-1
180007a8:	00fffc04 	movi	r3,-16
180007ac:	10c4b03a 	or	r2,r2,r3
180007b0:	10800044 	addi	r2,r2,1
180007b4:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
180007b8:	8000b140 	call	18000b14 <rand>
180007bc:	1007883a 	mov	r3,r2
180007c0:	00a00034 	movhi	r2,32768
180007c4:	108003c4 	addi	r2,r2,15
180007c8:	1884703a 	and	r2,r3,r2
180007cc:	1000040e 	bge	r2,zero,180007e0 <textVGAColorScreenSaver+0x12c>
180007d0:	10bfffc4 	addi	r2,r2,-1
180007d4:	00fffc04 	movi	r3,-16
180007d8:	10c4b03a 	or	r2,r2,r3
180007dc:	10800044 	addi	r2,r2,1
180007e0:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
180007e4:	00001606 	br	18000840 <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
180007e8:	8000b140 	call	18000b14 <rand>
180007ec:	1007883a 	mov	r3,r2
180007f0:	00a00034 	movhi	r2,32768
180007f4:	108003c4 	addi	r2,r2,15
180007f8:	1884703a 	and	r2,r3,r2
180007fc:	1000040e 	bge	r2,zero,18000810 <textVGAColorScreenSaver+0x15c>
18000800:	10bfffc4 	addi	r2,r2,-1
18000804:	00fffc04 	movi	r3,-16
18000808:	10c4b03a 	or	r2,r2,r3
1800080c:	10800044 	addi	r2,r2,1
18000810:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
18000814:	8000b140 	call	18000b14 <rand>
18000818:	1007883a 	mov	r3,r2
1800081c:	00a00034 	movhi	r2,32768
18000820:	108003c4 	addi	r2,r2,15
18000824:	1884703a 	and	r2,r3,r2
18000828:	1000040e 	bge	r2,zero,1800083c <textVGAColorScreenSaver+0x188>
1800082c:	10bfffc4 	addi	r2,r2,-1
18000830:	00fffc04 	movi	r3,-16
18000834:	10c4b03a 	or	r2,r2,r3
18000838:	10800044 	addi	r2,r2,1
1800083c:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
18000840:	e0ffe317 	ldw	r3,-116(fp)
18000844:	e0bfe417 	ldw	r2,-112(fp)
18000848:	18bfe726 	beq	r3,r2,180007e8 <__alt_data_end+0xf80007e8>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
1800084c:	014005c4 	movi	r5,23
18000850:	e13fe317 	ldw	r4,-116(fp)
18000854:	8000ad40 	call	18000ad4 <__mulsi3>
18000858:	1007883a 	mov	r3,r2
1800085c:	00860074 	movhi	r2,6145
18000860:	10b99a04 	addi	r2,r2,-6552
18000864:	18a1883a 	add	r16,r3,r2
18000868:	014005c4 	movi	r5,23
1800086c:	e13fe417 	ldw	r4,-112(fp)
18000870:	8000ad40 	call	18000ad4 <__mulsi3>
18000874:	1007883a 	mov	r3,r2
18000878:	00860074 	movhi	r2,6145
1800087c:	10b99a04 	addi	r2,r2,-6552
18000880:	1887883a 	add	r3,r3,r2
18000884:	e0bfe804 	addi	r2,fp,-96
18000888:	180f883a 	mov	r7,r3
1800088c:	800d883a 	mov	r6,r16
18000890:	01460074 	movhi	r5,6145
18000894:	29781a04 	addi	r5,r5,-8088
18000898:	1009883a 	mov	r4,r2
1800089c:	8000bd00 	call	18000bd0 <sprintf>
		x = rand() % (80-strlen(color_string));
180008a0:	8000b140 	call	18000b14 <rand>
180008a4:	1021883a 	mov	r16,r2
180008a8:	e0bfe804 	addi	r2,fp,-96
180008ac:	1009883a 	mov	r4,r2
180008b0:	8000c3c0 	call	18000c3c <strlen>
180008b4:	1007883a 	mov	r3,r2
180008b8:	00801404 	movi	r2,80
180008bc:	10c5c83a 	sub	r2,r2,r3
180008c0:	100b883a 	mov	r5,r2
180008c4:	8009883a 	mov	r4,r16
180008c8:	8000a7c0 	call	18000a7c <__umodsi3>
180008cc:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
180008d0:	8000b140 	call	18000b14 <rand>
180008d4:	01400784 	movi	r5,30
180008d8:	1009883a 	mov	r4,r2
180008dc:	80009a40 	call	180009a4 <__modsi3>
180008e0:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
180008e4:	e0bfe417 	ldw	r2,-112(fp)
180008e8:	11003fcc 	andi	r4,r2,255
180008ec:	e0bfe317 	ldw	r2,-116(fp)
180008f0:	10803fcc 	andi	r2,r2,255
180008f4:	e0ffe804 	addi	r3,fp,-96
180008f8:	d8800015 	stw	r2,0(sp)
180008fc:	200f883a 	mov	r7,r4
18000900:	e1bfe717 	ldw	r6,-100(fp)
18000904:	e17fe617 	ldw	r5,-104(fp)
18000908:	1809883a 	mov	r4,r3
1800090c:	80004880 	call	18000488 <textVGADrawColorText>
		usleep (100000);
18000910:	010000b4 	movhi	r4,2
18000914:	2121a804 	addi	r4,r4,-31072
18000918:	800bfe80 	call	1800bfe8 <usleep>
	}
1800091c:	003f9b06 	br	1800078c <__alt_data_end+0xf800078c>

18000920 <__divsi3>:
18000920:	20001b16 	blt	r4,zero,18000990 <__divsi3+0x70>
18000924:	000f883a 	mov	r7,zero
18000928:	28001616 	blt	r5,zero,18000984 <__divsi3+0x64>
1800092c:	200d883a 	mov	r6,r4
18000930:	29001a2e 	bgeu	r5,r4,1800099c <__divsi3+0x7c>
18000934:	00800804 	movi	r2,32
18000938:	00c00044 	movi	r3,1
1800093c:	00000106 	br	18000944 <__divsi3+0x24>
18000940:	10000d26 	beq	r2,zero,18000978 <__divsi3+0x58>
18000944:	294b883a 	add	r5,r5,r5
18000948:	10bfffc4 	addi	r2,r2,-1
1800094c:	18c7883a 	add	r3,r3,r3
18000950:	293ffb36 	bltu	r5,r4,18000940 <__alt_data_end+0xf8000940>
18000954:	0005883a 	mov	r2,zero
18000958:	18000726 	beq	r3,zero,18000978 <__divsi3+0x58>
1800095c:	0005883a 	mov	r2,zero
18000960:	31400236 	bltu	r6,r5,1800096c <__divsi3+0x4c>
18000964:	314dc83a 	sub	r6,r6,r5
18000968:	10c4b03a 	or	r2,r2,r3
1800096c:	1806d07a 	srli	r3,r3,1
18000970:	280ad07a 	srli	r5,r5,1
18000974:	183ffa1e 	bne	r3,zero,18000960 <__alt_data_end+0xf8000960>
18000978:	38000126 	beq	r7,zero,18000980 <__divsi3+0x60>
1800097c:	0085c83a 	sub	r2,zero,r2
18000980:	f800283a 	ret
18000984:	014bc83a 	sub	r5,zero,r5
18000988:	39c0005c 	xori	r7,r7,1
1800098c:	003fe706 	br	1800092c <__alt_data_end+0xf800092c>
18000990:	0109c83a 	sub	r4,zero,r4
18000994:	01c00044 	movi	r7,1
18000998:	003fe306 	br	18000928 <__alt_data_end+0xf8000928>
1800099c:	00c00044 	movi	r3,1
180009a0:	003fee06 	br	1800095c <__alt_data_end+0xf800095c>

180009a4 <__modsi3>:
180009a4:	20001716 	blt	r4,zero,18000a04 <__modsi3+0x60>
180009a8:	000f883a 	mov	r7,zero
180009ac:	2005883a 	mov	r2,r4
180009b0:	28001216 	blt	r5,zero,180009fc <__modsi3+0x58>
180009b4:	2900162e 	bgeu	r5,r4,18000a10 <__modsi3+0x6c>
180009b8:	01800804 	movi	r6,32
180009bc:	00c00044 	movi	r3,1
180009c0:	00000106 	br	180009c8 <__modsi3+0x24>
180009c4:	30000a26 	beq	r6,zero,180009f0 <__modsi3+0x4c>
180009c8:	294b883a 	add	r5,r5,r5
180009cc:	31bfffc4 	addi	r6,r6,-1
180009d0:	18c7883a 	add	r3,r3,r3
180009d4:	293ffb36 	bltu	r5,r4,180009c4 <__alt_data_end+0xf80009c4>
180009d8:	18000526 	beq	r3,zero,180009f0 <__modsi3+0x4c>
180009dc:	1806d07a 	srli	r3,r3,1
180009e0:	11400136 	bltu	r2,r5,180009e8 <__modsi3+0x44>
180009e4:	1145c83a 	sub	r2,r2,r5
180009e8:	280ad07a 	srli	r5,r5,1
180009ec:	183ffb1e 	bne	r3,zero,180009dc <__alt_data_end+0xf80009dc>
180009f0:	38000126 	beq	r7,zero,180009f8 <__modsi3+0x54>
180009f4:	0085c83a 	sub	r2,zero,r2
180009f8:	f800283a 	ret
180009fc:	014bc83a 	sub	r5,zero,r5
18000a00:	003fec06 	br	180009b4 <__alt_data_end+0xf80009b4>
18000a04:	0109c83a 	sub	r4,zero,r4
18000a08:	01c00044 	movi	r7,1
18000a0c:	003fe706 	br	180009ac <__alt_data_end+0xf80009ac>
18000a10:	00c00044 	movi	r3,1
18000a14:	003ff106 	br	180009dc <__alt_data_end+0xf80009dc>

18000a18 <__udivsi3>:
18000a18:	200d883a 	mov	r6,r4
18000a1c:	2900152e 	bgeu	r5,r4,18000a74 <__udivsi3+0x5c>
18000a20:	28001416 	blt	r5,zero,18000a74 <__udivsi3+0x5c>
18000a24:	00800804 	movi	r2,32
18000a28:	00c00044 	movi	r3,1
18000a2c:	00000206 	br	18000a38 <__udivsi3+0x20>
18000a30:	10000e26 	beq	r2,zero,18000a6c <__udivsi3+0x54>
18000a34:	28000516 	blt	r5,zero,18000a4c <__udivsi3+0x34>
18000a38:	294b883a 	add	r5,r5,r5
18000a3c:	10bfffc4 	addi	r2,r2,-1
18000a40:	18c7883a 	add	r3,r3,r3
18000a44:	293ffa36 	bltu	r5,r4,18000a30 <__alt_data_end+0xf8000a30>
18000a48:	18000826 	beq	r3,zero,18000a6c <__udivsi3+0x54>
18000a4c:	0005883a 	mov	r2,zero
18000a50:	31400236 	bltu	r6,r5,18000a5c <__udivsi3+0x44>
18000a54:	314dc83a 	sub	r6,r6,r5
18000a58:	10c4b03a 	or	r2,r2,r3
18000a5c:	1806d07a 	srli	r3,r3,1
18000a60:	280ad07a 	srli	r5,r5,1
18000a64:	183ffa1e 	bne	r3,zero,18000a50 <__alt_data_end+0xf8000a50>
18000a68:	f800283a 	ret
18000a6c:	0005883a 	mov	r2,zero
18000a70:	f800283a 	ret
18000a74:	00c00044 	movi	r3,1
18000a78:	003ff406 	br	18000a4c <__alt_data_end+0xf8000a4c>

18000a7c <__umodsi3>:
18000a7c:	2005883a 	mov	r2,r4
18000a80:	2900122e 	bgeu	r5,r4,18000acc <__umodsi3+0x50>
18000a84:	28001116 	blt	r5,zero,18000acc <__umodsi3+0x50>
18000a88:	01800804 	movi	r6,32
18000a8c:	00c00044 	movi	r3,1
18000a90:	00000206 	br	18000a9c <__umodsi3+0x20>
18000a94:	30000c26 	beq	r6,zero,18000ac8 <__umodsi3+0x4c>
18000a98:	28000516 	blt	r5,zero,18000ab0 <__umodsi3+0x34>
18000a9c:	294b883a 	add	r5,r5,r5
18000aa0:	31bfffc4 	addi	r6,r6,-1
18000aa4:	18c7883a 	add	r3,r3,r3
18000aa8:	293ffa36 	bltu	r5,r4,18000a94 <__alt_data_end+0xf8000a94>
18000aac:	18000626 	beq	r3,zero,18000ac8 <__umodsi3+0x4c>
18000ab0:	1806d07a 	srli	r3,r3,1
18000ab4:	11400136 	bltu	r2,r5,18000abc <__umodsi3+0x40>
18000ab8:	1145c83a 	sub	r2,r2,r5
18000abc:	280ad07a 	srli	r5,r5,1
18000ac0:	183ffb1e 	bne	r3,zero,18000ab0 <__alt_data_end+0xf8000ab0>
18000ac4:	f800283a 	ret
18000ac8:	f800283a 	ret
18000acc:	00c00044 	movi	r3,1
18000ad0:	003ff706 	br	18000ab0 <__alt_data_end+0xf8000ab0>

18000ad4 <__mulsi3>:
18000ad4:	0005883a 	mov	r2,zero
18000ad8:	20000726 	beq	r4,zero,18000af8 <__mulsi3+0x24>
18000adc:	20c0004c 	andi	r3,r4,1
18000ae0:	2008d07a 	srli	r4,r4,1
18000ae4:	18000126 	beq	r3,zero,18000aec <__mulsi3+0x18>
18000ae8:	1145883a 	add	r2,r2,r5
18000aec:	294b883a 	add	r5,r5,r5
18000af0:	203ffa1e 	bne	r4,zero,18000adc <__alt_data_end+0xf8000adc>
18000af4:	f800283a 	ret
18000af8:	f800283a 	ret

18000afc <srand>:
18000afc:	00860074 	movhi	r2,6145
18000b00:	1080a504 	addi	r2,r2,660
18000b04:	10800017 	ldw	r2,0(r2)
18000b08:	11002915 	stw	r4,164(r2)
18000b0c:	10002a15 	stw	zero,168(r2)
18000b10:	f800283a 	ret

18000b14 <rand>:
18000b14:	00860074 	movhi	r2,6145
18000b18:	defffe04 	addi	sp,sp,-8
18000b1c:	1080a504 	addi	r2,r2,660
18000b20:	dc000015 	stw	r16,0(sp)
18000b24:	14000017 	ldw	r16,0(r2)
18000b28:	dfc00115 	stw	ra,4(sp)
18000b2c:	01932574 	movhi	r6,19605
18000b30:	81002917 	ldw	r4,164(r16)
18000b34:	81402a17 	ldw	r5,168(r16)
18000b38:	01d614b4 	movhi	r7,22610
18000b3c:	319fcb44 	addi	r6,r6,32557
18000b40:	39fd0b44 	addi	r7,r7,-3027
18000b44:	80088180 	call	18008818 <__muldi3>
18000b48:	11000044 	addi	r4,r2,1
18000b4c:	2085803a 	cmpltu	r2,r4,r2
18000b50:	10c7883a 	add	r3,r2,r3
18000b54:	00a00034 	movhi	r2,32768
18000b58:	10bfffc4 	addi	r2,r2,-1
18000b5c:	1884703a 	and	r2,r3,r2
18000b60:	81002915 	stw	r4,164(r16)
18000b64:	80c02a15 	stw	r3,168(r16)
18000b68:	dfc00117 	ldw	ra,4(sp)
18000b6c:	dc000017 	ldw	r16,0(sp)
18000b70:	dec00204 	addi	sp,sp,8
18000b74:	f800283a 	ret

18000b78 <_sprintf_r>:
18000b78:	deffe404 	addi	sp,sp,-112
18000b7c:	2807883a 	mov	r3,r5
18000b80:	dfc01a15 	stw	ra,104(sp)
18000b84:	d9c01b15 	stw	r7,108(sp)
18000b88:	00a00034 	movhi	r2,32768
18000b8c:	10bfffc4 	addi	r2,r2,-1
18000b90:	02008204 	movi	r8,520
18000b94:	d8800215 	stw	r2,8(sp)
18000b98:	d8800515 	stw	r2,20(sp)
18000b9c:	d9c01b04 	addi	r7,sp,108
18000ba0:	d80b883a 	mov	r5,sp
18000ba4:	00bfffc4 	movi	r2,-1
18000ba8:	d8c00015 	stw	r3,0(sp)
18000bac:	d8c00415 	stw	r3,16(sp)
18000bb0:	da00030d 	sth	r8,12(sp)
18000bb4:	d880038d 	sth	r2,14(sp)
18000bb8:	8000cd40 	call	18000cd4 <___svfprintf_internal_r>
18000bbc:	d8c00017 	ldw	r3,0(sp)
18000bc0:	18000005 	stb	zero,0(r3)
18000bc4:	dfc01a17 	ldw	ra,104(sp)
18000bc8:	dec01c04 	addi	sp,sp,112
18000bcc:	f800283a 	ret

18000bd0 <sprintf>:
18000bd0:	deffe304 	addi	sp,sp,-116
18000bd4:	2007883a 	mov	r3,r4
18000bd8:	dfc01a15 	stw	ra,104(sp)
18000bdc:	d9801b15 	stw	r6,108(sp)
18000be0:	d9c01c15 	stw	r7,112(sp)
18000be4:	01060074 	movhi	r4,6145
18000be8:	2100a504 	addi	r4,r4,660
18000bec:	21000017 	ldw	r4,0(r4)
18000bf0:	00a00034 	movhi	r2,32768
18000bf4:	10bfffc4 	addi	r2,r2,-1
18000bf8:	280d883a 	mov	r6,r5
18000bfc:	02008204 	movi	r8,520
18000c00:	d8800215 	stw	r2,8(sp)
18000c04:	d8800515 	stw	r2,20(sp)
18000c08:	d9c01b04 	addi	r7,sp,108
18000c0c:	d80b883a 	mov	r5,sp
18000c10:	00bfffc4 	movi	r2,-1
18000c14:	d8c00015 	stw	r3,0(sp)
18000c18:	d8c00415 	stw	r3,16(sp)
18000c1c:	da00030d 	sth	r8,12(sp)
18000c20:	d880038d 	sth	r2,14(sp)
18000c24:	8000cd40 	call	18000cd4 <___svfprintf_internal_r>
18000c28:	d8c00017 	ldw	r3,0(sp)
18000c2c:	18000005 	stb	zero,0(r3)
18000c30:	dfc01a17 	ldw	ra,104(sp)
18000c34:	dec01d04 	addi	sp,sp,116
18000c38:	f800283a 	ret

18000c3c <strlen>:
18000c3c:	208000cc 	andi	r2,r4,3
18000c40:	10002026 	beq	r2,zero,18000cc4 <strlen+0x88>
18000c44:	20800007 	ldb	r2,0(r4)
18000c48:	10002026 	beq	r2,zero,18000ccc <strlen+0x90>
18000c4c:	2005883a 	mov	r2,r4
18000c50:	00000206 	br	18000c5c <strlen+0x20>
18000c54:	10c00007 	ldb	r3,0(r2)
18000c58:	18001826 	beq	r3,zero,18000cbc <strlen+0x80>
18000c5c:	10800044 	addi	r2,r2,1
18000c60:	10c000cc 	andi	r3,r2,3
18000c64:	183ffb1e 	bne	r3,zero,18000c54 <__alt_data_end+0xf8000c54>
18000c68:	10c00017 	ldw	r3,0(r2)
18000c6c:	01ffbff4 	movhi	r7,65279
18000c70:	39ffbfc4 	addi	r7,r7,-257
18000c74:	00ca303a 	nor	r5,zero,r3
18000c78:	01a02074 	movhi	r6,32897
18000c7c:	19c7883a 	add	r3,r3,r7
18000c80:	31a02004 	addi	r6,r6,-32640
18000c84:	1946703a 	and	r3,r3,r5
18000c88:	1986703a 	and	r3,r3,r6
18000c8c:	1800091e 	bne	r3,zero,18000cb4 <strlen+0x78>
18000c90:	10800104 	addi	r2,r2,4
18000c94:	10c00017 	ldw	r3,0(r2)
18000c98:	19cb883a 	add	r5,r3,r7
18000c9c:	00c6303a 	nor	r3,zero,r3
18000ca0:	28c6703a 	and	r3,r5,r3
18000ca4:	1986703a 	and	r3,r3,r6
18000ca8:	183ff926 	beq	r3,zero,18000c90 <__alt_data_end+0xf8000c90>
18000cac:	00000106 	br	18000cb4 <strlen+0x78>
18000cb0:	10800044 	addi	r2,r2,1
18000cb4:	10c00007 	ldb	r3,0(r2)
18000cb8:	183ffd1e 	bne	r3,zero,18000cb0 <__alt_data_end+0xf8000cb0>
18000cbc:	1105c83a 	sub	r2,r2,r4
18000cc0:	f800283a 	ret
18000cc4:	2005883a 	mov	r2,r4
18000cc8:	003fe706 	br	18000c68 <__alt_data_end+0xf8000c68>
18000ccc:	0005883a 	mov	r2,zero
18000cd0:	f800283a 	ret

18000cd4 <___svfprintf_internal_r>:
18000cd4:	deffb704 	addi	sp,sp,-292
18000cd8:	dfc04815 	stw	ra,288(sp)
18000cdc:	ddc04615 	stw	r23,280(sp)
18000ce0:	d9402d15 	stw	r5,180(sp)
18000ce4:	d9003915 	stw	r4,228(sp)
18000ce8:	302f883a 	mov	r23,r6
18000cec:	d9c02e15 	stw	r7,184(sp)
18000cf0:	df004715 	stw	fp,284(sp)
18000cf4:	dd804515 	stw	r22,276(sp)
18000cf8:	dd404415 	stw	r21,272(sp)
18000cfc:	dd004315 	stw	r20,268(sp)
18000d00:	dcc04215 	stw	r19,264(sp)
18000d04:	dc804115 	stw	r18,260(sp)
18000d08:	dc404015 	stw	r17,256(sp)
18000d0c:	dc003f15 	stw	r16,252(sp)
18000d10:	80048ec0 	call	180048ec <_localeconv_r>
18000d14:	10800017 	ldw	r2,0(r2)
18000d18:	1009883a 	mov	r4,r2
18000d1c:	d8803415 	stw	r2,208(sp)
18000d20:	8000c3c0 	call	18000c3c <strlen>
18000d24:	d8c02d17 	ldw	r3,180(sp)
18000d28:	d8803815 	stw	r2,224(sp)
18000d2c:	1880030b 	ldhu	r2,12(r3)
18000d30:	1080200c 	andi	r2,r2,128
18000d34:	10000226 	beq	r2,zero,18000d40 <___svfprintf_internal_r+0x6c>
18000d38:	18800417 	ldw	r2,16(r3)
18000d3c:	1006b126 	beq	r2,zero,18002804 <___svfprintf_internal_r+0x1b30>
18000d40:	dcc03917 	ldw	r19,228(sp)
18000d44:	d8c00404 	addi	r3,sp,16
18000d48:	05460074 	movhi	r21,6145
18000d4c:	d9001e04 	addi	r4,sp,120
18000d50:	ad783384 	addi	r21,r21,-7986
18000d54:	d8c01e15 	stw	r3,120(sp)
18000d58:	d8002015 	stw	zero,128(sp)
18000d5c:	d8001f15 	stw	zero,124(sp)
18000d60:	d8003315 	stw	zero,204(sp)
18000d64:	d8003615 	stw	zero,216(sp)
18000d68:	d8003715 	stw	zero,220(sp)
18000d6c:	1811883a 	mov	r8,r3
18000d70:	d8003a15 	stw	zero,232(sp)
18000d74:	d8003b15 	stw	zero,236(sp)
18000d78:	d8002f15 	stw	zero,188(sp)
18000d7c:	d9002815 	stw	r4,160(sp)
18000d80:	b8800007 	ldb	r2,0(r23)
18000d84:	10027726 	beq	r2,zero,18001764 <___svfprintf_internal_r+0xa90>
18000d88:	00c00944 	movi	r3,37
18000d8c:	b823883a 	mov	r17,r23
18000d90:	10c0021e 	bne	r2,r3,18000d9c <___svfprintf_internal_r+0xc8>
18000d94:	00001406 	br	18000de8 <___svfprintf_internal_r+0x114>
18000d98:	10c00326 	beq	r2,r3,18000da8 <___svfprintf_internal_r+0xd4>
18000d9c:	8c400044 	addi	r17,r17,1
18000da0:	88800007 	ldb	r2,0(r17)
18000da4:	103ffc1e 	bne	r2,zero,18000d98 <__alt_data_end+0xf8000d98>
18000da8:	8de1c83a 	sub	r16,r17,r23
18000dac:	80000e26 	beq	r16,zero,18000de8 <___svfprintf_internal_r+0x114>
18000db0:	d8c02017 	ldw	r3,128(sp)
18000db4:	d8801f17 	ldw	r2,124(sp)
18000db8:	45c00015 	stw	r23,0(r8)
18000dbc:	1c07883a 	add	r3,r3,r16
18000dc0:	10800044 	addi	r2,r2,1
18000dc4:	d8c02015 	stw	r3,128(sp)
18000dc8:	44000115 	stw	r16,4(r8)
18000dcc:	d8801f15 	stw	r2,124(sp)
18000dd0:	00c001c4 	movi	r3,7
18000dd4:	18809916 	blt	r3,r2,1800103c <___svfprintf_internal_r+0x368>
18000dd8:	42000204 	addi	r8,r8,8
18000ddc:	d9402f17 	ldw	r5,188(sp)
18000de0:	2c0b883a 	add	r5,r5,r16
18000de4:	d9402f15 	stw	r5,188(sp)
18000de8:	88800007 	ldb	r2,0(r17)
18000dec:	10009a26 	beq	r2,zero,18001058 <___svfprintf_internal_r+0x384>
18000df0:	8dc00044 	addi	r23,r17,1
18000df4:	8c400047 	ldb	r17,1(r17)
18000df8:	0021883a 	mov	r16,zero
18000dfc:	00bfffc4 	movi	r2,-1
18000e00:	0025883a 	mov	r18,zero
18000e04:	dc002905 	stb	r16,164(sp)
18000e08:	d8002785 	stb	zero,158(sp)
18000e0c:	d8002b05 	stb	zero,172(sp)
18000e10:	d8802a15 	stw	r2,168(sp)
18000e14:	d8003115 	stw	zero,196(sp)
18000e18:	05001604 	movi	r20,88
18000e1c:	05800244 	movi	r22,9
18000e20:	4039883a 	mov	fp,r8
18000e24:	9021883a 	mov	r16,r18
18000e28:	bdc00044 	addi	r23,r23,1
18000e2c:	88bff804 	addi	r2,r17,-32
18000e30:	a0831e36 	bltu	r20,r2,18001aac <___svfprintf_internal_r+0xdd8>
18000e34:	100490ba 	slli	r2,r2,2
18000e38:	00c60034 	movhi	r3,6144
18000e3c:	18c39304 	addi	r3,r3,3660
18000e40:	10c5883a 	add	r2,r2,r3
18000e44:	10800017 	ldw	r2,0(r2)
18000e48:	1000683a 	jmp	r2
18000e4c:	180019f4 	orhi	zero,r3,103
18000e50:	18001aac 	andhi	zero,r3,106
18000e54:	18001aac 	andhi	zero,r3,106
18000e58:	180019e8 	cmpgeui	zero,r3,103
18000e5c:	18001aac 	andhi	zero,r3,106
18000e60:	18001aac 	andhi	zero,r3,106
18000e64:	18001aac 	andhi	zero,r3,106
18000e68:	18001aac 	andhi	zero,r3,106
18000e6c:	18001aac 	andhi	zero,r3,106
18000e70:	18001aac 	andhi	zero,r3,106
18000e74:	180010b4 	orhi	zero,r3,66
18000e78:	180018f8 	rdprs	zero,r3,99
18000e7c:	18001aac 	andhi	zero,r3,106
18000e80:	18000fc0 	call	118000fc <__alt_mem_onchip_memory2_0+0x118000fc>
18000e84:	180010d8 	cmpnei	zero,r3,67
18000e88:	18001aac 	andhi	zero,r3,106
18000e8c:	18001164 	muli	zero,r3,69
18000e90:	18001128 	cmpgeui	zero,r3,68
18000e94:	18001128 	cmpgeui	zero,r3,68
18000e98:	18001128 	cmpgeui	zero,r3,68
18000e9c:	18001128 	cmpgeui	zero,r3,68
18000ea0:	18001128 	cmpgeui	zero,r3,68
18000ea4:	18001128 	cmpgeui	zero,r3,68
18000ea8:	18001128 	cmpgeui	zero,r3,68
18000eac:	18001128 	cmpgeui	zero,r3,68
18000eb0:	18001128 	cmpgeui	zero,r3,68
18000eb4:	18001aac 	andhi	zero,r3,106
18000eb8:	18001aac 	andhi	zero,r3,106
18000ebc:	18001aac 	andhi	zero,r3,106
18000ec0:	18001aac 	andhi	zero,r3,106
18000ec4:	18001aac 	andhi	zero,r3,106
18000ec8:	18001aac 	andhi	zero,r3,106
18000ecc:	18001aac 	andhi	zero,r3,106
18000ed0:	18001aac 	andhi	zero,r3,106
18000ed4:	18001aac 	andhi	zero,r3,106
18000ed8:	18001aac 	andhi	zero,r3,106
18000edc:	18001228 	cmpgeui	zero,r3,72
18000ee0:	18001170 	cmpltui	zero,r3,69
18000ee4:	18001aac 	andhi	zero,r3,106
18000ee8:	18001170 	cmpltui	zero,r3,69
18000eec:	18001aac 	andhi	zero,r3,106
18000ef0:	18001aac 	andhi	zero,r3,106
18000ef4:	18001aac 	andhi	zero,r3,106
18000ef8:	18001aac 	andhi	zero,r3,106
18000efc:	1800121c 	xori	zero,r3,72
18000f00:	18001aac 	andhi	zero,r3,106
18000f04:	18001aac 	andhi	zero,r3,106
18000f08:	180012f0 	cmpltui	zero,r3,75
18000f0c:	18001aac 	andhi	zero,r3,106
18000f10:	18001aac 	andhi	zero,r3,106
18000f14:	18001aac 	andhi	zero,r3,106
18000f18:	18001aac 	andhi	zero,r3,106
18000f1c:	18001aac 	andhi	zero,r3,106
18000f20:	1800176c 	andhi	zero,r3,93
18000f24:	18001aac 	andhi	zero,r3,106
18000f28:	18001aac 	andhi	zero,r3,106
18000f2c:	180017d8 	cmpnei	zero,r3,95
18000f30:	18001aac 	andhi	zero,r3,106
18000f34:	18001aac 	andhi	zero,r3,106
18000f38:	18001aac 	andhi	zero,r3,106
18000f3c:	18001aac 	andhi	zero,r3,106
18000f40:	18001aac 	andhi	zero,r3,106
18000f44:	18001aac 	andhi	zero,r3,106
18000f48:	18001aac 	andhi	zero,r3,106
18000f4c:	18001aac 	andhi	zero,r3,106
18000f50:	18001aac 	andhi	zero,r3,106
18000f54:	18001aac 	andhi	zero,r3,106
18000f58:	18001894 	ori	zero,r3,98
18000f5c:	18001a14 	ori	zero,r3,104
18000f60:	18001170 	cmpltui	zero,r3,69
18000f64:	18001170 	cmpltui	zero,r3,69
18000f68:	18001170 	cmpltui	zero,r3,69
18000f6c:	18001a88 	cmpgei	zero,r3,106
18000f70:	18001a14 	ori	zero,r3,104
18000f74:	18001aac 	andhi	zero,r3,106
18000f78:	18001aac 	andhi	zero,r3,106
18000f7c:	18001a34 	orhi	zero,r3,104
18000f80:	18001aac 	andhi	zero,r3,106
18000f84:	18001a48 	cmpgei	zero,r3,105
18000f88:	180018d8 	cmpnei	zero,r3,99
18000f8c:	18000fcc 	andi	zero,r3,63
18000f90:	18001910 	cmplti	zero,r3,100
18000f94:	18001aac 	andhi	zero,r3,106
18000f98:	1800191c 	xori	zero,r3,100
18000f9c:	18001aac 	andhi	zero,r3,106
18000fa0:	18001980 	call	11800198 <__alt_mem_onchip_memory2_0+0x11800198>
18000fa4:	18001aac 	andhi	zero,r3,106
18000fa8:	18001aac 	andhi	zero,r3,106
18000fac:	180019a0 	cmpeqi	zero,r3,102
18000fb0:	d8c03117 	ldw	r3,196(sp)
18000fb4:	d8802e15 	stw	r2,184(sp)
18000fb8:	00c7c83a 	sub	r3,zero,r3
18000fbc:	d8c03115 	stw	r3,196(sp)
18000fc0:	84000114 	ori	r16,r16,4
18000fc4:	bc400007 	ldb	r17,0(r23)
18000fc8:	003f9706 	br	18000e28 <__alt_data_end+0xf8000e28>
18000fcc:	00800c04 	movi	r2,48
18000fd0:	d8802705 	stb	r2,156(sp)
18000fd4:	00801e04 	movi	r2,120
18000fd8:	d8802745 	stb	r2,157(sp)
18000fdc:	d9002a17 	ldw	r4,168(sp)
18000fe0:	d8802e17 	ldw	r2,184(sp)
18000fe4:	d8002785 	stb	zero,158(sp)
18000fe8:	e011883a 	mov	r8,fp
18000fec:	10c00104 	addi	r3,r2,4
18000ff0:	15000017 	ldw	r20,0(r2)
18000ff4:	002d883a 	mov	r22,zero
18000ff8:	80800094 	ori	r2,r16,2
18000ffc:	2002b616 	blt	r4,zero,18001ad8 <___svfprintf_internal_r+0xe04>
18001000:	00bfdfc4 	movi	r2,-129
18001004:	80a4703a 	and	r18,r16,r2
18001008:	d8c02e15 	stw	r3,184(sp)
1800100c:	94800094 	ori	r18,r18,2
18001010:	a002a01e 	bne	r20,zero,18001a94 <___svfprintf_internal_r+0xdc0>
18001014:	01460074 	movhi	r5,6145
18001018:	29782c04 	addi	r5,r5,-8016
1800101c:	d9403a15 	stw	r5,232(sp)
18001020:	04401e04 	movi	r17,120
18001024:	d8c02a17 	ldw	r3,168(sp)
18001028:	0039883a 	mov	fp,zero
1800102c:	1801e626 	beq	r3,zero,180017c8 <___svfprintf_internal_r+0xaf4>
18001030:	0029883a 	mov	r20,zero
18001034:	002d883a 	mov	r22,zero
18001038:	00020506 	br	18001850 <___svfprintf_internal_r+0xb7c>
1800103c:	d9402d17 	ldw	r5,180(sp)
18001040:	d9801e04 	addi	r6,sp,120
18001044:	9809883a 	mov	r4,r19
18001048:	80065b00 	call	180065b0 <__ssprint_r>
1800104c:	1000081e 	bne	r2,zero,18001070 <___svfprintf_internal_r+0x39c>
18001050:	da000404 	addi	r8,sp,16
18001054:	003f6106 	br	18000ddc <__alt_data_end+0xf8000ddc>
18001058:	d8802017 	ldw	r2,128(sp)
1800105c:	10000426 	beq	r2,zero,18001070 <___svfprintf_internal_r+0x39c>
18001060:	d9402d17 	ldw	r5,180(sp)
18001064:	d9003917 	ldw	r4,228(sp)
18001068:	d9801e04 	addi	r6,sp,120
1800106c:	80065b00 	call	180065b0 <__ssprint_r>
18001070:	d8802d17 	ldw	r2,180(sp)
18001074:	10c0030b 	ldhu	r3,12(r2)
18001078:	d8802f17 	ldw	r2,188(sp)
1800107c:	18c0100c 	andi	r3,r3,64
18001080:	1806251e 	bne	r3,zero,18002918 <___svfprintf_internal_r+0x1c44>
18001084:	dfc04817 	ldw	ra,288(sp)
18001088:	df004717 	ldw	fp,284(sp)
1800108c:	ddc04617 	ldw	r23,280(sp)
18001090:	dd804517 	ldw	r22,276(sp)
18001094:	dd404417 	ldw	r21,272(sp)
18001098:	dd004317 	ldw	r20,268(sp)
1800109c:	dcc04217 	ldw	r19,264(sp)
180010a0:	dc804117 	ldw	r18,260(sp)
180010a4:	dc404017 	ldw	r17,256(sp)
180010a8:	dc003f17 	ldw	r16,252(sp)
180010ac:	dec04904 	addi	sp,sp,292
180010b0:	f800283a 	ret
180010b4:	d9002e17 	ldw	r4,184(sp)
180010b8:	d9402e17 	ldw	r5,184(sp)
180010bc:	21000017 	ldw	r4,0(r4)
180010c0:	28800104 	addi	r2,r5,4
180010c4:	d9003115 	stw	r4,196(sp)
180010c8:	203fb916 	blt	r4,zero,18000fb0 <__alt_data_end+0xf8000fb0>
180010cc:	d8802e15 	stw	r2,184(sp)
180010d0:	bc400007 	ldb	r17,0(r23)
180010d4:	003f5406 	br	18000e28 <__alt_data_end+0xf8000e28>
180010d8:	bc400007 	ldb	r17,0(r23)
180010dc:	01000a84 	movi	r4,42
180010e0:	b8c00044 	addi	r3,r23,1
180010e4:	89076926 	beq	r17,r4,18002e8c <___svfprintf_internal_r+0x21b8>
180010e8:	8cbff404 	addi	r18,r17,-48
180010ec:	b486b936 	bltu	r22,r18,18002bd4 <___svfprintf_internal_r+0x1f00>
180010f0:	0009883a 	mov	r4,zero
180010f4:	1823883a 	mov	r17,r3
180010f8:	01400284 	movi	r5,10
180010fc:	8000ad40 	call	18000ad4 <__mulsi3>
18001100:	88c00007 	ldb	r3,0(r17)
18001104:	1489883a 	add	r4,r2,r18
18001108:	8dc00044 	addi	r23,r17,1
1800110c:	1cbff404 	addi	r18,r3,-48
18001110:	b823883a 	mov	r17,r23
18001114:	b4bff82e 	bgeu	r22,r18,180010f8 <__alt_data_end+0xf80010f8>
18001118:	1823883a 	mov	r17,r3
1800111c:	20060416 	blt	r4,zero,18002930 <___svfprintf_internal_r+0x1c5c>
18001120:	d9002a15 	stw	r4,168(sp)
18001124:	003f4106 	br	18000e2c <__alt_data_end+0xf8000e2c>
18001128:	8cbff404 	addi	r18,r17,-48
1800112c:	d8003115 	stw	zero,196(sp)
18001130:	0009883a 	mov	r4,zero
18001134:	b823883a 	mov	r17,r23
18001138:	01400284 	movi	r5,10
1800113c:	8000ad40 	call	18000ad4 <__mulsi3>
18001140:	88c00007 	ldb	r3,0(r17)
18001144:	9089883a 	add	r4,r18,r2
18001148:	bdc00044 	addi	r23,r23,1
1800114c:	1cbff404 	addi	r18,r3,-48
18001150:	b823883a 	mov	r17,r23
18001154:	b4bff82e 	bgeu	r22,r18,18001138 <__alt_data_end+0xf8001138>
18001158:	1823883a 	mov	r17,r3
1800115c:	d9003115 	stw	r4,196(sp)
18001160:	003f3206 	br	18000e2c <__alt_data_end+0xf8000e2c>
18001164:	84002014 	ori	r16,r16,128
18001168:	bc400007 	ldb	r17,0(r23)
1800116c:	003f2e06 	br	18000e28 <__alt_data_end+0xf8000e28>
18001170:	8025883a 	mov	r18,r16
18001174:	dc002903 	ldbu	r16,164(sp)
18001178:	e011883a 	mov	r8,fp
1800117c:	84003fcc 	andi	r16,r16,255
18001180:	8007721e 	bne	r16,zero,18002f4c <___svfprintf_internal_r+0x2278>
18001184:	9080020c 	andi	r2,r18,8
18001188:	1004a526 	beq	r2,zero,18002420 <___svfprintf_internal_r+0x174c>
1800118c:	d9002e17 	ldw	r4,184(sp)
18001190:	d9402e17 	ldw	r5,184(sp)
18001194:	d8802e17 	ldw	r2,184(sp)
18001198:	21000017 	ldw	r4,0(r4)
1800119c:	29400117 	ldw	r5,4(r5)
180011a0:	10800204 	addi	r2,r2,8
180011a4:	d9003615 	stw	r4,216(sp)
180011a8:	d9403715 	stw	r5,220(sp)
180011ac:	d8802e15 	stw	r2,184(sp)
180011b0:	d9003617 	ldw	r4,216(sp)
180011b4:	d9403717 	ldw	r5,220(sp)
180011b8:	da003e15 	stw	r8,248(sp)
180011bc:	04000044 	movi	r16,1
180011c0:	800640c0 	call	1800640c <__fpclassifyd>
180011c4:	da003e17 	ldw	r8,248(sp)
180011c8:	1404731e 	bne	r2,r16,18002398 <___svfprintf_internal_r+0x16c4>
180011cc:	d9003617 	ldw	r4,216(sp)
180011d0:	d9403717 	ldw	r5,220(sp)
180011d4:	000d883a 	mov	r6,zero
180011d8:	000f883a 	mov	r7,zero
180011dc:	800a8c40 	call	1800a8c4 <__ledf2>
180011e0:	da003e17 	ldw	r8,248(sp)
180011e4:	10061b16 	blt	r2,zero,18002a54 <___svfprintf_internal_r+0x1d80>
180011e8:	df002783 	ldbu	fp,158(sp)
180011ec:	008011c4 	movi	r2,71
180011f0:	1445810e 	bge	r2,r17,180027f8 <___svfprintf_internal_r+0x1b24>
180011f4:	04060074 	movhi	r16,6145
180011f8:	84382404 	addi	r16,r16,-8048
180011fc:	00c000c4 	movi	r3,3
18001200:	00bfdfc4 	movi	r2,-129
18001204:	d8c02915 	stw	r3,164(sp)
18001208:	90a4703a 	and	r18,r18,r2
1800120c:	d8c02b15 	stw	r3,172(sp)
18001210:	d8002a15 	stw	zero,168(sp)
18001214:	d8003215 	stw	zero,200(sp)
18001218:	00006c06 	br	180013cc <___svfprintf_internal_r+0x6f8>
1800121c:	84000214 	ori	r16,r16,8
18001220:	bc400007 	ldb	r17,0(r23)
18001224:	003f0006 	br	18000e28 <__alt_data_end+0xf8000e28>
18001228:	8025883a 	mov	r18,r16
1800122c:	dc002903 	ldbu	r16,164(sp)
18001230:	e011883a 	mov	r8,fp
18001234:	84003fcc 	andi	r16,r16,255
18001238:	80073f1e 	bne	r16,zero,18002f38 <___svfprintf_internal_r+0x2264>
1800123c:	94800414 	ori	r18,r18,16
18001240:	9080080c 	andi	r2,r18,32
18001244:	1003bb26 	beq	r2,zero,18002134 <___svfprintf_internal_r+0x1460>
18001248:	d9002e17 	ldw	r4,184(sp)
1800124c:	20800117 	ldw	r2,4(r4)
18001250:	25000017 	ldw	r20,0(r4)
18001254:	21000204 	addi	r4,r4,8
18001258:	d9002e15 	stw	r4,184(sp)
1800125c:	102d883a 	mov	r22,r2
18001260:	1003bd16 	blt	r2,zero,18002158 <___svfprintf_internal_r+0x1484>
18001264:	d9002a17 	ldw	r4,168(sp)
18001268:	df002783 	ldbu	fp,158(sp)
1800126c:	2003d016 	blt	r4,zero,180021b0 <___svfprintf_internal_r+0x14dc>
18001270:	00ffdfc4 	movi	r3,-129
18001274:	a584b03a 	or	r2,r20,r22
18001278:	90e4703a 	and	r18,r18,r3
1800127c:	10015026 	beq	r2,zero,180017c0 <___svfprintf_internal_r+0xaec>
18001280:	b0037026 	beq	r22,zero,18002044 <___svfprintf_internal_r+0x1370>
18001284:	dc402915 	stw	r17,164(sp)
18001288:	dc001e04 	addi	r16,sp,120
1800128c:	b023883a 	mov	r17,r22
18001290:	402d883a 	mov	r22,r8
18001294:	a009883a 	mov	r4,r20
18001298:	880b883a 	mov	r5,r17
1800129c:	01800284 	movi	r6,10
180012a0:	000f883a 	mov	r7,zero
180012a4:	8008f200 	call	18008f20 <__umoddi3>
180012a8:	10800c04 	addi	r2,r2,48
180012ac:	843fffc4 	addi	r16,r16,-1
180012b0:	a009883a 	mov	r4,r20
180012b4:	880b883a 	mov	r5,r17
180012b8:	80800005 	stb	r2,0(r16)
180012bc:	01800284 	movi	r6,10
180012c0:	000f883a 	mov	r7,zero
180012c4:	80089240 	call	18008924 <__udivdi3>
180012c8:	1029883a 	mov	r20,r2
180012cc:	10c4b03a 	or	r2,r2,r3
180012d0:	1823883a 	mov	r17,r3
180012d4:	103fef1e 	bne	r2,zero,18001294 <__alt_data_end+0xf8001294>
180012d8:	d8c02817 	ldw	r3,160(sp)
180012dc:	dc402917 	ldw	r17,164(sp)
180012e0:	b011883a 	mov	r8,r22
180012e4:	1c07c83a 	sub	r3,r3,r16
180012e8:	d8c02b15 	stw	r3,172(sp)
180012ec:	00003106 	br	180013b4 <___svfprintf_internal_r+0x6e0>
180012f0:	8025883a 	mov	r18,r16
180012f4:	dc002903 	ldbu	r16,164(sp)
180012f8:	e011883a 	mov	r8,fp
180012fc:	84003fcc 	andi	r16,r16,255
18001300:	80070a1e 	bne	r16,zero,18002f2c <___svfprintf_internal_r+0x2258>
18001304:	94800414 	ori	r18,r18,16
18001308:	9080080c 	andi	r2,r18,32
1800130c:	1002f626 	beq	r2,zero,18001ee8 <___svfprintf_internal_r+0x1214>
18001310:	d9002e17 	ldw	r4,184(sp)
18001314:	d9402a17 	ldw	r5,168(sp)
18001318:	d8002785 	stb	zero,158(sp)
1800131c:	20800204 	addi	r2,r4,8
18001320:	25000017 	ldw	r20,0(r4)
18001324:	25800117 	ldw	r22,4(r4)
18001328:	28043716 	blt	r5,zero,18002408 <___svfprintf_internal_r+0x1734>
1800132c:	013fdfc4 	movi	r4,-129
18001330:	a586b03a 	or	r3,r20,r22
18001334:	d8802e15 	stw	r2,184(sp)
18001338:	9124703a 	and	r18,r18,r4
1800133c:	1802f71e 	bne	r3,zero,18001f1c <___svfprintf_internal_r+0x1248>
18001340:	d9402a17 	ldw	r5,168(sp)
18001344:	0039883a 	mov	fp,zero
18001348:	2806df26 	beq	r5,zero,18002ec8 <___svfprintf_internal_r+0x21f4>
1800134c:	0029883a 	mov	r20,zero
18001350:	002d883a 	mov	r22,zero
18001354:	dc001e04 	addi	r16,sp,120
18001358:	a006d0fa 	srli	r3,r20,3
1800135c:	b008977a 	slli	r4,r22,29
18001360:	b02cd0fa 	srli	r22,r22,3
18001364:	a50001cc 	andi	r20,r20,7
18001368:	a0800c04 	addi	r2,r20,48
1800136c:	843fffc4 	addi	r16,r16,-1
18001370:	20e8b03a 	or	r20,r4,r3
18001374:	80800005 	stb	r2,0(r16)
18001378:	a586b03a 	or	r3,r20,r22
1800137c:	183ff61e 	bne	r3,zero,18001358 <__alt_data_end+0xf8001358>
18001380:	90c0004c 	andi	r3,r18,1
18001384:	18013f26 	beq	r3,zero,18001884 <___svfprintf_internal_r+0xbb0>
18001388:	10803fcc 	andi	r2,r2,255
1800138c:	1080201c 	xori	r2,r2,128
18001390:	10bfe004 	addi	r2,r2,-128
18001394:	00c00c04 	movi	r3,48
18001398:	10c13a26 	beq	r2,r3,18001884 <___svfprintf_internal_r+0xbb0>
1800139c:	80ffffc5 	stb	r3,-1(r16)
180013a0:	d8c02817 	ldw	r3,160(sp)
180013a4:	80bfffc4 	addi	r2,r16,-1
180013a8:	1021883a 	mov	r16,r2
180013ac:	1887c83a 	sub	r3,r3,r2
180013b0:	d8c02b15 	stw	r3,172(sp)
180013b4:	d8802b17 	ldw	r2,172(sp)
180013b8:	d9002a17 	ldw	r4,168(sp)
180013bc:	1100010e 	bge	r2,r4,180013c4 <___svfprintf_internal_r+0x6f0>
180013c0:	2005883a 	mov	r2,r4
180013c4:	d8802915 	stw	r2,164(sp)
180013c8:	d8003215 	stw	zero,200(sp)
180013cc:	e7003fcc 	andi	fp,fp,255
180013d0:	e700201c 	xori	fp,fp,128
180013d4:	e73fe004 	addi	fp,fp,-128
180013d8:	e0000326 	beq	fp,zero,180013e8 <___svfprintf_internal_r+0x714>
180013dc:	d8c02917 	ldw	r3,164(sp)
180013e0:	18c00044 	addi	r3,r3,1
180013e4:	d8c02915 	stw	r3,164(sp)
180013e8:	90c0008c 	andi	r3,r18,2
180013ec:	d8c02c15 	stw	r3,176(sp)
180013f0:	18000326 	beq	r3,zero,18001400 <___svfprintf_internal_r+0x72c>
180013f4:	d8c02917 	ldw	r3,164(sp)
180013f8:	18c00084 	addi	r3,r3,2
180013fc:	d8c02915 	stw	r3,164(sp)
18001400:	90c0210c 	andi	r3,r18,132
18001404:	d8c03015 	stw	r3,192(sp)
18001408:	1801c31e 	bne	r3,zero,18001b18 <___svfprintf_internal_r+0xe44>
1800140c:	d9003117 	ldw	r4,196(sp)
18001410:	d8c02917 	ldw	r3,164(sp)
18001414:	20e9c83a 	sub	r20,r4,r3
18001418:	0501bf0e 	bge	zero,r20,18001b18 <___svfprintf_internal_r+0xe44>
1800141c:	02400404 	movi	r9,16
18001420:	d8c02017 	ldw	r3,128(sp)
18001424:	d8801f17 	ldw	r2,124(sp)
18001428:	4d053d0e 	bge	r9,r20,18002920 <___svfprintf_internal_r+0x1c4c>
1800142c:	01460074 	movhi	r5,6145
18001430:	29783784 	addi	r5,r5,-7970
18001434:	dc403c15 	stw	r17,240(sp)
18001438:	d9403515 	stw	r5,212(sp)
1800143c:	a023883a 	mov	r17,r20
18001440:	482d883a 	mov	r22,r9
18001444:	9029883a 	mov	r20,r18
18001448:	070001c4 	movi	fp,7
1800144c:	8025883a 	mov	r18,r16
18001450:	dc002d17 	ldw	r16,180(sp)
18001454:	00000306 	br	18001464 <___svfprintf_internal_r+0x790>
18001458:	8c7ffc04 	addi	r17,r17,-16
1800145c:	42000204 	addi	r8,r8,8
18001460:	b440130e 	bge	r22,r17,180014b0 <___svfprintf_internal_r+0x7dc>
18001464:	01060074 	movhi	r4,6145
18001468:	18c00404 	addi	r3,r3,16
1800146c:	10800044 	addi	r2,r2,1
18001470:	21383784 	addi	r4,r4,-7970
18001474:	41000015 	stw	r4,0(r8)
18001478:	45800115 	stw	r22,4(r8)
1800147c:	d8c02015 	stw	r3,128(sp)
18001480:	d8801f15 	stw	r2,124(sp)
18001484:	e0bff40e 	bge	fp,r2,18001458 <__alt_data_end+0xf8001458>
18001488:	d9801e04 	addi	r6,sp,120
1800148c:	800b883a 	mov	r5,r16
18001490:	9809883a 	mov	r4,r19
18001494:	80065b00 	call	180065b0 <__ssprint_r>
18001498:	103ef51e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
1800149c:	8c7ffc04 	addi	r17,r17,-16
180014a0:	d8c02017 	ldw	r3,128(sp)
180014a4:	d8801f17 	ldw	r2,124(sp)
180014a8:	da000404 	addi	r8,sp,16
180014ac:	b47fed16 	blt	r22,r17,18001464 <__alt_data_end+0xf8001464>
180014b0:	9021883a 	mov	r16,r18
180014b4:	a025883a 	mov	r18,r20
180014b8:	8829883a 	mov	r20,r17
180014bc:	dc403c17 	ldw	r17,240(sp)
180014c0:	d9403517 	ldw	r5,212(sp)
180014c4:	a0c7883a 	add	r3,r20,r3
180014c8:	10800044 	addi	r2,r2,1
180014cc:	41400015 	stw	r5,0(r8)
180014d0:	45000115 	stw	r20,4(r8)
180014d4:	d8c02015 	stw	r3,128(sp)
180014d8:	d8801f15 	stw	r2,124(sp)
180014dc:	010001c4 	movi	r4,7
180014e0:	2082c116 	blt	r4,r2,18001fe8 <___svfprintf_internal_r+0x1314>
180014e4:	df002787 	ldb	fp,158(sp)
180014e8:	42000204 	addi	r8,r8,8
180014ec:	e0000c26 	beq	fp,zero,18001520 <___svfprintf_internal_r+0x84c>
180014f0:	d8801f17 	ldw	r2,124(sp)
180014f4:	d9002784 	addi	r4,sp,158
180014f8:	18c00044 	addi	r3,r3,1
180014fc:	10800044 	addi	r2,r2,1
18001500:	41000015 	stw	r4,0(r8)
18001504:	01000044 	movi	r4,1
18001508:	41000115 	stw	r4,4(r8)
1800150c:	d8c02015 	stw	r3,128(sp)
18001510:	d8801f15 	stw	r2,124(sp)
18001514:	010001c4 	movi	r4,7
18001518:	20825a16 	blt	r4,r2,18001e84 <___svfprintf_internal_r+0x11b0>
1800151c:	42000204 	addi	r8,r8,8
18001520:	d8802c17 	ldw	r2,176(sp)
18001524:	10000c26 	beq	r2,zero,18001558 <___svfprintf_internal_r+0x884>
18001528:	d8801f17 	ldw	r2,124(sp)
1800152c:	d9002704 	addi	r4,sp,156
18001530:	18c00084 	addi	r3,r3,2
18001534:	10800044 	addi	r2,r2,1
18001538:	41000015 	stw	r4,0(r8)
1800153c:	01000084 	movi	r4,2
18001540:	41000115 	stw	r4,4(r8)
18001544:	d8c02015 	stw	r3,128(sp)
18001548:	d8801f15 	stw	r2,124(sp)
1800154c:	010001c4 	movi	r4,7
18001550:	20825416 	blt	r4,r2,18001ea4 <___svfprintf_internal_r+0x11d0>
18001554:	42000204 	addi	r8,r8,8
18001558:	d9003017 	ldw	r4,192(sp)
1800155c:	00802004 	movi	r2,128
18001560:	2081b926 	beq	r4,r2,18001c48 <___svfprintf_internal_r+0xf74>
18001564:	d9402a17 	ldw	r5,168(sp)
18001568:	d8802b17 	ldw	r2,172(sp)
1800156c:	28adc83a 	sub	r22,r5,r2
18001570:	05802f0e 	bge	zero,r22,18001630 <___svfprintf_internal_r+0x95c>
18001574:	07000404 	movi	fp,16
18001578:	d8801f17 	ldw	r2,124(sp)
1800157c:	e583e20e 	bge	fp,r22,18002508 <___svfprintf_internal_r+0x1834>
18001580:	01460074 	movhi	r5,6145
18001584:	29783384 	addi	r5,r5,-7986
18001588:	dc402a15 	stw	r17,168(sp)
1800158c:	d9402c15 	stw	r5,176(sp)
18001590:	b023883a 	mov	r17,r22
18001594:	050001c4 	movi	r20,7
18001598:	902d883a 	mov	r22,r18
1800159c:	8025883a 	mov	r18,r16
180015a0:	dc002d17 	ldw	r16,180(sp)
180015a4:	00000306 	br	180015b4 <___svfprintf_internal_r+0x8e0>
180015a8:	8c7ffc04 	addi	r17,r17,-16
180015ac:	42000204 	addi	r8,r8,8
180015b0:	e440110e 	bge	fp,r17,180015f8 <___svfprintf_internal_r+0x924>
180015b4:	18c00404 	addi	r3,r3,16
180015b8:	10800044 	addi	r2,r2,1
180015bc:	45400015 	stw	r21,0(r8)
180015c0:	47000115 	stw	fp,4(r8)
180015c4:	d8c02015 	stw	r3,128(sp)
180015c8:	d8801f15 	stw	r2,124(sp)
180015cc:	a0bff60e 	bge	r20,r2,180015a8 <__alt_data_end+0xf80015a8>
180015d0:	d9801e04 	addi	r6,sp,120
180015d4:	800b883a 	mov	r5,r16
180015d8:	9809883a 	mov	r4,r19
180015dc:	80065b00 	call	180065b0 <__ssprint_r>
180015e0:	103ea31e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180015e4:	8c7ffc04 	addi	r17,r17,-16
180015e8:	d8c02017 	ldw	r3,128(sp)
180015ec:	d8801f17 	ldw	r2,124(sp)
180015f0:	da000404 	addi	r8,sp,16
180015f4:	e47fef16 	blt	fp,r17,180015b4 <__alt_data_end+0xf80015b4>
180015f8:	9021883a 	mov	r16,r18
180015fc:	b025883a 	mov	r18,r22
18001600:	882d883a 	mov	r22,r17
18001604:	dc402a17 	ldw	r17,168(sp)
18001608:	d9002c17 	ldw	r4,176(sp)
1800160c:	1d87883a 	add	r3,r3,r22
18001610:	10800044 	addi	r2,r2,1
18001614:	41000015 	stw	r4,0(r8)
18001618:	45800115 	stw	r22,4(r8)
1800161c:	d8c02015 	stw	r3,128(sp)
18001620:	d8801f15 	stw	r2,124(sp)
18001624:	010001c4 	movi	r4,7
18001628:	20820e16 	blt	r4,r2,18001e64 <___svfprintf_internal_r+0x1190>
1800162c:	42000204 	addi	r8,r8,8
18001630:	9080400c 	andi	r2,r18,256
18001634:	10013a1e 	bne	r2,zero,18001b20 <___svfprintf_internal_r+0xe4c>
18001638:	d9402b17 	ldw	r5,172(sp)
1800163c:	d8801f17 	ldw	r2,124(sp)
18001640:	44000015 	stw	r16,0(r8)
18001644:	1947883a 	add	r3,r3,r5
18001648:	10800044 	addi	r2,r2,1
1800164c:	41400115 	stw	r5,4(r8)
18001650:	d8c02015 	stw	r3,128(sp)
18001654:	d8801f15 	stw	r2,124(sp)
18001658:	010001c4 	movi	r4,7
1800165c:	2081f316 	blt	r4,r2,18001e2c <___svfprintf_internal_r+0x1158>
18001660:	42000204 	addi	r8,r8,8
18001664:	9480010c 	andi	r18,r18,4
18001668:	90003226 	beq	r18,zero,18001734 <___svfprintf_internal_r+0xa60>
1800166c:	d9403117 	ldw	r5,196(sp)
18001670:	d8802917 	ldw	r2,164(sp)
18001674:	28a1c83a 	sub	r16,r5,r2
18001678:	04002e0e 	bge	zero,r16,18001734 <___svfprintf_internal_r+0xa60>
1800167c:	04400404 	movi	r17,16
18001680:	d8801f17 	ldw	r2,124(sp)
18001684:	8c04db0e 	bge	r17,r16,180029f4 <___svfprintf_internal_r+0x1d20>
18001688:	01460074 	movhi	r5,6145
1800168c:	29783784 	addi	r5,r5,-7970
18001690:	d9403515 	stw	r5,212(sp)
18001694:	048001c4 	movi	r18,7
18001698:	dd002d17 	ldw	r20,180(sp)
1800169c:	00000306 	br	180016ac <___svfprintf_internal_r+0x9d8>
180016a0:	843ffc04 	addi	r16,r16,-16
180016a4:	42000204 	addi	r8,r8,8
180016a8:	8c00130e 	bge	r17,r16,180016f8 <___svfprintf_internal_r+0xa24>
180016ac:	01060074 	movhi	r4,6145
180016b0:	18c00404 	addi	r3,r3,16
180016b4:	10800044 	addi	r2,r2,1
180016b8:	21383784 	addi	r4,r4,-7970
180016bc:	41000015 	stw	r4,0(r8)
180016c0:	44400115 	stw	r17,4(r8)
180016c4:	d8c02015 	stw	r3,128(sp)
180016c8:	d8801f15 	stw	r2,124(sp)
180016cc:	90bff40e 	bge	r18,r2,180016a0 <__alt_data_end+0xf80016a0>
180016d0:	d9801e04 	addi	r6,sp,120
180016d4:	a00b883a 	mov	r5,r20
180016d8:	9809883a 	mov	r4,r19
180016dc:	80065b00 	call	180065b0 <__ssprint_r>
180016e0:	103e631e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180016e4:	843ffc04 	addi	r16,r16,-16
180016e8:	d8c02017 	ldw	r3,128(sp)
180016ec:	d8801f17 	ldw	r2,124(sp)
180016f0:	da000404 	addi	r8,sp,16
180016f4:	8c3fed16 	blt	r17,r16,180016ac <__alt_data_end+0xf80016ac>
180016f8:	d9403517 	ldw	r5,212(sp)
180016fc:	1c07883a 	add	r3,r3,r16
18001700:	10800044 	addi	r2,r2,1
18001704:	41400015 	stw	r5,0(r8)
18001708:	44000115 	stw	r16,4(r8)
1800170c:	d8c02015 	stw	r3,128(sp)
18001710:	d8801f15 	stw	r2,124(sp)
18001714:	010001c4 	movi	r4,7
18001718:	2080060e 	bge	r4,r2,18001734 <___svfprintf_internal_r+0xa60>
1800171c:	d9402d17 	ldw	r5,180(sp)
18001720:	d9801e04 	addi	r6,sp,120
18001724:	9809883a 	mov	r4,r19
18001728:	80065b00 	call	180065b0 <__ssprint_r>
1800172c:	103e501e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001730:	d8c02017 	ldw	r3,128(sp)
18001734:	d8803117 	ldw	r2,196(sp)
18001738:	d9002917 	ldw	r4,164(sp)
1800173c:	1100010e 	bge	r2,r4,18001744 <___svfprintf_internal_r+0xa70>
18001740:	2005883a 	mov	r2,r4
18001744:	d9402f17 	ldw	r5,188(sp)
18001748:	288b883a 	add	r5,r5,r2
1800174c:	d9402f15 	stw	r5,188(sp)
18001750:	1801be1e 	bne	r3,zero,18001e4c <___svfprintf_internal_r+0x1178>
18001754:	b8800007 	ldb	r2,0(r23)
18001758:	d8001f15 	stw	zero,124(sp)
1800175c:	da000404 	addi	r8,sp,16
18001760:	103d891e 	bne	r2,zero,18000d88 <__alt_data_end+0xf8000d88>
18001764:	b823883a 	mov	r17,r23
18001768:	003d9f06 	br	18000de8 <__alt_data_end+0xf8000de8>
1800176c:	8025883a 	mov	r18,r16
18001770:	dc002903 	ldbu	r16,164(sp)
18001774:	e011883a 	mov	r8,fp
18001778:	84003fcc 	andi	r16,r16,255
1800177c:	8005e61e 	bne	r16,zero,18002f18 <___svfprintf_internal_r+0x2244>
18001780:	94800414 	ori	r18,r18,16
18001784:	9080080c 	andi	r2,r18,32
18001788:	10022026 	beq	r2,zero,1800200c <___svfprintf_internal_r+0x1338>
1800178c:	d9002e17 	ldw	r4,184(sp)
18001790:	d9402a17 	ldw	r5,168(sp)
18001794:	d8002785 	stb	zero,158(sp)
18001798:	20c00204 	addi	r3,r4,8
1800179c:	25000017 	ldw	r20,0(r4)
180017a0:	25800117 	ldw	r22,4(r4)
180017a4:	2803ad16 	blt	r5,zero,1800265c <___svfprintf_internal_r+0x1988>
180017a8:	013fdfc4 	movi	r4,-129
180017ac:	a584b03a 	or	r2,r20,r22
180017b0:	d8c02e15 	stw	r3,184(sp)
180017b4:	9124703a 	and	r18,r18,r4
180017b8:	0039883a 	mov	fp,zero
180017bc:	103eb01e 	bne	r2,zero,18001280 <__alt_data_end+0xf8001280>
180017c0:	d8802a17 	ldw	r2,168(sp)
180017c4:	1002e71e 	bne	r2,zero,18002364 <___svfprintf_internal_r+0x1690>
180017c8:	d8002a15 	stw	zero,168(sp)
180017cc:	d8002b15 	stw	zero,172(sp)
180017d0:	dc001e04 	addi	r16,sp,120
180017d4:	003ef706 	br	180013b4 <__alt_data_end+0xf80013b4>
180017d8:	8025883a 	mov	r18,r16
180017dc:	dc002903 	ldbu	r16,164(sp)
180017e0:	e011883a 	mov	r8,fp
180017e4:	84003fcc 	andi	r16,r16,255
180017e8:	8005c81e 	bne	r16,zero,18002f0c <___svfprintf_internal_r+0x2238>
180017ec:	01060074 	movhi	r4,6145
180017f0:	21382704 	addi	r4,r4,-8036
180017f4:	d9003a15 	stw	r4,232(sp)
180017f8:	9080080c 	andi	r2,r18,32
180017fc:	10007226 	beq	r2,zero,180019c8 <___svfprintf_internal_r+0xcf4>
18001800:	d9402e17 	ldw	r5,184(sp)
18001804:	2d000017 	ldw	r20,0(r5)
18001808:	2d800117 	ldw	r22,4(r5)
1800180c:	29400204 	addi	r5,r5,8
18001810:	d9402e15 	stw	r5,184(sp)
18001814:	9080004c 	andi	r2,r18,1
18001818:	1001aa26 	beq	r2,zero,18001ec4 <___svfprintf_internal_r+0x11f0>
1800181c:	a584b03a 	or	r2,r20,r22
18001820:	10032526 	beq	r2,zero,180024b8 <___svfprintf_internal_r+0x17e4>
18001824:	d8c02a17 	ldw	r3,168(sp)
18001828:	00800c04 	movi	r2,48
1800182c:	d8802705 	stb	r2,156(sp)
18001830:	dc402745 	stb	r17,157(sp)
18001834:	d8002785 	stb	zero,158(sp)
18001838:	90800094 	ori	r2,r18,2
1800183c:	1804a316 	blt	r3,zero,18002acc <___svfprintf_internal_r+0x1df8>
18001840:	00bfdfc4 	movi	r2,-129
18001844:	90a4703a 	and	r18,r18,r2
18001848:	94800094 	ori	r18,r18,2
1800184c:	0039883a 	mov	fp,zero
18001850:	d9003a17 	ldw	r4,232(sp)
18001854:	dc001e04 	addi	r16,sp,120
18001858:	a08003cc 	andi	r2,r20,15
1800185c:	b006973a 	slli	r3,r22,28
18001860:	2085883a 	add	r2,r4,r2
18001864:	a028d13a 	srli	r20,r20,4
18001868:	10800003 	ldbu	r2,0(r2)
1800186c:	b02cd13a 	srli	r22,r22,4
18001870:	843fffc4 	addi	r16,r16,-1
18001874:	1d28b03a 	or	r20,r3,r20
18001878:	80800005 	stb	r2,0(r16)
1800187c:	a584b03a 	or	r2,r20,r22
18001880:	103ff51e 	bne	r2,zero,18001858 <__alt_data_end+0xf8001858>
18001884:	d8c02817 	ldw	r3,160(sp)
18001888:	1c07c83a 	sub	r3,r3,r16
1800188c:	d8c02b15 	stw	r3,172(sp)
18001890:	003ec806 	br	180013b4 <__alt_data_end+0xf80013b4>
18001894:	d8c02e17 	ldw	r3,184(sp)
18001898:	d9002e17 	ldw	r4,184(sp)
1800189c:	8025883a 	mov	r18,r16
180018a0:	18800017 	ldw	r2,0(r3)
180018a4:	21000104 	addi	r4,r4,4
180018a8:	00c00044 	movi	r3,1
180018ac:	e011883a 	mov	r8,fp
180018b0:	d8c02915 	stw	r3,164(sp)
180018b4:	d8002785 	stb	zero,158(sp)
180018b8:	d8801405 	stb	r2,80(sp)
180018bc:	d9002e15 	stw	r4,184(sp)
180018c0:	d8c02b15 	stw	r3,172(sp)
180018c4:	d8002a15 	stw	zero,168(sp)
180018c8:	d8003215 	stw	zero,200(sp)
180018cc:	dc001404 	addi	r16,sp,80
180018d0:	0039883a 	mov	fp,zero
180018d4:	003ec406 	br	180013e8 <__alt_data_end+0xf80013e8>
180018d8:	8025883a 	mov	r18,r16
180018dc:	dc002903 	ldbu	r16,164(sp)
180018e0:	e011883a 	mov	r8,fp
180018e4:	84003fcc 	andi	r16,r16,255
180018e8:	803e8726 	beq	r16,zero,18001308 <__alt_data_end+0xf8001308>
180018ec:	d8c02b03 	ldbu	r3,172(sp)
180018f0:	d8c02785 	stb	r3,158(sp)
180018f4:	003e8406 	br	18001308 <__alt_data_end+0xf8001308>
180018f8:	00c00044 	movi	r3,1
180018fc:	d8c02905 	stb	r3,164(sp)
18001900:	00c00ac4 	movi	r3,43
18001904:	d8c02b05 	stb	r3,172(sp)
18001908:	bc400007 	ldb	r17,0(r23)
1800190c:	003d4606 	br	18000e28 <__alt_data_end+0xf8000e28>
18001910:	84000814 	ori	r16,r16,32
18001914:	bc400007 	ldb	r17,0(r23)
18001918:	003d4306 	br	18000e28 <__alt_data_end+0xf8000e28>
1800191c:	d8802e17 	ldw	r2,184(sp)
18001920:	8025883a 	mov	r18,r16
18001924:	d8002785 	stb	zero,158(sp)
18001928:	14000017 	ldw	r16,0(r2)
1800192c:	e011883a 	mov	r8,fp
18001930:	15000104 	addi	r20,r2,4
18001934:	80042126 	beq	r16,zero,180029bc <___svfprintf_internal_r+0x1ce8>
18001938:	d8c02a17 	ldw	r3,168(sp)
1800193c:	1803ee16 	blt	r3,zero,180028f8 <___svfprintf_internal_r+0x1c24>
18001940:	180d883a 	mov	r6,r3
18001944:	000b883a 	mov	r5,zero
18001948:	8009883a 	mov	r4,r16
1800194c:	df003e15 	stw	fp,248(sp)
18001950:	80051280 	call	18005128 <memchr>
18001954:	da003e17 	ldw	r8,248(sp)
18001958:	10046a26 	beq	r2,zero,18002b04 <___svfprintf_internal_r+0x1e30>
1800195c:	1405c83a 	sub	r2,r2,r16
18001960:	d8802b15 	stw	r2,172(sp)
18001964:	1003ea16 	blt	r2,zero,18002910 <___svfprintf_internal_r+0x1c3c>
18001968:	df002783 	ldbu	fp,158(sp)
1800196c:	d8802915 	stw	r2,164(sp)
18001970:	dd002e15 	stw	r20,184(sp)
18001974:	d8002a15 	stw	zero,168(sp)
18001978:	d8003215 	stw	zero,200(sp)
1800197c:	003e9306 	br	180013cc <__alt_data_end+0xf80013cc>
18001980:	8025883a 	mov	r18,r16
18001984:	dc002903 	ldbu	r16,164(sp)
18001988:	e011883a 	mov	r8,fp
1800198c:	84003fcc 	andi	r16,r16,255
18001990:	803f7c26 	beq	r16,zero,18001784 <__alt_data_end+0xf8001784>
18001994:	d8c02b03 	ldbu	r3,172(sp)
18001998:	d8c02785 	stb	r3,158(sp)
1800199c:	003f7906 	br	18001784 <__alt_data_end+0xf8001784>
180019a0:	8025883a 	mov	r18,r16
180019a4:	dc002903 	ldbu	r16,164(sp)
180019a8:	e011883a 	mov	r8,fp
180019ac:	84003fcc 	andi	r16,r16,255
180019b0:	8005741e 	bne	r16,zero,18002f84 <___svfprintf_internal_r+0x22b0>
180019b4:	01060074 	movhi	r4,6145
180019b8:	21382c04 	addi	r4,r4,-8016
180019bc:	d9003a15 	stw	r4,232(sp)
180019c0:	9080080c 	andi	r2,r18,32
180019c4:	103f8e1e 	bne	r2,zero,18001800 <__alt_data_end+0xf8001800>
180019c8:	9080040c 	andi	r2,r18,16
180019cc:	1002a726 	beq	r2,zero,1800246c <___svfprintf_internal_r+0x1798>
180019d0:	d8802e17 	ldw	r2,184(sp)
180019d4:	002d883a 	mov	r22,zero
180019d8:	15000017 	ldw	r20,0(r2)
180019dc:	10800104 	addi	r2,r2,4
180019e0:	d8802e15 	stw	r2,184(sp)
180019e4:	003f8b06 	br	18001814 <__alt_data_end+0xf8001814>
180019e8:	84000054 	ori	r16,r16,1
180019ec:	bc400007 	ldb	r17,0(r23)
180019f0:	003d0d06 	br	18000e28 <__alt_data_end+0xf8000e28>
180019f4:	d8802b07 	ldb	r2,172(sp)
180019f8:	1002a41e 	bne	r2,zero,1800248c <___svfprintf_internal_r+0x17b8>
180019fc:	00c00044 	movi	r3,1
18001a00:	d8c02905 	stb	r3,164(sp)
18001a04:	00c00804 	movi	r3,32
18001a08:	d8c02b05 	stb	r3,172(sp)
18001a0c:	bc400007 	ldb	r17,0(r23)
18001a10:	003d0506 	br	18000e28 <__alt_data_end+0xf8000e28>
18001a14:	8025883a 	mov	r18,r16
18001a18:	dc002903 	ldbu	r16,164(sp)
18001a1c:	e011883a 	mov	r8,fp
18001a20:	84003fcc 	andi	r16,r16,255
18001a24:	803e0626 	beq	r16,zero,18001240 <__alt_data_end+0xf8001240>
18001a28:	d8c02b03 	ldbu	r3,172(sp)
18001a2c:	d8c02785 	stb	r3,158(sp)
18001a30:	003e0306 	br	18001240 <__alt_data_end+0xf8001240>
18001a34:	bc400007 	ldb	r17,0(r23)
18001a38:	00801b04 	movi	r2,108
18001a3c:	88830a26 	beq	r17,r2,18002668 <___svfprintf_internal_r+0x1994>
18001a40:	84000414 	ori	r16,r16,16
18001a44:	003cf806 	br	18000e28 <__alt_data_end+0xf8000e28>
18001a48:	8025883a 	mov	r18,r16
18001a4c:	dc002903 	ldbu	r16,164(sp)
18001a50:	e011883a 	mov	r8,fp
18001a54:	84003fcc 	andi	r16,r16,255
18001a58:	8005471e 	bne	r16,zero,18002f78 <___svfprintf_internal_r+0x22a4>
18001a5c:	9080080c 	andi	r2,r18,32
18001a60:	10028c26 	beq	r2,zero,18002494 <___svfprintf_internal_r+0x17c0>
18001a64:	d9002e17 	ldw	r4,184(sp)
18001a68:	d9402f17 	ldw	r5,188(sp)
18001a6c:	20800017 	ldw	r2,0(r4)
18001a70:	2807d7fa 	srai	r3,r5,31
18001a74:	21000104 	addi	r4,r4,4
18001a78:	d9002e15 	stw	r4,184(sp)
18001a7c:	11400015 	stw	r5,0(r2)
18001a80:	10c00115 	stw	r3,4(r2)
18001a84:	003cbe06 	br	18000d80 <__alt_data_end+0xf8000d80>
18001a88:	84001014 	ori	r16,r16,64
18001a8c:	bc400007 	ldb	r17,0(r23)
18001a90:	003ce506 	br	18000e28 <__alt_data_end+0xf8000e28>
18001a94:	01060074 	movhi	r4,6145
18001a98:	21382c04 	addi	r4,r4,-8016
18001a9c:	0039883a 	mov	fp,zero
18001aa0:	d9003a15 	stw	r4,232(sp)
18001aa4:	04401e04 	movi	r17,120
18001aa8:	003f6906 	br	18001850 <__alt_data_end+0xf8001850>
18001aac:	8025883a 	mov	r18,r16
18001ab0:	dc002903 	ldbu	r16,164(sp)
18001ab4:	e011883a 	mov	r8,fp
18001ab8:	84003fcc 	andi	r16,r16,255
18001abc:	8005261e 	bne	r16,zero,18002f58 <___svfprintf_internal_r+0x2284>
18001ac0:	883d6526 	beq	r17,zero,18001058 <__alt_data_end+0xf8001058>
18001ac4:	00c00044 	movi	r3,1
18001ac8:	d8c02915 	stw	r3,164(sp)
18001acc:	dc401405 	stb	r17,80(sp)
18001ad0:	d8002785 	stb	zero,158(sp)
18001ad4:	003f7a06 	br	180018c0 <__alt_data_end+0xf80018c0>
18001ad8:	01060074 	movhi	r4,6145
18001adc:	21382c04 	addi	r4,r4,-8016
18001ae0:	d9003a15 	stw	r4,232(sp)
18001ae4:	d8c02e15 	stw	r3,184(sp)
18001ae8:	1025883a 	mov	r18,r2
18001aec:	04401e04 	movi	r17,120
18001af0:	a584b03a 	or	r2,r20,r22
18001af4:	1000fa1e 	bne	r2,zero,18001ee0 <___svfprintf_internal_r+0x120c>
18001af8:	0039883a 	mov	fp,zero
18001afc:	00800084 	movi	r2,2
18001b00:	10803fcc 	andi	r2,r2,255
18001b04:	00c00044 	movi	r3,1
18001b08:	10c21626 	beq	r2,r3,18002364 <___svfprintf_internal_r+0x1690>
18001b0c:	00c00084 	movi	r3,2
18001b10:	10fe0e1e 	bne	r2,r3,1800134c <__alt_data_end+0xf800134c>
18001b14:	003d4606 	br	18001030 <__alt_data_end+0xf8001030>
18001b18:	d8c02017 	ldw	r3,128(sp)
18001b1c:	003e7306 	br	180014ec <__alt_data_end+0xf80014ec>
18001b20:	00801944 	movi	r2,101
18001b24:	14407c0e 	bge	r2,r17,18001d18 <___svfprintf_internal_r+0x1044>
18001b28:	d9003617 	ldw	r4,216(sp)
18001b2c:	d9403717 	ldw	r5,220(sp)
18001b30:	000d883a 	mov	r6,zero
18001b34:	000f883a 	mov	r7,zero
18001b38:	d8c03d15 	stw	r3,244(sp)
18001b3c:	da003e15 	stw	r8,248(sp)
18001b40:	800a7600 	call	1800a760 <__eqdf2>
18001b44:	d8c03d17 	ldw	r3,244(sp)
18001b48:	da003e17 	ldw	r8,248(sp)
18001b4c:	1000f51e 	bne	r2,zero,18001f24 <___svfprintf_internal_r+0x1250>
18001b50:	d8801f17 	ldw	r2,124(sp)
18001b54:	01060074 	movhi	r4,6145
18001b58:	21383304 	addi	r4,r4,-7988
18001b5c:	18c00044 	addi	r3,r3,1
18001b60:	10800044 	addi	r2,r2,1
18001b64:	41000015 	stw	r4,0(r8)
18001b68:	01000044 	movi	r4,1
18001b6c:	41000115 	stw	r4,4(r8)
18001b70:	d8c02015 	stw	r3,128(sp)
18001b74:	d8801f15 	stw	r2,124(sp)
18001b78:	010001c4 	movi	r4,7
18001b7c:	20826616 	blt	r4,r2,18002518 <___svfprintf_internal_r+0x1844>
18001b80:	42000204 	addi	r8,r8,8
18001b84:	d8802617 	ldw	r2,152(sp)
18001b88:	d9403317 	ldw	r5,204(sp)
18001b8c:	11400216 	blt	r2,r5,18001b98 <___svfprintf_internal_r+0xec4>
18001b90:	9080004c 	andi	r2,r18,1
18001b94:	103eb326 	beq	r2,zero,18001664 <__alt_data_end+0xf8001664>
18001b98:	d8803817 	ldw	r2,224(sp)
18001b9c:	d9003417 	ldw	r4,208(sp)
18001ba0:	d9403817 	ldw	r5,224(sp)
18001ba4:	1887883a 	add	r3,r3,r2
18001ba8:	d8801f17 	ldw	r2,124(sp)
18001bac:	41000015 	stw	r4,0(r8)
18001bb0:	41400115 	stw	r5,4(r8)
18001bb4:	10800044 	addi	r2,r2,1
18001bb8:	d8c02015 	stw	r3,128(sp)
18001bbc:	d8801f15 	stw	r2,124(sp)
18001bc0:	010001c4 	movi	r4,7
18001bc4:	2082af16 	blt	r4,r2,18002684 <___svfprintf_internal_r+0x19b0>
18001bc8:	42000204 	addi	r8,r8,8
18001bcc:	d8803317 	ldw	r2,204(sp)
18001bd0:	143fffc4 	addi	r16,r2,-1
18001bd4:	043ea30e 	bge	zero,r16,18001664 <__alt_data_end+0xf8001664>
18001bd8:	04400404 	movi	r17,16
18001bdc:	d8801f17 	ldw	r2,124(sp)
18001be0:	8c00860e 	bge	r17,r16,18001dfc <___svfprintf_internal_r+0x1128>
18001be4:	01460074 	movhi	r5,6145
18001be8:	29783384 	addi	r5,r5,-7986
18001bec:	d9402c15 	stw	r5,176(sp)
18001bf0:	058001c4 	movi	r22,7
18001bf4:	dd002d17 	ldw	r20,180(sp)
18001bf8:	00000306 	br	18001c08 <___svfprintf_internal_r+0xf34>
18001bfc:	42000204 	addi	r8,r8,8
18001c00:	843ffc04 	addi	r16,r16,-16
18001c04:	8c00800e 	bge	r17,r16,18001e08 <___svfprintf_internal_r+0x1134>
18001c08:	18c00404 	addi	r3,r3,16
18001c0c:	10800044 	addi	r2,r2,1
18001c10:	45400015 	stw	r21,0(r8)
18001c14:	44400115 	stw	r17,4(r8)
18001c18:	d8c02015 	stw	r3,128(sp)
18001c1c:	d8801f15 	stw	r2,124(sp)
18001c20:	b0bff60e 	bge	r22,r2,18001bfc <__alt_data_end+0xf8001bfc>
18001c24:	d9801e04 	addi	r6,sp,120
18001c28:	a00b883a 	mov	r5,r20
18001c2c:	9809883a 	mov	r4,r19
18001c30:	80065b00 	call	180065b0 <__ssprint_r>
18001c34:	103d0e1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001c38:	d8c02017 	ldw	r3,128(sp)
18001c3c:	d8801f17 	ldw	r2,124(sp)
18001c40:	da000404 	addi	r8,sp,16
18001c44:	003fee06 	br	18001c00 <__alt_data_end+0xf8001c00>
18001c48:	d9403117 	ldw	r5,196(sp)
18001c4c:	d8802917 	ldw	r2,164(sp)
18001c50:	28adc83a 	sub	r22,r5,r2
18001c54:	05be430e 	bge	zero,r22,18001564 <__alt_data_end+0xf8001564>
18001c58:	07000404 	movi	fp,16
18001c5c:	d8801f17 	ldw	r2,124(sp)
18001c60:	e583a20e 	bge	fp,r22,18002aec <___svfprintf_internal_r+0x1e18>
18001c64:	01460074 	movhi	r5,6145
18001c68:	29783384 	addi	r5,r5,-7986
18001c6c:	dc403015 	stw	r17,192(sp)
18001c70:	d9402c15 	stw	r5,176(sp)
18001c74:	b023883a 	mov	r17,r22
18001c78:	050001c4 	movi	r20,7
18001c7c:	902d883a 	mov	r22,r18
18001c80:	8025883a 	mov	r18,r16
18001c84:	dc002d17 	ldw	r16,180(sp)
18001c88:	00000306 	br	18001c98 <___svfprintf_internal_r+0xfc4>
18001c8c:	8c7ffc04 	addi	r17,r17,-16
18001c90:	42000204 	addi	r8,r8,8
18001c94:	e440110e 	bge	fp,r17,18001cdc <___svfprintf_internal_r+0x1008>
18001c98:	18c00404 	addi	r3,r3,16
18001c9c:	10800044 	addi	r2,r2,1
18001ca0:	45400015 	stw	r21,0(r8)
18001ca4:	47000115 	stw	fp,4(r8)
18001ca8:	d8c02015 	stw	r3,128(sp)
18001cac:	d8801f15 	stw	r2,124(sp)
18001cb0:	a0bff60e 	bge	r20,r2,18001c8c <__alt_data_end+0xf8001c8c>
18001cb4:	d9801e04 	addi	r6,sp,120
18001cb8:	800b883a 	mov	r5,r16
18001cbc:	9809883a 	mov	r4,r19
18001cc0:	80065b00 	call	180065b0 <__ssprint_r>
18001cc4:	103cea1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001cc8:	8c7ffc04 	addi	r17,r17,-16
18001ccc:	d8c02017 	ldw	r3,128(sp)
18001cd0:	d8801f17 	ldw	r2,124(sp)
18001cd4:	da000404 	addi	r8,sp,16
18001cd8:	e47fef16 	blt	fp,r17,18001c98 <__alt_data_end+0xf8001c98>
18001cdc:	9021883a 	mov	r16,r18
18001ce0:	b025883a 	mov	r18,r22
18001ce4:	882d883a 	mov	r22,r17
18001ce8:	dc403017 	ldw	r17,192(sp)
18001cec:	d9002c17 	ldw	r4,176(sp)
18001cf0:	1d87883a 	add	r3,r3,r22
18001cf4:	10800044 	addi	r2,r2,1
18001cf8:	41000015 	stw	r4,0(r8)
18001cfc:	45800115 	stw	r22,4(r8)
18001d00:	d8c02015 	stw	r3,128(sp)
18001d04:	d8801f15 	stw	r2,124(sp)
18001d08:	010001c4 	movi	r4,7
18001d0c:	20819a16 	blt	r4,r2,18002378 <___svfprintf_internal_r+0x16a4>
18001d10:	42000204 	addi	r8,r8,8
18001d14:	003e1306 	br	18001564 <__alt_data_end+0xf8001564>
18001d18:	d9403317 	ldw	r5,204(sp)
18001d1c:	00800044 	movi	r2,1
18001d20:	18c00044 	addi	r3,r3,1
18001d24:	1141710e 	bge	r2,r5,180022ec <___svfprintf_internal_r+0x1618>
18001d28:	dc401f17 	ldw	r17,124(sp)
18001d2c:	00800044 	movi	r2,1
18001d30:	40800115 	stw	r2,4(r8)
18001d34:	8c400044 	addi	r17,r17,1
18001d38:	44000015 	stw	r16,0(r8)
18001d3c:	d8c02015 	stw	r3,128(sp)
18001d40:	dc401f15 	stw	r17,124(sp)
18001d44:	008001c4 	movi	r2,7
18001d48:	14417416 	blt	r2,r17,1800231c <___svfprintf_internal_r+0x1648>
18001d4c:	42000204 	addi	r8,r8,8
18001d50:	d8803817 	ldw	r2,224(sp)
18001d54:	d9003417 	ldw	r4,208(sp)
18001d58:	8c400044 	addi	r17,r17,1
18001d5c:	10c7883a 	add	r3,r2,r3
18001d60:	40800115 	stw	r2,4(r8)
18001d64:	41000015 	stw	r4,0(r8)
18001d68:	d8c02015 	stw	r3,128(sp)
18001d6c:	dc401f15 	stw	r17,124(sp)
18001d70:	008001c4 	movi	r2,7
18001d74:	14417216 	blt	r2,r17,18002340 <___svfprintf_internal_r+0x166c>
18001d78:	45800204 	addi	r22,r8,8
18001d7c:	d9003617 	ldw	r4,216(sp)
18001d80:	d9403717 	ldw	r5,220(sp)
18001d84:	000d883a 	mov	r6,zero
18001d88:	000f883a 	mov	r7,zero
18001d8c:	d8c03d15 	stw	r3,244(sp)
18001d90:	800a7600 	call	1800a760 <__eqdf2>
18001d94:	d8c03d17 	ldw	r3,244(sp)
18001d98:	1000b326 	beq	r2,zero,18002068 <___svfprintf_internal_r+0x1394>
18001d9c:	d9403317 	ldw	r5,204(sp)
18001da0:	84000044 	addi	r16,r16,1
18001da4:	8c400044 	addi	r17,r17,1
18001da8:	28bfffc4 	addi	r2,r5,-1
18001dac:	1887883a 	add	r3,r3,r2
18001db0:	b0800115 	stw	r2,4(r22)
18001db4:	b4000015 	stw	r16,0(r22)
18001db8:	d8c02015 	stw	r3,128(sp)
18001dbc:	dc401f15 	stw	r17,124(sp)
18001dc0:	008001c4 	movi	r2,7
18001dc4:	1440d216 	blt	r2,r17,18002110 <___svfprintf_internal_r+0x143c>
18001dc8:	b5800204 	addi	r22,r22,8
18001dcc:	d9003b17 	ldw	r4,236(sp)
18001dd0:	df0022c4 	addi	fp,sp,139
18001dd4:	8c400044 	addi	r17,r17,1
18001dd8:	20c7883a 	add	r3,r4,r3
18001ddc:	b7000015 	stw	fp,0(r22)
18001de0:	b1000115 	stw	r4,4(r22)
18001de4:	d8c02015 	stw	r3,128(sp)
18001de8:	dc401f15 	stw	r17,124(sp)
18001dec:	008001c4 	movi	r2,7
18001df0:	14400e16 	blt	r2,r17,18001e2c <___svfprintf_internal_r+0x1158>
18001df4:	b2000204 	addi	r8,r22,8
18001df8:	003e1a06 	br	18001664 <__alt_data_end+0xf8001664>
18001dfc:	01060074 	movhi	r4,6145
18001e00:	21383384 	addi	r4,r4,-7986
18001e04:	d9002c15 	stw	r4,176(sp)
18001e08:	d9002c17 	ldw	r4,176(sp)
18001e0c:	1c07883a 	add	r3,r3,r16
18001e10:	44000115 	stw	r16,4(r8)
18001e14:	41000015 	stw	r4,0(r8)
18001e18:	10800044 	addi	r2,r2,1
18001e1c:	d8c02015 	stw	r3,128(sp)
18001e20:	d8801f15 	stw	r2,124(sp)
18001e24:	010001c4 	movi	r4,7
18001e28:	20be0d0e 	bge	r4,r2,18001660 <__alt_data_end+0xf8001660>
18001e2c:	d9402d17 	ldw	r5,180(sp)
18001e30:	d9801e04 	addi	r6,sp,120
18001e34:	9809883a 	mov	r4,r19
18001e38:	80065b00 	call	180065b0 <__ssprint_r>
18001e3c:	103c8c1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001e40:	d8c02017 	ldw	r3,128(sp)
18001e44:	da000404 	addi	r8,sp,16
18001e48:	003e0606 	br	18001664 <__alt_data_end+0xf8001664>
18001e4c:	d9402d17 	ldw	r5,180(sp)
18001e50:	d9801e04 	addi	r6,sp,120
18001e54:	9809883a 	mov	r4,r19
18001e58:	80065b00 	call	180065b0 <__ssprint_r>
18001e5c:	103e3d26 	beq	r2,zero,18001754 <__alt_data_end+0xf8001754>
18001e60:	003c8306 	br	18001070 <__alt_data_end+0xf8001070>
18001e64:	d9402d17 	ldw	r5,180(sp)
18001e68:	d9801e04 	addi	r6,sp,120
18001e6c:	9809883a 	mov	r4,r19
18001e70:	80065b00 	call	180065b0 <__ssprint_r>
18001e74:	103c7e1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001e78:	d8c02017 	ldw	r3,128(sp)
18001e7c:	da000404 	addi	r8,sp,16
18001e80:	003deb06 	br	18001630 <__alt_data_end+0xf8001630>
18001e84:	d9402d17 	ldw	r5,180(sp)
18001e88:	d9801e04 	addi	r6,sp,120
18001e8c:	9809883a 	mov	r4,r19
18001e90:	80065b00 	call	180065b0 <__ssprint_r>
18001e94:	103c761e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001e98:	d8c02017 	ldw	r3,128(sp)
18001e9c:	da000404 	addi	r8,sp,16
18001ea0:	003d9f06 	br	18001520 <__alt_data_end+0xf8001520>
18001ea4:	d9402d17 	ldw	r5,180(sp)
18001ea8:	d9801e04 	addi	r6,sp,120
18001eac:	9809883a 	mov	r4,r19
18001eb0:	80065b00 	call	180065b0 <__ssprint_r>
18001eb4:	103c6e1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001eb8:	d8c02017 	ldw	r3,128(sp)
18001ebc:	da000404 	addi	r8,sp,16
18001ec0:	003da506 	br	18001558 <__alt_data_end+0xf8001558>
18001ec4:	d9402a17 	ldw	r5,168(sp)
18001ec8:	d8002785 	stb	zero,158(sp)
18001ecc:	283f0816 	blt	r5,zero,18001af0 <__alt_data_end+0xf8001af0>
18001ed0:	00ffdfc4 	movi	r3,-129
18001ed4:	a584b03a 	or	r2,r20,r22
18001ed8:	90e4703a 	and	r18,r18,r3
18001edc:	103c5126 	beq	r2,zero,18001024 <__alt_data_end+0xf8001024>
18001ee0:	0039883a 	mov	fp,zero
18001ee4:	003e5a06 	br	18001850 <__alt_data_end+0xf8001850>
18001ee8:	9080040c 	andi	r2,r18,16
18001eec:	10013d26 	beq	r2,zero,180023e4 <___svfprintf_internal_r+0x1710>
18001ef0:	d8c02e17 	ldw	r3,184(sp)
18001ef4:	d9002a17 	ldw	r4,168(sp)
18001ef8:	d8002785 	stb	zero,158(sp)
18001efc:	18800104 	addi	r2,r3,4
18001f00:	1d000017 	ldw	r20,0(r3)
18001f04:	002d883a 	mov	r22,zero
18001f08:	20013f16 	blt	r4,zero,18002408 <___svfprintf_internal_r+0x1734>
18001f0c:	00ffdfc4 	movi	r3,-129
18001f10:	d8802e15 	stw	r2,184(sp)
18001f14:	90e4703a 	and	r18,r18,r3
18001f18:	a03d0926 	beq	r20,zero,18001340 <__alt_data_end+0xf8001340>
18001f1c:	0039883a 	mov	fp,zero
18001f20:	003d0c06 	br	18001354 <__alt_data_end+0xf8001354>
18001f24:	dc402617 	ldw	r17,152(sp)
18001f28:	0441830e 	bge	zero,r17,18002538 <___svfprintf_internal_r+0x1864>
18001f2c:	dc403217 	ldw	r17,200(sp)
18001f30:	d8803317 	ldw	r2,204(sp)
18001f34:	1440010e 	bge	r2,r17,18001f3c <___svfprintf_internal_r+0x1268>
18001f38:	1023883a 	mov	r17,r2
18001f3c:	04400a0e 	bge	zero,r17,18001f68 <___svfprintf_internal_r+0x1294>
18001f40:	d8801f17 	ldw	r2,124(sp)
18001f44:	1c47883a 	add	r3,r3,r17
18001f48:	44000015 	stw	r16,0(r8)
18001f4c:	10800044 	addi	r2,r2,1
18001f50:	44400115 	stw	r17,4(r8)
18001f54:	d8c02015 	stw	r3,128(sp)
18001f58:	d8801f15 	stw	r2,124(sp)
18001f5c:	010001c4 	movi	r4,7
18001f60:	20827516 	blt	r4,r2,18002938 <___svfprintf_internal_r+0x1c64>
18001f64:	42000204 	addi	r8,r8,8
18001f68:	88027b16 	blt	r17,zero,18002958 <___svfprintf_internal_r+0x1c84>
18001f6c:	d9003217 	ldw	r4,200(sp)
18001f70:	2463c83a 	sub	r17,r4,r17
18001f74:	0440990e 	bge	zero,r17,180021dc <___svfprintf_internal_r+0x1508>
18001f78:	05800404 	movi	r22,16
18001f7c:	d8801f17 	ldw	r2,124(sp)
18001f80:	b441530e 	bge	r22,r17,180024d0 <___svfprintf_internal_r+0x17fc>
18001f84:	01060074 	movhi	r4,6145
18001f88:	21383384 	addi	r4,r4,-7986
18001f8c:	d9002c15 	stw	r4,176(sp)
18001f90:	070001c4 	movi	fp,7
18001f94:	dd002d17 	ldw	r20,180(sp)
18001f98:	00000306 	br	18001fa8 <___svfprintf_internal_r+0x12d4>
18001f9c:	42000204 	addi	r8,r8,8
18001fa0:	8c7ffc04 	addi	r17,r17,-16
18001fa4:	b4414d0e 	bge	r22,r17,180024dc <___svfprintf_internal_r+0x1808>
18001fa8:	18c00404 	addi	r3,r3,16
18001fac:	10800044 	addi	r2,r2,1
18001fb0:	45400015 	stw	r21,0(r8)
18001fb4:	45800115 	stw	r22,4(r8)
18001fb8:	d8c02015 	stw	r3,128(sp)
18001fbc:	d8801f15 	stw	r2,124(sp)
18001fc0:	e0bff60e 	bge	fp,r2,18001f9c <__alt_data_end+0xf8001f9c>
18001fc4:	d9801e04 	addi	r6,sp,120
18001fc8:	a00b883a 	mov	r5,r20
18001fcc:	9809883a 	mov	r4,r19
18001fd0:	80065b00 	call	180065b0 <__ssprint_r>
18001fd4:	103c261e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001fd8:	d8c02017 	ldw	r3,128(sp)
18001fdc:	d8801f17 	ldw	r2,124(sp)
18001fe0:	da000404 	addi	r8,sp,16
18001fe4:	003fee06 	br	18001fa0 <__alt_data_end+0xf8001fa0>
18001fe8:	d9402d17 	ldw	r5,180(sp)
18001fec:	d9801e04 	addi	r6,sp,120
18001ff0:	9809883a 	mov	r4,r19
18001ff4:	80065b00 	call	180065b0 <__ssprint_r>
18001ff8:	103c1d1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18001ffc:	d8c02017 	ldw	r3,128(sp)
18002000:	df002787 	ldb	fp,158(sp)
18002004:	da000404 	addi	r8,sp,16
18002008:	003d3806 	br	180014ec <__alt_data_end+0xf80014ec>
1800200c:	9080040c 	andi	r2,r18,16
18002010:	10005c26 	beq	r2,zero,18002184 <___svfprintf_internal_r+0x14b0>
18002014:	d8c02e17 	ldw	r3,184(sp)
18002018:	d9002a17 	ldw	r4,168(sp)
1800201c:	d8002785 	stb	zero,158(sp)
18002020:	18800104 	addi	r2,r3,4
18002024:	1d000017 	ldw	r20,0(r3)
18002028:	002d883a 	mov	r22,zero
1800202c:	20005e16 	blt	r4,zero,180021a8 <___svfprintf_internal_r+0x14d4>
18002030:	00ffdfc4 	movi	r3,-129
18002034:	d8802e15 	stw	r2,184(sp)
18002038:	90e4703a 	and	r18,r18,r3
1800203c:	0039883a 	mov	fp,zero
18002040:	a03ddf26 	beq	r20,zero,180017c0 <__alt_data_end+0xf80017c0>
18002044:	00800244 	movi	r2,9
18002048:	153c8e36 	bltu	r2,r20,18001284 <__alt_data_end+0xf8001284>
1800204c:	a5000c04 	addi	r20,r20,48
18002050:	dc001dc4 	addi	r16,sp,119
18002054:	dd001dc5 	stb	r20,119(sp)
18002058:	d8c02817 	ldw	r3,160(sp)
1800205c:	1c07c83a 	sub	r3,r3,r16
18002060:	d8c02b15 	stw	r3,172(sp)
18002064:	003cd306 	br	180013b4 <__alt_data_end+0xf80013b4>
18002068:	d8803317 	ldw	r2,204(sp)
1800206c:	143fffc4 	addi	r16,r2,-1
18002070:	043f560e 	bge	zero,r16,18001dcc <__alt_data_end+0xf8001dcc>
18002074:	07000404 	movi	fp,16
18002078:	e403530e 	bge	fp,r16,18002dc8 <___svfprintf_internal_r+0x20f4>
1800207c:	01460074 	movhi	r5,6145
18002080:	29783384 	addi	r5,r5,-7986
18002084:	d9402c15 	stw	r5,176(sp)
18002088:	01c001c4 	movi	r7,7
1800208c:	dd002d17 	ldw	r20,180(sp)
18002090:	00000306 	br	180020a0 <___svfprintf_internal_r+0x13cc>
18002094:	843ffc04 	addi	r16,r16,-16
18002098:	b5800204 	addi	r22,r22,8
1800209c:	e400130e 	bge	fp,r16,180020ec <___svfprintf_internal_r+0x1418>
180020a0:	18c00404 	addi	r3,r3,16
180020a4:	8c400044 	addi	r17,r17,1
180020a8:	b5400015 	stw	r21,0(r22)
180020ac:	b7000115 	stw	fp,4(r22)
180020b0:	d8c02015 	stw	r3,128(sp)
180020b4:	dc401f15 	stw	r17,124(sp)
180020b8:	3c7ff60e 	bge	r7,r17,18002094 <__alt_data_end+0xf8002094>
180020bc:	d9801e04 	addi	r6,sp,120
180020c0:	a00b883a 	mov	r5,r20
180020c4:	9809883a 	mov	r4,r19
180020c8:	d9c03d15 	stw	r7,244(sp)
180020cc:	80065b00 	call	180065b0 <__ssprint_r>
180020d0:	d9c03d17 	ldw	r7,244(sp)
180020d4:	103be61e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180020d8:	843ffc04 	addi	r16,r16,-16
180020dc:	d8c02017 	ldw	r3,128(sp)
180020e0:	dc401f17 	ldw	r17,124(sp)
180020e4:	dd800404 	addi	r22,sp,16
180020e8:	e43fed16 	blt	fp,r16,180020a0 <__alt_data_end+0xf80020a0>
180020ec:	d8802c17 	ldw	r2,176(sp)
180020f0:	1c07883a 	add	r3,r3,r16
180020f4:	8c400044 	addi	r17,r17,1
180020f8:	b0800015 	stw	r2,0(r22)
180020fc:	b4000115 	stw	r16,4(r22)
18002100:	d8c02015 	stw	r3,128(sp)
18002104:	dc401f15 	stw	r17,124(sp)
18002108:	008001c4 	movi	r2,7
1800210c:	147f2e0e 	bge	r2,r17,18001dc8 <__alt_data_end+0xf8001dc8>
18002110:	d9402d17 	ldw	r5,180(sp)
18002114:	d9801e04 	addi	r6,sp,120
18002118:	9809883a 	mov	r4,r19
1800211c:	80065b00 	call	180065b0 <__ssprint_r>
18002120:	103bd31e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002124:	d8c02017 	ldw	r3,128(sp)
18002128:	dc401f17 	ldw	r17,124(sp)
1800212c:	dd800404 	addi	r22,sp,16
18002130:	003f2606 	br	18001dcc <__alt_data_end+0xf8001dcc>
18002134:	9080040c 	andi	r2,r18,16
18002138:	1000c326 	beq	r2,zero,18002448 <___svfprintf_internal_r+0x1774>
1800213c:	d9402e17 	ldw	r5,184(sp)
18002140:	2d000017 	ldw	r20,0(r5)
18002144:	29400104 	addi	r5,r5,4
18002148:	d9402e15 	stw	r5,184(sp)
1800214c:	a02dd7fa 	srai	r22,r20,31
18002150:	b005883a 	mov	r2,r22
18002154:	103c430e 	bge	r2,zero,18001264 <__alt_data_end+0xf8001264>
18002158:	d9402a17 	ldw	r5,168(sp)
1800215c:	0529c83a 	sub	r20,zero,r20
18002160:	07000b44 	movi	fp,45
18002164:	a004c03a 	cmpne	r2,r20,zero
18002168:	05adc83a 	sub	r22,zero,r22
1800216c:	df002785 	stb	fp,158(sp)
18002170:	b0adc83a 	sub	r22,r22,r2
18002174:	28022e16 	blt	r5,zero,18002a30 <___svfprintf_internal_r+0x1d5c>
18002178:	00bfdfc4 	movi	r2,-129
1800217c:	90a4703a 	and	r18,r18,r2
18002180:	003c3f06 	br	18001280 <__alt_data_end+0xf8001280>
18002184:	9080100c 	andi	r2,r18,64
18002188:	d8002785 	stb	zero,158(sp)
1800218c:	10012526 	beq	r2,zero,18002624 <___svfprintf_internal_r+0x1950>
18002190:	d9402e17 	ldw	r5,184(sp)
18002194:	d8c02a17 	ldw	r3,168(sp)
18002198:	002d883a 	mov	r22,zero
1800219c:	28800104 	addi	r2,r5,4
180021a0:	2d00000b 	ldhu	r20,0(r5)
180021a4:	183fa20e 	bge	r3,zero,18002030 <__alt_data_end+0xf8002030>
180021a8:	d8802e15 	stw	r2,184(sp)
180021ac:	0039883a 	mov	fp,zero
180021b0:	a584b03a 	or	r2,r20,r22
180021b4:	103c321e 	bne	r2,zero,18001280 <__alt_data_end+0xf8001280>
180021b8:	00800044 	movi	r2,1
180021bc:	003e5006 	br	18001b00 <__alt_data_end+0xf8001b00>
180021c0:	d9402d17 	ldw	r5,180(sp)
180021c4:	d9801e04 	addi	r6,sp,120
180021c8:	9809883a 	mov	r4,r19
180021cc:	80065b00 	call	180065b0 <__ssprint_r>
180021d0:	103ba71e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180021d4:	d8c02017 	ldw	r3,128(sp)
180021d8:	da000404 	addi	r8,sp,16
180021dc:	d9003217 	ldw	r4,200(sp)
180021e0:	d8802617 	ldw	r2,152(sp)
180021e4:	d9403317 	ldw	r5,204(sp)
180021e8:	8123883a 	add	r17,r16,r4
180021ec:	11400216 	blt	r2,r5,180021f8 <___svfprintf_internal_r+0x1524>
180021f0:	9100004c 	andi	r4,r18,1
180021f4:	20000d26 	beq	r4,zero,1800222c <___svfprintf_internal_r+0x1558>
180021f8:	d9003817 	ldw	r4,224(sp)
180021fc:	d9403417 	ldw	r5,208(sp)
18002200:	1907883a 	add	r3,r3,r4
18002204:	d9001f17 	ldw	r4,124(sp)
18002208:	41400015 	stw	r5,0(r8)
1800220c:	d9403817 	ldw	r5,224(sp)
18002210:	21000044 	addi	r4,r4,1
18002214:	d8c02015 	stw	r3,128(sp)
18002218:	41400115 	stw	r5,4(r8)
1800221c:	d9001f15 	stw	r4,124(sp)
18002220:	014001c4 	movi	r5,7
18002224:	2901dc16 	blt	r5,r4,18002998 <___svfprintf_internal_r+0x1cc4>
18002228:	42000204 	addi	r8,r8,8
1800222c:	d9003317 	ldw	r4,204(sp)
18002230:	8121883a 	add	r16,r16,r4
18002234:	2085c83a 	sub	r2,r4,r2
18002238:	8461c83a 	sub	r16,r16,r17
1800223c:	1400010e 	bge	r2,r16,18002244 <___svfprintf_internal_r+0x1570>
18002240:	1021883a 	mov	r16,r2
18002244:	04000a0e 	bge	zero,r16,18002270 <___svfprintf_internal_r+0x159c>
18002248:	d9001f17 	ldw	r4,124(sp)
1800224c:	1c07883a 	add	r3,r3,r16
18002250:	44400015 	stw	r17,0(r8)
18002254:	21000044 	addi	r4,r4,1
18002258:	44000115 	stw	r16,4(r8)
1800225c:	d8c02015 	stw	r3,128(sp)
18002260:	d9001f15 	stw	r4,124(sp)
18002264:	014001c4 	movi	r5,7
18002268:	2901e616 	blt	r5,r4,18002a04 <___svfprintf_internal_r+0x1d30>
1800226c:	42000204 	addi	r8,r8,8
18002270:	8001f616 	blt	r16,zero,18002a4c <___svfprintf_internal_r+0x1d78>
18002274:	1421c83a 	sub	r16,r2,r16
18002278:	043cfa0e 	bge	zero,r16,18001664 <__alt_data_end+0xf8001664>
1800227c:	04400404 	movi	r17,16
18002280:	d8801f17 	ldw	r2,124(sp)
18002284:	8c3edd0e 	bge	r17,r16,18001dfc <__alt_data_end+0xf8001dfc>
18002288:	01460074 	movhi	r5,6145
1800228c:	29783384 	addi	r5,r5,-7986
18002290:	d9402c15 	stw	r5,176(sp)
18002294:	058001c4 	movi	r22,7
18002298:	dd002d17 	ldw	r20,180(sp)
1800229c:	00000306 	br	180022ac <___svfprintf_internal_r+0x15d8>
180022a0:	42000204 	addi	r8,r8,8
180022a4:	843ffc04 	addi	r16,r16,-16
180022a8:	8c3ed70e 	bge	r17,r16,18001e08 <__alt_data_end+0xf8001e08>
180022ac:	18c00404 	addi	r3,r3,16
180022b0:	10800044 	addi	r2,r2,1
180022b4:	45400015 	stw	r21,0(r8)
180022b8:	44400115 	stw	r17,4(r8)
180022bc:	d8c02015 	stw	r3,128(sp)
180022c0:	d8801f15 	stw	r2,124(sp)
180022c4:	b0bff60e 	bge	r22,r2,180022a0 <__alt_data_end+0xf80022a0>
180022c8:	d9801e04 	addi	r6,sp,120
180022cc:	a00b883a 	mov	r5,r20
180022d0:	9809883a 	mov	r4,r19
180022d4:	80065b00 	call	180065b0 <__ssprint_r>
180022d8:	103b651e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180022dc:	d8c02017 	ldw	r3,128(sp)
180022e0:	d8801f17 	ldw	r2,124(sp)
180022e4:	da000404 	addi	r8,sp,16
180022e8:	003fee06 	br	180022a4 <__alt_data_end+0xf80022a4>
180022ec:	9088703a 	and	r4,r18,r2
180022f0:	203e8d1e 	bne	r4,zero,18001d28 <__alt_data_end+0xf8001d28>
180022f4:	dc401f17 	ldw	r17,124(sp)
180022f8:	40800115 	stw	r2,4(r8)
180022fc:	44000015 	stw	r16,0(r8)
18002300:	8c400044 	addi	r17,r17,1
18002304:	d8c02015 	stw	r3,128(sp)
18002308:	dc401f15 	stw	r17,124(sp)
1800230c:	008001c4 	movi	r2,7
18002310:	147f7f16 	blt	r2,r17,18002110 <__alt_data_end+0xf8002110>
18002314:	45800204 	addi	r22,r8,8
18002318:	003eac06 	br	18001dcc <__alt_data_end+0xf8001dcc>
1800231c:	d9402d17 	ldw	r5,180(sp)
18002320:	d9801e04 	addi	r6,sp,120
18002324:	9809883a 	mov	r4,r19
18002328:	80065b00 	call	180065b0 <__ssprint_r>
1800232c:	103b501e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002330:	d8c02017 	ldw	r3,128(sp)
18002334:	dc401f17 	ldw	r17,124(sp)
18002338:	da000404 	addi	r8,sp,16
1800233c:	003e8406 	br	18001d50 <__alt_data_end+0xf8001d50>
18002340:	d9402d17 	ldw	r5,180(sp)
18002344:	d9801e04 	addi	r6,sp,120
18002348:	9809883a 	mov	r4,r19
1800234c:	80065b00 	call	180065b0 <__ssprint_r>
18002350:	103b471e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002354:	d8c02017 	ldw	r3,128(sp)
18002358:	dc401f17 	ldw	r17,124(sp)
1800235c:	dd800404 	addi	r22,sp,16
18002360:	003e8606 	br	18001d7c <__alt_data_end+0xf8001d7c>
18002364:	0029883a 	mov	r20,zero
18002368:	a5000c04 	addi	r20,r20,48
1800236c:	dc001dc4 	addi	r16,sp,119
18002370:	dd001dc5 	stb	r20,119(sp)
18002374:	003f3806 	br	18002058 <__alt_data_end+0xf8002058>
18002378:	d9402d17 	ldw	r5,180(sp)
1800237c:	d9801e04 	addi	r6,sp,120
18002380:	9809883a 	mov	r4,r19
18002384:	80065b00 	call	180065b0 <__ssprint_r>
18002388:	103b391e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
1800238c:	d8c02017 	ldw	r3,128(sp)
18002390:	da000404 	addi	r8,sp,16
18002394:	003c7306 	br	18001564 <__alt_data_end+0xf8001564>
18002398:	d9003617 	ldw	r4,216(sp)
1800239c:	d9403717 	ldw	r5,220(sp)
180023a0:	da003e15 	stw	r8,248(sp)
180023a4:	800640c0 	call	1800640c <__fpclassifyd>
180023a8:	da003e17 	ldw	r8,248(sp)
180023ac:	1000bd1e 	bne	r2,zero,180026a4 <___svfprintf_internal_r+0x19d0>
180023b0:	008011c4 	movi	r2,71
180023b4:	14411e0e 	bge	r2,r17,18002830 <___svfprintf_internal_r+0x1b5c>
180023b8:	04060074 	movhi	r16,6145
180023bc:	84382604 	addi	r16,r16,-8040
180023c0:	00c000c4 	movi	r3,3
180023c4:	00bfdfc4 	movi	r2,-129
180023c8:	d8c02915 	stw	r3,164(sp)
180023cc:	90a4703a 	and	r18,r18,r2
180023d0:	df002783 	ldbu	fp,158(sp)
180023d4:	d8c02b15 	stw	r3,172(sp)
180023d8:	d8002a15 	stw	zero,168(sp)
180023dc:	d8003215 	stw	zero,200(sp)
180023e0:	003bfa06 	br	180013cc <__alt_data_end+0xf80013cc>
180023e4:	9080100c 	andi	r2,r18,64
180023e8:	d8002785 	stb	zero,158(sp)
180023ec:	10009426 	beq	r2,zero,18002640 <___svfprintf_internal_r+0x196c>
180023f0:	d9402e17 	ldw	r5,184(sp)
180023f4:	d8c02a17 	ldw	r3,168(sp)
180023f8:	002d883a 	mov	r22,zero
180023fc:	28800104 	addi	r2,r5,4
18002400:	2d00000b 	ldhu	r20,0(r5)
18002404:	183ec10e 	bge	r3,zero,18001f0c <__alt_data_end+0xf8001f0c>
18002408:	a586b03a 	or	r3,r20,r22
1800240c:	d8802e15 	stw	r2,184(sp)
18002410:	183ec21e 	bne	r3,zero,18001f1c <__alt_data_end+0xf8001f1c>
18002414:	0039883a 	mov	fp,zero
18002418:	0005883a 	mov	r2,zero
1800241c:	003db806 	br	18001b00 <__alt_data_end+0xf8001b00>
18002420:	d8c02e17 	ldw	r3,184(sp)
18002424:	d9002e17 	ldw	r4,184(sp)
18002428:	d9402e17 	ldw	r5,184(sp)
1800242c:	18c00017 	ldw	r3,0(r3)
18002430:	21000117 	ldw	r4,4(r4)
18002434:	29400204 	addi	r5,r5,8
18002438:	d8c03615 	stw	r3,216(sp)
1800243c:	d9003715 	stw	r4,220(sp)
18002440:	d9402e15 	stw	r5,184(sp)
18002444:	003b5a06 	br	180011b0 <__alt_data_end+0xf80011b0>
18002448:	9080100c 	andi	r2,r18,64
1800244c:	10010726 	beq	r2,zero,1800286c <___svfprintf_internal_r+0x1b98>
18002450:	d8802e17 	ldw	r2,184(sp)
18002454:	1500000f 	ldh	r20,0(r2)
18002458:	10800104 	addi	r2,r2,4
1800245c:	d8802e15 	stw	r2,184(sp)
18002460:	a02dd7fa 	srai	r22,r20,31
18002464:	b005883a 	mov	r2,r22
18002468:	003b7d06 	br	18001260 <__alt_data_end+0xf8001260>
1800246c:	9080100c 	andi	r2,r18,64
18002470:	10010526 	beq	r2,zero,18002888 <___svfprintf_internal_r+0x1bb4>
18002474:	d8c02e17 	ldw	r3,184(sp)
18002478:	002d883a 	mov	r22,zero
1800247c:	1d00000b 	ldhu	r20,0(r3)
18002480:	18c00104 	addi	r3,r3,4
18002484:	d8c02e15 	stw	r3,184(sp)
18002488:	003ce206 	br	18001814 <__alt_data_end+0xf8001814>
1800248c:	bc400007 	ldb	r17,0(r23)
18002490:	003a6506 	br	18000e28 <__alt_data_end+0xf8000e28>
18002494:	9080040c 	andi	r2,r18,16
18002498:	10010126 	beq	r2,zero,180028a0 <___svfprintf_internal_r+0x1bcc>
1800249c:	d8c02e17 	ldw	r3,184(sp)
180024a0:	d9002f17 	ldw	r4,188(sp)
180024a4:	18800017 	ldw	r2,0(r3)
180024a8:	18c00104 	addi	r3,r3,4
180024ac:	d8c02e15 	stw	r3,184(sp)
180024b0:	11000015 	stw	r4,0(r2)
180024b4:	003a3206 	br	18000d80 <__alt_data_end+0xf8000d80>
180024b8:	d9002a17 	ldw	r4,168(sp)
180024bc:	d8002785 	stb	zero,158(sp)
180024c0:	203d8d16 	blt	r4,zero,18001af8 <__alt_data_end+0xf8001af8>
180024c4:	00bfdfc4 	movi	r2,-129
180024c8:	90a4703a 	and	r18,r18,r2
180024cc:	003ad506 	br	18001024 <__alt_data_end+0xf8001024>
180024d0:	01460074 	movhi	r5,6145
180024d4:	29783384 	addi	r5,r5,-7986
180024d8:	d9402c15 	stw	r5,176(sp)
180024dc:	d9402c17 	ldw	r5,176(sp)
180024e0:	1c47883a 	add	r3,r3,r17
180024e4:	10800044 	addi	r2,r2,1
180024e8:	41400015 	stw	r5,0(r8)
180024ec:	44400115 	stw	r17,4(r8)
180024f0:	d8c02015 	stw	r3,128(sp)
180024f4:	d8801f15 	stw	r2,124(sp)
180024f8:	010001c4 	movi	r4,7
180024fc:	20bf3016 	blt	r4,r2,180021c0 <__alt_data_end+0xf80021c0>
18002500:	42000204 	addi	r8,r8,8
18002504:	003f3506 	br	180021dc <__alt_data_end+0xf80021dc>
18002508:	01060074 	movhi	r4,6145
1800250c:	21383384 	addi	r4,r4,-7986
18002510:	d9002c15 	stw	r4,176(sp)
18002514:	003c3c06 	br	18001608 <__alt_data_end+0xf8001608>
18002518:	d9402d17 	ldw	r5,180(sp)
1800251c:	d9801e04 	addi	r6,sp,120
18002520:	9809883a 	mov	r4,r19
18002524:	80065b00 	call	180065b0 <__ssprint_r>
18002528:	103ad11e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
1800252c:	d8c02017 	ldw	r3,128(sp)
18002530:	da000404 	addi	r8,sp,16
18002534:	003d9306 	br	18001b84 <__alt_data_end+0xf8001b84>
18002538:	d8801f17 	ldw	r2,124(sp)
1800253c:	01460074 	movhi	r5,6145
18002540:	01000044 	movi	r4,1
18002544:	18c00044 	addi	r3,r3,1
18002548:	10800044 	addi	r2,r2,1
1800254c:	29783304 	addi	r5,r5,-7988
18002550:	41000115 	stw	r4,4(r8)
18002554:	41400015 	stw	r5,0(r8)
18002558:	d8c02015 	stw	r3,128(sp)
1800255c:	d8801f15 	stw	r2,124(sp)
18002560:	010001c4 	movi	r4,7
18002564:	2080b516 	blt	r4,r2,1800283c <___svfprintf_internal_r+0x1b68>
18002568:	42000204 	addi	r8,r8,8
1800256c:	8800041e 	bne	r17,zero,18002580 <___svfprintf_internal_r+0x18ac>
18002570:	d8803317 	ldw	r2,204(sp)
18002574:	1000021e 	bne	r2,zero,18002580 <___svfprintf_internal_r+0x18ac>
18002578:	9080004c 	andi	r2,r18,1
1800257c:	103c3926 	beq	r2,zero,18001664 <__alt_data_end+0xf8001664>
18002580:	d9003817 	ldw	r4,224(sp)
18002584:	d8801f17 	ldw	r2,124(sp)
18002588:	d9403417 	ldw	r5,208(sp)
1800258c:	20c7883a 	add	r3,r4,r3
18002590:	10800044 	addi	r2,r2,1
18002594:	41000115 	stw	r4,4(r8)
18002598:	41400015 	stw	r5,0(r8)
1800259c:	d8c02015 	stw	r3,128(sp)
180025a0:	d8801f15 	stw	r2,124(sp)
180025a4:	010001c4 	movi	r4,7
180025a8:	20818016 	blt	r4,r2,18002bac <___svfprintf_internal_r+0x1ed8>
180025ac:	42000204 	addi	r8,r8,8
180025b0:	0463c83a 	sub	r17,zero,r17
180025b4:	0440cb0e 	bge	zero,r17,180028e4 <___svfprintf_internal_r+0x1c10>
180025b8:	05800404 	movi	r22,16
180025bc:	b440e80e 	bge	r22,r17,18002960 <___svfprintf_internal_r+0x1c8c>
180025c0:	01460074 	movhi	r5,6145
180025c4:	29783384 	addi	r5,r5,-7986
180025c8:	d9402c15 	stw	r5,176(sp)
180025cc:	070001c4 	movi	fp,7
180025d0:	dd002d17 	ldw	r20,180(sp)
180025d4:	00000306 	br	180025e4 <___svfprintf_internal_r+0x1910>
180025d8:	42000204 	addi	r8,r8,8
180025dc:	8c7ffc04 	addi	r17,r17,-16
180025e0:	b440e20e 	bge	r22,r17,1800296c <___svfprintf_internal_r+0x1c98>
180025e4:	18c00404 	addi	r3,r3,16
180025e8:	10800044 	addi	r2,r2,1
180025ec:	45400015 	stw	r21,0(r8)
180025f0:	45800115 	stw	r22,4(r8)
180025f4:	d8c02015 	stw	r3,128(sp)
180025f8:	d8801f15 	stw	r2,124(sp)
180025fc:	e0bff60e 	bge	fp,r2,180025d8 <__alt_data_end+0xf80025d8>
18002600:	d9801e04 	addi	r6,sp,120
18002604:	a00b883a 	mov	r5,r20
18002608:	9809883a 	mov	r4,r19
1800260c:	80065b00 	call	180065b0 <__ssprint_r>
18002610:	103a971e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002614:	d8c02017 	ldw	r3,128(sp)
18002618:	d8801f17 	ldw	r2,124(sp)
1800261c:	da000404 	addi	r8,sp,16
18002620:	003fee06 	br	180025dc <__alt_data_end+0xf80025dc>
18002624:	d9002e17 	ldw	r4,184(sp)
18002628:	d9402a17 	ldw	r5,168(sp)
1800262c:	002d883a 	mov	r22,zero
18002630:	20800104 	addi	r2,r4,4
18002634:	25000017 	ldw	r20,0(r4)
18002638:	283e7d0e 	bge	r5,zero,18002030 <__alt_data_end+0xf8002030>
1800263c:	003eda06 	br	180021a8 <__alt_data_end+0xf80021a8>
18002640:	d9002e17 	ldw	r4,184(sp)
18002644:	d9402a17 	ldw	r5,168(sp)
18002648:	002d883a 	mov	r22,zero
1800264c:	20800104 	addi	r2,r4,4
18002650:	25000017 	ldw	r20,0(r4)
18002654:	283e2d0e 	bge	r5,zero,18001f0c <__alt_data_end+0xf8001f0c>
18002658:	003f6b06 	br	18002408 <__alt_data_end+0xf8002408>
1800265c:	d8c02e15 	stw	r3,184(sp)
18002660:	0039883a 	mov	fp,zero
18002664:	003ed206 	br	180021b0 <__alt_data_end+0xf80021b0>
18002668:	bc400043 	ldbu	r17,1(r23)
1800266c:	84000814 	ori	r16,r16,32
18002670:	bdc00044 	addi	r23,r23,1
18002674:	8c403fcc 	andi	r17,r17,255
18002678:	8c40201c 	xori	r17,r17,128
1800267c:	8c7fe004 	addi	r17,r17,-128
18002680:	0039e906 	br	18000e28 <__alt_data_end+0xf8000e28>
18002684:	d9402d17 	ldw	r5,180(sp)
18002688:	d9801e04 	addi	r6,sp,120
1800268c:	9809883a 	mov	r4,r19
18002690:	80065b00 	call	180065b0 <__ssprint_r>
18002694:	103a761e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002698:	d8c02017 	ldw	r3,128(sp)
1800269c:	da000404 	addi	r8,sp,16
180026a0:	003d4a06 	br	18001bcc <__alt_data_end+0xf8001bcc>
180026a4:	d9002a17 	ldw	r4,168(sp)
180026a8:	05bff7c4 	movi	r22,-33
180026ac:	00bfffc4 	movi	r2,-1
180026b0:	8dac703a 	and	r22,r17,r22
180026b4:	20806a26 	beq	r4,r2,18002860 <___svfprintf_internal_r+0x1b8c>
180026b8:	008011c4 	movi	r2,71
180026bc:	b0813726 	beq	r22,r2,18002b9c <___svfprintf_internal_r+0x1ec8>
180026c0:	d9003717 	ldw	r4,220(sp)
180026c4:	90c04014 	ori	r3,r18,256
180026c8:	d8c02c15 	stw	r3,176(sp)
180026cc:	20015d16 	blt	r4,zero,18002c44 <___svfprintf_internal_r+0x1f70>
180026d0:	dd003717 	ldw	r20,220(sp)
180026d4:	d8002905 	stb	zero,164(sp)
180026d8:	00801984 	movi	r2,102
180026dc:	88814026 	beq	r17,r2,18002be0 <___svfprintf_internal_r+0x1f0c>
180026e0:	00801184 	movi	r2,70
180026e4:	88817126 	beq	r17,r2,18002cac <___svfprintf_internal_r+0x1fd8>
180026e8:	00801144 	movi	r2,69
180026ec:	b0816226 	beq	r22,r2,18002c78 <___svfprintf_internal_r+0x1fa4>
180026f0:	d8c02a17 	ldw	r3,168(sp)
180026f4:	d8802104 	addi	r2,sp,132
180026f8:	d8800315 	stw	r2,12(sp)
180026fc:	d9403617 	ldw	r5,216(sp)
18002700:	d8802504 	addi	r2,sp,148
18002704:	d8800215 	stw	r2,8(sp)
18002708:	d8802604 	addi	r2,sp,152
1800270c:	d8c00015 	stw	r3,0(sp)
18002710:	d8800115 	stw	r2,4(sp)
18002714:	01c00084 	movi	r7,2
18002718:	a00d883a 	mov	r6,r20
1800271c:	9809883a 	mov	r4,r19
18002720:	d8c03d15 	stw	r3,244(sp)
18002724:	da003e15 	stw	r8,248(sp)
18002728:	80031b80 	call	180031b8 <_dtoa_r>
1800272c:	1021883a 	mov	r16,r2
18002730:	008019c4 	movi	r2,103
18002734:	d8c03d17 	ldw	r3,244(sp)
18002738:	da003e17 	ldw	r8,248(sp)
1800273c:	8880e726 	beq	r17,r2,18002adc <___svfprintf_internal_r+0x1e08>
18002740:	008011c4 	movi	r2,71
18002744:	8880d426 	beq	r17,r2,18002a98 <___svfprintf_internal_r+0x1dc4>
18002748:	80f9883a 	add	fp,r16,r3
1800274c:	d9003617 	ldw	r4,216(sp)
18002750:	000d883a 	mov	r6,zero
18002754:	000f883a 	mov	r7,zero
18002758:	a00b883a 	mov	r5,r20
1800275c:	da003e15 	stw	r8,248(sp)
18002760:	800a7600 	call	1800a760 <__eqdf2>
18002764:	da003e17 	ldw	r8,248(sp)
18002768:	1000e426 	beq	r2,zero,18002afc <___svfprintf_internal_r+0x1e28>
1800276c:	d8802117 	ldw	r2,132(sp)
18002770:	1700062e 	bgeu	r2,fp,1800278c <___svfprintf_internal_r+0x1ab8>
18002774:	01000c04 	movi	r4,48
18002778:	10c00044 	addi	r3,r2,1
1800277c:	d8c02115 	stw	r3,132(sp)
18002780:	11000005 	stb	r4,0(r2)
18002784:	d8802117 	ldw	r2,132(sp)
18002788:	173ffb36 	bltu	r2,fp,18002778 <__alt_data_end+0xf8002778>
1800278c:	1405c83a 	sub	r2,r2,r16
18002790:	d8803315 	stw	r2,204(sp)
18002794:	008011c4 	movi	r2,71
18002798:	b080c526 	beq	r22,r2,18002ab0 <___svfprintf_internal_r+0x1ddc>
1800279c:	00801944 	movi	r2,101
180027a0:	1441d80e 	bge	r2,r17,18002f04 <___svfprintf_internal_r+0x2230>
180027a4:	d8c02617 	ldw	r3,152(sp)
180027a8:	00801984 	movi	r2,102
180027ac:	d8c03215 	stw	r3,200(sp)
180027b0:	88813426 	beq	r17,r2,18002c84 <___svfprintf_internal_r+0x1fb0>
180027b4:	d8c03217 	ldw	r3,200(sp)
180027b8:	d9003317 	ldw	r4,204(sp)
180027bc:	19012516 	blt	r3,r4,18002c54 <___svfprintf_internal_r+0x1f80>
180027c0:	9480004c 	andi	r18,r18,1
180027c4:	9001841e 	bne	r18,zero,18002dd8 <___svfprintf_internal_r+0x2104>
180027c8:	1805883a 	mov	r2,r3
180027cc:	1801cb16 	blt	r3,zero,18002efc <___svfprintf_internal_r+0x2228>
180027d0:	d8c03217 	ldw	r3,200(sp)
180027d4:	044019c4 	movi	r17,103
180027d8:	d8c02b15 	stw	r3,172(sp)
180027dc:	df002907 	ldb	fp,164(sp)
180027e0:	e000a61e 	bne	fp,zero,18002a7c <___svfprintf_internal_r+0x1da8>
180027e4:	df002783 	ldbu	fp,158(sp)
180027e8:	d8802915 	stw	r2,164(sp)
180027ec:	dc802c17 	ldw	r18,176(sp)
180027f0:	d8002a15 	stw	zero,168(sp)
180027f4:	003af506 	br	180013cc <__alt_data_end+0xf80013cc>
180027f8:	04060074 	movhi	r16,6145
180027fc:	84382304 	addi	r16,r16,-8052
18002800:	003a7e06 	br	180011fc <__alt_data_end+0xf80011fc>
18002804:	d9003917 	ldw	r4,228(sp)
18002808:	04001004 	movi	r16,64
1800280c:	800b883a 	mov	r5,r16
18002810:	800491c0 	call	1800491c <_malloc_r>
18002814:	d9002d17 	ldw	r4,180(sp)
18002818:	20800015 	stw	r2,0(r4)
1800281c:	20800415 	stw	r2,16(r4)
18002820:	1001d026 	beq	r2,zero,18002f64 <___svfprintf_internal_r+0x2290>
18002824:	d8802d17 	ldw	r2,180(sp)
18002828:	14000515 	stw	r16,20(r2)
1800282c:	00394406 	br	18000d40 <__alt_data_end+0xf8000d40>
18002830:	04060074 	movhi	r16,6145
18002834:	84382504 	addi	r16,r16,-8044
18002838:	003ee106 	br	180023c0 <__alt_data_end+0xf80023c0>
1800283c:	d9402d17 	ldw	r5,180(sp)
18002840:	d9801e04 	addi	r6,sp,120
18002844:	9809883a 	mov	r4,r19
18002848:	80065b00 	call	180065b0 <__ssprint_r>
1800284c:	103a081e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002850:	dc402617 	ldw	r17,152(sp)
18002854:	d8c02017 	ldw	r3,128(sp)
18002858:	da000404 	addi	r8,sp,16
1800285c:	003f4306 	br	1800256c <__alt_data_end+0xf800256c>
18002860:	01400184 	movi	r5,6
18002864:	d9402a15 	stw	r5,168(sp)
18002868:	003f9506 	br	180026c0 <__alt_data_end+0xf80026c0>
1800286c:	d8c02e17 	ldw	r3,184(sp)
18002870:	1d000017 	ldw	r20,0(r3)
18002874:	18c00104 	addi	r3,r3,4
18002878:	d8c02e15 	stw	r3,184(sp)
1800287c:	a02dd7fa 	srai	r22,r20,31
18002880:	b005883a 	mov	r2,r22
18002884:	003a7606 	br	18001260 <__alt_data_end+0xf8001260>
18002888:	d9002e17 	ldw	r4,184(sp)
1800288c:	002d883a 	mov	r22,zero
18002890:	25000017 	ldw	r20,0(r4)
18002894:	21000104 	addi	r4,r4,4
18002898:	d9002e15 	stw	r4,184(sp)
1800289c:	003bdd06 	br	18001814 <__alt_data_end+0xf8001814>
180028a0:	9480100c 	andi	r18,r18,64
180028a4:	90006e26 	beq	r18,zero,18002a60 <___svfprintf_internal_r+0x1d8c>
180028a8:	d9402e17 	ldw	r5,184(sp)
180028ac:	d8c02f17 	ldw	r3,188(sp)
180028b0:	28800017 	ldw	r2,0(r5)
180028b4:	29400104 	addi	r5,r5,4
180028b8:	d9402e15 	stw	r5,184(sp)
180028bc:	10c0000d 	sth	r3,0(r2)
180028c0:	00392f06 	br	18000d80 <__alt_data_end+0xf8000d80>
180028c4:	d9402d17 	ldw	r5,180(sp)
180028c8:	d9801e04 	addi	r6,sp,120
180028cc:	9809883a 	mov	r4,r19
180028d0:	80065b00 	call	180065b0 <__ssprint_r>
180028d4:	1039e61e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180028d8:	d8c02017 	ldw	r3,128(sp)
180028dc:	d8801f17 	ldw	r2,124(sp)
180028e0:	da000404 	addi	r8,sp,16
180028e4:	d9403317 	ldw	r5,204(sp)
180028e8:	10800044 	addi	r2,r2,1
180028ec:	44000015 	stw	r16,0(r8)
180028f0:	28c7883a 	add	r3,r5,r3
180028f4:	003b5506 	br	1800164c <__alt_data_end+0xf800164c>
180028f8:	8009883a 	mov	r4,r16
180028fc:	df003e15 	stw	fp,248(sp)
18002900:	8000c3c0 	call	18000c3c <strlen>
18002904:	d8802b15 	stw	r2,172(sp)
18002908:	da003e17 	ldw	r8,248(sp)
1800290c:	103c160e 	bge	r2,zero,18001968 <__alt_data_end+0xf8001968>
18002910:	0005883a 	mov	r2,zero
18002914:	003c1406 	br	18001968 <__alt_data_end+0xf8001968>
18002918:	00bfffc4 	movi	r2,-1
1800291c:	0039d906 	br	18001084 <__alt_data_end+0xf8001084>
18002920:	01060074 	movhi	r4,6145
18002924:	21383784 	addi	r4,r4,-7970
18002928:	d9003515 	stw	r4,212(sp)
1800292c:	003ae406 	br	180014c0 <__alt_data_end+0xf80014c0>
18002930:	013fffc4 	movi	r4,-1
18002934:	0039fa06 	br	18001120 <__alt_data_end+0xf8001120>
18002938:	d9402d17 	ldw	r5,180(sp)
1800293c:	d9801e04 	addi	r6,sp,120
18002940:	9809883a 	mov	r4,r19
18002944:	80065b00 	call	180065b0 <__ssprint_r>
18002948:	1039c91e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
1800294c:	d8c02017 	ldw	r3,128(sp)
18002950:	da000404 	addi	r8,sp,16
18002954:	003d8406 	br	18001f68 <__alt_data_end+0xf8001f68>
18002958:	0023883a 	mov	r17,zero
1800295c:	003d8306 	br	18001f6c <__alt_data_end+0xf8001f6c>
18002960:	01060074 	movhi	r4,6145
18002964:	21383384 	addi	r4,r4,-7986
18002968:	d9002c15 	stw	r4,176(sp)
1800296c:	d9002c17 	ldw	r4,176(sp)
18002970:	1c47883a 	add	r3,r3,r17
18002974:	10800044 	addi	r2,r2,1
18002978:	41000015 	stw	r4,0(r8)
1800297c:	44400115 	stw	r17,4(r8)
18002980:	d8c02015 	stw	r3,128(sp)
18002984:	d8801f15 	stw	r2,124(sp)
18002988:	010001c4 	movi	r4,7
1800298c:	20bfcd16 	blt	r4,r2,180028c4 <__alt_data_end+0xf80028c4>
18002990:	42000204 	addi	r8,r8,8
18002994:	003fd306 	br	180028e4 <__alt_data_end+0xf80028e4>
18002998:	d9402d17 	ldw	r5,180(sp)
1800299c:	d9801e04 	addi	r6,sp,120
180029a0:	9809883a 	mov	r4,r19
180029a4:	80065b00 	call	180065b0 <__ssprint_r>
180029a8:	1039b11e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
180029ac:	d8802617 	ldw	r2,152(sp)
180029b0:	d8c02017 	ldw	r3,128(sp)
180029b4:	da000404 	addi	r8,sp,16
180029b8:	003e1c06 	br	1800222c <__alt_data_end+0xf800222c>
180029bc:	d8802a17 	ldw	r2,168(sp)
180029c0:	00c00184 	movi	r3,6
180029c4:	1880012e 	bgeu	r3,r2,180029cc <___svfprintf_internal_r+0x1cf8>
180029c8:	1805883a 	mov	r2,r3
180029cc:	d8802b15 	stw	r2,172(sp)
180029d0:	1000f316 	blt	r2,zero,18002da0 <___svfprintf_internal_r+0x20cc>
180029d4:	04060074 	movhi	r16,6145
180029d8:	d8802915 	stw	r2,164(sp)
180029dc:	dd002e15 	stw	r20,184(sp)
180029e0:	d8002a15 	stw	zero,168(sp)
180029e4:	d8003215 	stw	zero,200(sp)
180029e8:	84383104 	addi	r16,r16,-7996
180029ec:	0039883a 	mov	fp,zero
180029f0:	003a7d06 	br	180013e8 <__alt_data_end+0xf80013e8>
180029f4:	01060074 	movhi	r4,6145
180029f8:	21383784 	addi	r4,r4,-7970
180029fc:	d9003515 	stw	r4,212(sp)
18002a00:	003b3d06 	br	180016f8 <__alt_data_end+0xf80016f8>
18002a04:	d9402d17 	ldw	r5,180(sp)
18002a08:	d9801e04 	addi	r6,sp,120
18002a0c:	9809883a 	mov	r4,r19
18002a10:	80065b00 	call	180065b0 <__ssprint_r>
18002a14:	1039961e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002a18:	d8802617 	ldw	r2,152(sp)
18002a1c:	d9403317 	ldw	r5,204(sp)
18002a20:	d8c02017 	ldw	r3,128(sp)
18002a24:	da000404 	addi	r8,sp,16
18002a28:	2885c83a 	sub	r2,r5,r2
18002a2c:	003e1006 	br	18002270 <__alt_data_end+0xf8002270>
18002a30:	00800044 	movi	r2,1
18002a34:	10803fcc 	andi	r2,r2,255
18002a38:	00c00044 	movi	r3,1
18002a3c:	10fa1026 	beq	r2,r3,18001280 <__alt_data_end+0xf8001280>
18002a40:	00c00084 	movi	r3,2
18002a44:	10fb8226 	beq	r2,r3,18001850 <__alt_data_end+0xf8001850>
18002a48:	003a4206 	br	18001354 <__alt_data_end+0xf8001354>
18002a4c:	0021883a 	mov	r16,zero
18002a50:	003e0806 	br	18002274 <__alt_data_end+0xf8002274>
18002a54:	07000b44 	movi	fp,45
18002a58:	df002785 	stb	fp,158(sp)
18002a5c:	0039e306 	br	180011ec <__alt_data_end+0xf80011ec>
18002a60:	d9002e17 	ldw	r4,184(sp)
18002a64:	d9402f17 	ldw	r5,188(sp)
18002a68:	20800017 	ldw	r2,0(r4)
18002a6c:	21000104 	addi	r4,r4,4
18002a70:	d9002e15 	stw	r4,184(sp)
18002a74:	11400015 	stw	r5,0(r2)
18002a78:	0038c106 	br	18000d80 <__alt_data_end+0xf8000d80>
18002a7c:	00c00b44 	movi	r3,45
18002a80:	d8c02785 	stb	r3,158(sp)
18002a84:	d8802915 	stw	r2,164(sp)
18002a88:	dc802c17 	ldw	r18,176(sp)
18002a8c:	d8002a15 	stw	zero,168(sp)
18002a90:	07000b44 	movi	fp,45
18002a94:	003a5106 	br	180013dc <__alt_data_end+0xf80013dc>
18002a98:	9080004c 	andi	r2,r18,1
18002a9c:	1000941e 	bne	r2,zero,18002cf0 <___svfprintf_internal_r+0x201c>
18002aa0:	d8802117 	ldw	r2,132(sp)
18002aa4:	1405c83a 	sub	r2,r2,r16
18002aa8:	d8803315 	stw	r2,204(sp)
18002aac:	b441151e 	bne	r22,r17,18002f04 <___svfprintf_internal_r+0x2230>
18002ab0:	dd802617 	ldw	r22,152(sp)
18002ab4:	00bfff44 	movi	r2,-3
18002ab8:	b0801a16 	blt	r22,r2,18002b24 <___svfprintf_internal_r+0x1e50>
18002abc:	d9402a17 	ldw	r5,168(sp)
18002ac0:	2d801816 	blt	r5,r22,18002b24 <___svfprintf_internal_r+0x1e50>
18002ac4:	dd803215 	stw	r22,200(sp)
18002ac8:	003f3a06 	br	180027b4 <__alt_data_end+0xf80027b4>
18002acc:	1025883a 	mov	r18,r2
18002ad0:	0039883a 	mov	fp,zero
18002ad4:	00800084 	movi	r2,2
18002ad8:	003fd606 	br	18002a34 <__alt_data_end+0xf8002a34>
18002adc:	9080004c 	andi	r2,r18,1
18002ae0:	103f191e 	bne	r2,zero,18002748 <__alt_data_end+0xf8002748>
18002ae4:	d8802117 	ldw	r2,132(sp)
18002ae8:	003f2806 	br	1800278c <__alt_data_end+0xf800278c>
18002aec:	01060074 	movhi	r4,6145
18002af0:	21383384 	addi	r4,r4,-7986
18002af4:	d9002c15 	stw	r4,176(sp)
18002af8:	003c7c06 	br	18001cec <__alt_data_end+0xf8001cec>
18002afc:	e005883a 	mov	r2,fp
18002b00:	003f2206 	br	1800278c <__alt_data_end+0xf800278c>
18002b04:	d9002a17 	ldw	r4,168(sp)
18002b08:	df002783 	ldbu	fp,158(sp)
18002b0c:	dd002e15 	stw	r20,184(sp)
18002b10:	d9002915 	stw	r4,164(sp)
18002b14:	d9002b15 	stw	r4,172(sp)
18002b18:	d8002a15 	stw	zero,168(sp)
18002b1c:	d8003215 	stw	zero,200(sp)
18002b20:	003a2a06 	br	180013cc <__alt_data_end+0xf80013cc>
18002b24:	8c7fff84 	addi	r17,r17,-2
18002b28:	b5bfffc4 	addi	r22,r22,-1
18002b2c:	dd802615 	stw	r22,152(sp)
18002b30:	dc4022c5 	stb	r17,139(sp)
18002b34:	b000c316 	blt	r22,zero,18002e44 <___svfprintf_internal_r+0x2170>
18002b38:	00800ac4 	movi	r2,43
18002b3c:	d8802305 	stb	r2,140(sp)
18002b40:	00800244 	movi	r2,9
18002b44:	15806e16 	blt	r2,r22,18002d00 <___svfprintf_internal_r+0x202c>
18002b48:	00800c04 	movi	r2,48
18002b4c:	b5800c04 	addi	r22,r22,48
18002b50:	d8802345 	stb	r2,141(sp)
18002b54:	dd802385 	stb	r22,142(sp)
18002b58:	d88023c4 	addi	r2,sp,143
18002b5c:	df0022c4 	addi	fp,sp,139
18002b60:	d8c03317 	ldw	r3,204(sp)
18002b64:	1739c83a 	sub	fp,r2,fp
18002b68:	d9003317 	ldw	r4,204(sp)
18002b6c:	e0c7883a 	add	r3,fp,r3
18002b70:	df003b15 	stw	fp,236(sp)
18002b74:	d8c02b15 	stw	r3,172(sp)
18002b78:	00800044 	movi	r2,1
18002b7c:	1100b70e 	bge	r2,r4,18002e5c <___svfprintf_internal_r+0x2188>
18002b80:	d8c02b17 	ldw	r3,172(sp)
18002b84:	18c00044 	addi	r3,r3,1
18002b88:	d8c02b15 	stw	r3,172(sp)
18002b8c:	1805883a 	mov	r2,r3
18002b90:	1800b016 	blt	r3,zero,18002e54 <___svfprintf_internal_r+0x2180>
18002b94:	d8003215 	stw	zero,200(sp)
18002b98:	003f1006 	br	180027dc <__alt_data_end+0xf80027dc>
18002b9c:	d8802a17 	ldw	r2,168(sp)
18002ba0:	103ec71e 	bne	r2,zero,180026c0 <__alt_data_end+0xf80026c0>
18002ba4:	dc002a15 	stw	r16,168(sp)
18002ba8:	003ec506 	br	180026c0 <__alt_data_end+0xf80026c0>
18002bac:	d9402d17 	ldw	r5,180(sp)
18002bb0:	d9801e04 	addi	r6,sp,120
18002bb4:	9809883a 	mov	r4,r19
18002bb8:	80065b00 	call	180065b0 <__ssprint_r>
18002bbc:	10392c1e 	bne	r2,zero,18001070 <__alt_data_end+0xf8001070>
18002bc0:	dc402617 	ldw	r17,152(sp)
18002bc4:	d8c02017 	ldw	r3,128(sp)
18002bc8:	d8801f17 	ldw	r2,124(sp)
18002bcc:	da000404 	addi	r8,sp,16
18002bd0:	003e7706 	br	180025b0 <__alt_data_end+0xf80025b0>
18002bd4:	182f883a 	mov	r23,r3
18002bd8:	d8002a15 	stw	zero,168(sp)
18002bdc:	00389306 	br	18000e2c <__alt_data_end+0xf8000e2c>
18002be0:	d8c02a17 	ldw	r3,168(sp)
18002be4:	d8802104 	addi	r2,sp,132
18002be8:	d8800315 	stw	r2,12(sp)
18002bec:	d9403617 	ldw	r5,216(sp)
18002bf0:	d8802504 	addi	r2,sp,148
18002bf4:	d8800215 	stw	r2,8(sp)
18002bf8:	d8802604 	addi	r2,sp,152
18002bfc:	d8c00015 	stw	r3,0(sp)
18002c00:	9809883a 	mov	r4,r19
18002c04:	d8800115 	stw	r2,4(sp)
18002c08:	01c000c4 	movi	r7,3
18002c0c:	a00d883a 	mov	r6,r20
18002c10:	da003e15 	stw	r8,248(sp)
18002c14:	80031b80 	call	180031b8 <_dtoa_r>
18002c18:	d9002a17 	ldw	r4,168(sp)
18002c1c:	da003e17 	ldw	r8,248(sp)
18002c20:	1021883a 	mov	r16,r2
18002c24:	1139883a 	add	fp,r2,r4
18002c28:	2007883a 	mov	r3,r4
18002c2c:	81000007 	ldb	r4,0(r16)
18002c30:	00800c04 	movi	r2,48
18002c34:	20806f26 	beq	r4,r2,18002df4 <___svfprintf_internal_r+0x2120>
18002c38:	d8c02617 	ldw	r3,152(sp)
18002c3c:	e0f9883a 	add	fp,fp,r3
18002c40:	003ec206 	br	1800274c <__alt_data_end+0xf800274c>
18002c44:	00c00b44 	movi	r3,45
18002c48:	2520003c 	xorhi	r20,r4,32768
18002c4c:	d8c02905 	stb	r3,164(sp)
18002c50:	003ea106 	br	180026d8 <__alt_data_end+0xf80026d8>
18002c54:	d8c03217 	ldw	r3,200(sp)
18002c58:	00c0890e 	bge	zero,r3,18002e80 <___svfprintf_internal_r+0x21ac>
18002c5c:	00800044 	movi	r2,1
18002c60:	d9003317 	ldw	r4,204(sp)
18002c64:	1105883a 	add	r2,r2,r4
18002c68:	d8802b15 	stw	r2,172(sp)
18002c6c:	10005f16 	blt	r2,zero,18002dec <___svfprintf_internal_r+0x2118>
18002c70:	044019c4 	movi	r17,103
18002c74:	003ed906 	br	180027dc <__alt_data_end+0xf80027dc>
18002c78:	d9002a17 	ldw	r4,168(sp)
18002c7c:	20c00044 	addi	r3,r4,1
18002c80:	003e9c06 	br	180026f4 <__alt_data_end+0xf80026f4>
18002c84:	d9002a17 	ldw	r4,168(sp)
18002c88:	00c0680e 	bge	zero,r3,18002e2c <___svfprintf_internal_r+0x2158>
18002c8c:	2000461e 	bne	r4,zero,18002da8 <___svfprintf_internal_r+0x20d4>
18002c90:	9480004c 	andi	r18,r18,1
18002c94:	9000441e 	bne	r18,zero,18002da8 <___svfprintf_internal_r+0x20d4>
18002c98:	1805883a 	mov	r2,r3
18002c9c:	1800a116 	blt	r3,zero,18002f24 <___svfprintf_internal_r+0x2250>
18002ca0:	d8c03217 	ldw	r3,200(sp)
18002ca4:	d8c02b15 	stw	r3,172(sp)
18002ca8:	003ecc06 	br	180027dc <__alt_data_end+0xf80027dc>
18002cac:	d9402a17 	ldw	r5,168(sp)
18002cb0:	d8802104 	addi	r2,sp,132
18002cb4:	d8800315 	stw	r2,12(sp)
18002cb8:	d9400015 	stw	r5,0(sp)
18002cbc:	d8802504 	addi	r2,sp,148
18002cc0:	d9403617 	ldw	r5,216(sp)
18002cc4:	d8800215 	stw	r2,8(sp)
18002cc8:	d8802604 	addi	r2,sp,152
18002ccc:	d8800115 	stw	r2,4(sp)
18002cd0:	01c000c4 	movi	r7,3
18002cd4:	a00d883a 	mov	r6,r20
18002cd8:	9809883a 	mov	r4,r19
18002cdc:	da003e15 	stw	r8,248(sp)
18002ce0:	80031b80 	call	180031b8 <_dtoa_r>
18002ce4:	d8c02a17 	ldw	r3,168(sp)
18002ce8:	da003e17 	ldw	r8,248(sp)
18002cec:	1021883a 	mov	r16,r2
18002cf0:	00801184 	movi	r2,70
18002cf4:	80f9883a 	add	fp,r16,r3
18002cf8:	88bfcc26 	beq	r17,r2,18002c2c <__alt_data_end+0xf8002c2c>
18002cfc:	003e9306 	br	1800274c <__alt_data_end+0xf800274c>
18002d00:	df0022c4 	addi	fp,sp,139
18002d04:	dc002a15 	stw	r16,168(sp)
18002d08:	9829883a 	mov	r20,r19
18002d0c:	e021883a 	mov	r16,fp
18002d10:	4027883a 	mov	r19,r8
18002d14:	b009883a 	mov	r4,r22
18002d18:	01400284 	movi	r5,10
18002d1c:	80009a40 	call	180009a4 <__modsi3>
18002d20:	10800c04 	addi	r2,r2,48
18002d24:	843fffc4 	addi	r16,r16,-1
18002d28:	b009883a 	mov	r4,r22
18002d2c:	01400284 	movi	r5,10
18002d30:	80800005 	stb	r2,0(r16)
18002d34:	80009200 	call	18000920 <__divsi3>
18002d38:	102d883a 	mov	r22,r2
18002d3c:	00800244 	movi	r2,9
18002d40:	15bff416 	blt	r2,r22,18002d14 <__alt_data_end+0xf8002d14>
18002d44:	9811883a 	mov	r8,r19
18002d48:	b0800c04 	addi	r2,r22,48
18002d4c:	a027883a 	mov	r19,r20
18002d50:	8029883a 	mov	r20,r16
18002d54:	a17fffc4 	addi	r5,r20,-1
18002d58:	a0bfffc5 	stb	r2,-1(r20)
18002d5c:	dc002a17 	ldw	r16,168(sp)
18002d60:	2f00782e 	bgeu	r5,fp,18002f44 <___svfprintf_internal_r+0x2270>
18002d64:	d9c02384 	addi	r7,sp,142
18002d68:	3d0fc83a 	sub	r7,r7,r20
18002d6c:	d9002344 	addi	r4,sp,141
18002d70:	e1cf883a 	add	r7,fp,r7
18002d74:	00000106 	br	18002d7c <___svfprintf_internal_r+0x20a8>
18002d78:	28800003 	ldbu	r2,0(r5)
18002d7c:	20800005 	stb	r2,0(r4)
18002d80:	21000044 	addi	r4,r4,1
18002d84:	29400044 	addi	r5,r5,1
18002d88:	21fffb1e 	bne	r4,r7,18002d78 <__alt_data_end+0xf8002d78>
18002d8c:	d8802304 	addi	r2,sp,140
18002d90:	1505c83a 	sub	r2,r2,r20
18002d94:	d8c02344 	addi	r3,sp,141
18002d98:	1885883a 	add	r2,r3,r2
18002d9c:	003f7006 	br	18002b60 <__alt_data_end+0xf8002b60>
18002da0:	0005883a 	mov	r2,zero
18002da4:	003f0b06 	br	180029d4 <__alt_data_end+0xf80029d4>
18002da8:	d9002a17 	ldw	r4,168(sp)
18002dac:	d8c03217 	ldw	r3,200(sp)
18002db0:	20800044 	addi	r2,r4,1
18002db4:	1885883a 	add	r2,r3,r2
18002db8:	d8802b15 	stw	r2,172(sp)
18002dbc:	103e870e 	bge	r2,zero,180027dc <__alt_data_end+0xf80027dc>
18002dc0:	0005883a 	mov	r2,zero
18002dc4:	003e8506 	br	180027dc <__alt_data_end+0xf80027dc>
18002dc8:	01060074 	movhi	r4,6145
18002dcc:	21383384 	addi	r4,r4,-7986
18002dd0:	d9002c15 	stw	r4,176(sp)
18002dd4:	003cc506 	br	180020ec <__alt_data_end+0xf80020ec>
18002dd8:	d8c03217 	ldw	r3,200(sp)
18002ddc:	18c00044 	addi	r3,r3,1
18002de0:	d8c02b15 	stw	r3,172(sp)
18002de4:	1805883a 	mov	r2,r3
18002de8:	183fa10e 	bge	r3,zero,18002c70 <__alt_data_end+0xf8002c70>
18002dec:	0005883a 	mov	r2,zero
18002df0:	003f9f06 	br	18002c70 <__alt_data_end+0xf8002c70>
18002df4:	d9003617 	ldw	r4,216(sp)
18002df8:	000d883a 	mov	r6,zero
18002dfc:	000f883a 	mov	r7,zero
18002e00:	a00b883a 	mov	r5,r20
18002e04:	d8c03d15 	stw	r3,244(sp)
18002e08:	da003e15 	stw	r8,248(sp)
18002e0c:	800a7600 	call	1800a760 <__eqdf2>
18002e10:	d8c03d17 	ldw	r3,244(sp)
18002e14:	da003e17 	ldw	r8,248(sp)
18002e18:	103f8726 	beq	r2,zero,18002c38 <__alt_data_end+0xf8002c38>
18002e1c:	00800044 	movi	r2,1
18002e20:	10c7c83a 	sub	r3,r2,r3
18002e24:	d8c02615 	stw	r3,152(sp)
18002e28:	003f8406 	br	18002c3c <__alt_data_end+0xf8002c3c>
18002e2c:	20000e1e 	bne	r4,zero,18002e68 <___svfprintf_internal_r+0x2194>
18002e30:	9480004c 	andi	r18,r18,1
18002e34:	90000c1e 	bne	r18,zero,18002e68 <___svfprintf_internal_r+0x2194>
18002e38:	00800044 	movi	r2,1
18002e3c:	d8802b15 	stw	r2,172(sp)
18002e40:	003e6606 	br	180027dc <__alt_data_end+0xf80027dc>
18002e44:	00800b44 	movi	r2,45
18002e48:	05adc83a 	sub	r22,zero,r22
18002e4c:	d8802305 	stb	r2,140(sp)
18002e50:	003f3b06 	br	18002b40 <__alt_data_end+0xf8002b40>
18002e54:	0005883a 	mov	r2,zero
18002e58:	003f4e06 	br	18002b94 <__alt_data_end+0xf8002b94>
18002e5c:	90a4703a 	and	r18,r18,r2
18002e60:	903f4a26 	beq	r18,zero,18002b8c <__alt_data_end+0xf8002b8c>
18002e64:	003f4606 	br	18002b80 <__alt_data_end+0xf8002b80>
18002e68:	d8c02a17 	ldw	r3,168(sp)
18002e6c:	18c00084 	addi	r3,r3,2
18002e70:	d8c02b15 	stw	r3,172(sp)
18002e74:	1805883a 	mov	r2,r3
18002e78:	183e580e 	bge	r3,zero,180027dc <__alt_data_end+0xf80027dc>
18002e7c:	003fd006 	br	18002dc0 <__alt_data_end+0xf8002dc0>
18002e80:	00800084 	movi	r2,2
18002e84:	10c5c83a 	sub	r2,r2,r3
18002e88:	003f7506 	br	18002c60 <__alt_data_end+0xf8002c60>
18002e8c:	d9402e17 	ldw	r5,184(sp)
18002e90:	d9002e17 	ldw	r4,184(sp)
18002e94:	bc400043 	ldbu	r17,1(r23)
18002e98:	29400017 	ldw	r5,0(r5)
18002e9c:	20800104 	addi	r2,r4,4
18002ea0:	d8802e15 	stw	r2,184(sp)
18002ea4:	d9402a15 	stw	r5,168(sp)
18002ea8:	182f883a 	mov	r23,r3
18002eac:	283df10e 	bge	r5,zero,18002674 <__alt_data_end+0xf8002674>
18002eb0:	8c403fcc 	andi	r17,r17,255
18002eb4:	017fffc4 	movi	r5,-1
18002eb8:	8c40201c 	xori	r17,r17,128
18002ebc:	d9402a15 	stw	r5,168(sp)
18002ec0:	8c7fe004 	addi	r17,r17,-128
18002ec4:	0037d806 	br	18000e28 <__alt_data_end+0xf8000e28>
18002ec8:	9080004c 	andi	r2,r18,1
18002ecc:	0039883a 	mov	fp,zero
18002ed0:	10000726 	beq	r2,zero,18002ef0 <___svfprintf_internal_r+0x221c>
18002ed4:	d8c02817 	ldw	r3,160(sp)
18002ed8:	dc001dc4 	addi	r16,sp,119
18002edc:	00800c04 	movi	r2,48
18002ee0:	1c07c83a 	sub	r3,r3,r16
18002ee4:	d8801dc5 	stb	r2,119(sp)
18002ee8:	d8c02b15 	stw	r3,172(sp)
18002eec:	00393106 	br	180013b4 <__alt_data_end+0xf80013b4>
18002ef0:	d8002b15 	stw	zero,172(sp)
18002ef4:	dc001e04 	addi	r16,sp,120
18002ef8:	00392e06 	br	180013b4 <__alt_data_end+0xf80013b4>
18002efc:	0005883a 	mov	r2,zero
18002f00:	003e3306 	br	180027d0 <__alt_data_end+0xf80027d0>
18002f04:	dd802617 	ldw	r22,152(sp)
18002f08:	003f0706 	br	18002b28 <__alt_data_end+0xf8002b28>
18002f0c:	d8c02b03 	ldbu	r3,172(sp)
18002f10:	d8c02785 	stb	r3,158(sp)
18002f14:	003a3506 	br	180017ec <__alt_data_end+0xf80017ec>
18002f18:	d8c02b03 	ldbu	r3,172(sp)
18002f1c:	d8c02785 	stb	r3,158(sp)
18002f20:	003a1706 	br	18001780 <__alt_data_end+0xf8001780>
18002f24:	0005883a 	mov	r2,zero
18002f28:	003f5d06 	br	18002ca0 <__alt_data_end+0xf8002ca0>
18002f2c:	d8c02b03 	ldbu	r3,172(sp)
18002f30:	d8c02785 	stb	r3,158(sp)
18002f34:	0038f306 	br	18001304 <__alt_data_end+0xf8001304>
18002f38:	d8c02b03 	ldbu	r3,172(sp)
18002f3c:	d8c02785 	stb	r3,158(sp)
18002f40:	0038be06 	br	1800123c <__alt_data_end+0xf800123c>
18002f44:	d8802344 	addi	r2,sp,141
18002f48:	003f0506 	br	18002b60 <__alt_data_end+0xf8002b60>
18002f4c:	d8c02b03 	ldbu	r3,172(sp)
18002f50:	d8c02785 	stb	r3,158(sp)
18002f54:	00388b06 	br	18001184 <__alt_data_end+0xf8001184>
18002f58:	d8c02b03 	ldbu	r3,172(sp)
18002f5c:	d8c02785 	stb	r3,158(sp)
18002f60:	003ad706 	br	18001ac0 <__alt_data_end+0xf8001ac0>
18002f64:	d9403917 	ldw	r5,228(sp)
18002f68:	00800304 	movi	r2,12
18002f6c:	28800015 	stw	r2,0(r5)
18002f70:	00bfffc4 	movi	r2,-1
18002f74:	00384306 	br	18001084 <__alt_data_end+0xf8001084>
18002f78:	d8c02b03 	ldbu	r3,172(sp)
18002f7c:	d8c02785 	stb	r3,158(sp)
18002f80:	003ab606 	br	18001a5c <__alt_data_end+0xf8001a5c>
18002f84:	d8c02b03 	ldbu	r3,172(sp)
18002f88:	d8c02785 	stb	r3,158(sp)
18002f8c:	003a8906 	br	180019b4 <__alt_data_end+0xf80019b4>

18002f90 <quorem>:
18002f90:	defff204 	addi	sp,sp,-56
18002f94:	ddc00b15 	stw	r23,44(sp)
18002f98:	20800417 	ldw	r2,16(r4)
18002f9c:	2dc00417 	ldw	r23,16(r5)
18002fa0:	dfc00d15 	stw	ra,52(sp)
18002fa4:	df000c15 	stw	fp,48(sp)
18002fa8:	dd800a15 	stw	r22,40(sp)
18002fac:	dd400915 	stw	r21,36(sp)
18002fb0:	dd000815 	stw	r20,32(sp)
18002fb4:	dcc00715 	stw	r19,28(sp)
18002fb8:	dc800615 	stw	r18,24(sp)
18002fbc:	dc400515 	stw	r17,20(sp)
18002fc0:	dc000415 	stw	r16,16(sp)
18002fc4:	15c07a16 	blt	r2,r23,180031b0 <quorem+0x220>
18002fc8:	bdffffc4 	addi	r23,r23,-1
18002fcc:	bde9883a 	add	r20,r23,r23
18002fd0:	28c00504 	addi	r3,r5,20
18002fd4:	a529883a 	add	r20,r20,r20
18002fd8:	1d39883a 	add	fp,r3,r20
18002fdc:	24c00504 	addi	r19,r4,20
18002fe0:	d9400215 	stw	r5,8(sp)
18002fe4:	9d29883a 	add	r20,r19,r20
18002fe8:	e1400017 	ldw	r5,0(fp)
18002fec:	d9000015 	stw	r4,0(sp)
18002ff0:	a1000017 	ldw	r4,0(r20)
18002ff4:	29400044 	addi	r5,r5,1
18002ff8:	d8c00115 	stw	r3,4(sp)
18002ffc:	dd000315 	stw	r20,12(sp)
18003000:	8000a180 	call	18000a18 <__udivsi3>
18003004:	1025883a 	mov	r18,r2
18003008:	10003026 	beq	r2,zero,180030cc <quorem+0x13c>
1800300c:	dc400117 	ldw	r17,4(sp)
18003010:	9829883a 	mov	r20,r19
18003014:	002d883a 	mov	r22,zero
18003018:	0021883a 	mov	r16,zero
1800301c:	8d400017 	ldw	r21,0(r17)
18003020:	900b883a 	mov	r5,r18
18003024:	8c400104 	addi	r17,r17,4
18003028:	a93fffcc 	andi	r4,r21,65535
1800302c:	8000ad40 	call	18000ad4 <__mulsi3>
18003030:	a808d43a 	srli	r4,r21,16
18003034:	900b883a 	mov	r5,r18
18003038:	15ad883a 	add	r22,r2,r22
1800303c:	8000ad40 	call	18000ad4 <__mulsi3>
18003040:	a1000017 	ldw	r4,0(r20)
18003044:	b00cd43a 	srli	r6,r22,16
18003048:	b0ffffcc 	andi	r3,r22,65535
1800304c:	217fffcc 	andi	r5,r4,65535
18003050:	2c21883a 	add	r16,r5,r16
18003054:	80c7c83a 	sub	r3,r16,r3
18003058:	2008d43a 	srli	r4,r4,16
1800305c:	1185883a 	add	r2,r2,r6
18003060:	1821d43a 	srai	r16,r3,16
18003064:	117fffcc 	andi	r5,r2,65535
18003068:	2149c83a 	sub	r4,r4,r5
1800306c:	2421883a 	add	r16,r4,r16
18003070:	8008943a 	slli	r4,r16,16
18003074:	18ffffcc 	andi	r3,r3,65535
18003078:	102cd43a 	srli	r22,r2,16
1800307c:	20c8b03a 	or	r4,r4,r3
18003080:	a1000015 	stw	r4,0(r20)
18003084:	8021d43a 	srai	r16,r16,16
18003088:	a5000104 	addi	r20,r20,4
1800308c:	e47fe32e 	bgeu	fp,r17,1800301c <__alt_data_end+0xf800301c>
18003090:	d8c00317 	ldw	r3,12(sp)
18003094:	18800017 	ldw	r2,0(r3)
18003098:	10000c1e 	bne	r2,zero,180030cc <quorem+0x13c>
1800309c:	18bfff04 	addi	r2,r3,-4
180030a0:	9880082e 	bgeu	r19,r2,180030c4 <quorem+0x134>
180030a4:	18ffff17 	ldw	r3,-4(r3)
180030a8:	18000326 	beq	r3,zero,180030b8 <quorem+0x128>
180030ac:	00000506 	br	180030c4 <quorem+0x134>
180030b0:	10c00017 	ldw	r3,0(r2)
180030b4:	1800031e 	bne	r3,zero,180030c4 <quorem+0x134>
180030b8:	10bfff04 	addi	r2,r2,-4
180030bc:	bdffffc4 	addi	r23,r23,-1
180030c0:	98bffb36 	bltu	r19,r2,180030b0 <__alt_data_end+0xf80030b0>
180030c4:	d8c00017 	ldw	r3,0(sp)
180030c8:	1dc00415 	stw	r23,16(r3)
180030cc:	d9400217 	ldw	r5,8(sp)
180030d0:	d9000017 	ldw	r4,0(sp)
180030d4:	8005cd80 	call	18005cd8 <__mcmp>
180030d8:	10002816 	blt	r2,zero,1800317c <quorem+0x1ec>
180030dc:	dc400117 	ldw	r17,4(sp)
180030e0:	94800044 	addi	r18,r18,1
180030e4:	980d883a 	mov	r6,r19
180030e8:	0007883a 	mov	r3,zero
180030ec:	31000017 	ldw	r4,0(r6)
180030f0:	89400017 	ldw	r5,0(r17)
180030f4:	31800104 	addi	r6,r6,4
180030f8:	20bfffcc 	andi	r2,r4,65535
180030fc:	10c7883a 	add	r3,r2,r3
18003100:	28bfffcc 	andi	r2,r5,65535
18003104:	1885c83a 	sub	r2,r3,r2
18003108:	280ad43a 	srli	r5,r5,16
1800310c:	2008d43a 	srli	r4,r4,16
18003110:	1007d43a 	srai	r3,r2,16
18003114:	10bfffcc 	andi	r2,r2,65535
18003118:	2149c83a 	sub	r4,r4,r5
1800311c:	20c9883a 	add	r4,r4,r3
18003120:	200a943a 	slli	r5,r4,16
18003124:	8c400104 	addi	r17,r17,4
18003128:	2007d43a 	srai	r3,r4,16
1800312c:	2884b03a 	or	r2,r5,r2
18003130:	30bfff15 	stw	r2,-4(r6)
18003134:	e47fed2e 	bgeu	fp,r17,180030ec <__alt_data_end+0xf80030ec>
18003138:	bdc5883a 	add	r2,r23,r23
1800313c:	1085883a 	add	r2,r2,r2
18003140:	9887883a 	add	r3,r19,r2
18003144:	18800017 	ldw	r2,0(r3)
18003148:	10000c1e 	bne	r2,zero,1800317c <quorem+0x1ec>
1800314c:	18bfff04 	addi	r2,r3,-4
18003150:	9880082e 	bgeu	r19,r2,18003174 <quorem+0x1e4>
18003154:	18ffff17 	ldw	r3,-4(r3)
18003158:	18000326 	beq	r3,zero,18003168 <quorem+0x1d8>
1800315c:	00000506 	br	18003174 <quorem+0x1e4>
18003160:	10c00017 	ldw	r3,0(r2)
18003164:	1800031e 	bne	r3,zero,18003174 <quorem+0x1e4>
18003168:	10bfff04 	addi	r2,r2,-4
1800316c:	bdffffc4 	addi	r23,r23,-1
18003170:	98bffb36 	bltu	r19,r2,18003160 <__alt_data_end+0xf8003160>
18003174:	d8c00017 	ldw	r3,0(sp)
18003178:	1dc00415 	stw	r23,16(r3)
1800317c:	9005883a 	mov	r2,r18
18003180:	dfc00d17 	ldw	ra,52(sp)
18003184:	df000c17 	ldw	fp,48(sp)
18003188:	ddc00b17 	ldw	r23,44(sp)
1800318c:	dd800a17 	ldw	r22,40(sp)
18003190:	dd400917 	ldw	r21,36(sp)
18003194:	dd000817 	ldw	r20,32(sp)
18003198:	dcc00717 	ldw	r19,28(sp)
1800319c:	dc800617 	ldw	r18,24(sp)
180031a0:	dc400517 	ldw	r17,20(sp)
180031a4:	dc000417 	ldw	r16,16(sp)
180031a8:	dec00e04 	addi	sp,sp,56
180031ac:	f800283a 	ret
180031b0:	0005883a 	mov	r2,zero
180031b4:	003ff206 	br	18003180 <__alt_data_end+0xf8003180>

180031b8 <_dtoa_r>:
180031b8:	20801017 	ldw	r2,64(r4)
180031bc:	deffde04 	addi	sp,sp,-136
180031c0:	df002015 	stw	fp,128(sp)
180031c4:	dcc01b15 	stw	r19,108(sp)
180031c8:	dc801a15 	stw	r18,104(sp)
180031cc:	dc401915 	stw	r17,100(sp)
180031d0:	dc001815 	stw	r16,96(sp)
180031d4:	dfc02115 	stw	ra,132(sp)
180031d8:	ddc01f15 	stw	r23,124(sp)
180031dc:	dd801e15 	stw	r22,120(sp)
180031e0:	dd401d15 	stw	r21,116(sp)
180031e4:	dd001c15 	stw	r20,112(sp)
180031e8:	d9c00315 	stw	r7,12(sp)
180031ec:	2039883a 	mov	fp,r4
180031f0:	3023883a 	mov	r17,r6
180031f4:	2825883a 	mov	r18,r5
180031f8:	dc002417 	ldw	r16,144(sp)
180031fc:	3027883a 	mov	r19,r6
18003200:	10000826 	beq	r2,zero,18003224 <_dtoa_r+0x6c>
18003204:	21801117 	ldw	r6,68(r4)
18003208:	00c00044 	movi	r3,1
1800320c:	100b883a 	mov	r5,r2
18003210:	1986983a 	sll	r3,r3,r6
18003214:	11800115 	stw	r6,4(r2)
18003218:	10c00215 	stw	r3,8(r2)
1800321c:	80053fc0 	call	180053fc <_Bfree>
18003220:	e0001015 	stw	zero,64(fp)
18003224:	88002e16 	blt	r17,zero,180032e0 <_dtoa_r+0x128>
18003228:	80000015 	stw	zero,0(r16)
1800322c:	889ffc2c 	andhi	r2,r17,32752
18003230:	00dffc34 	movhi	r3,32752
18003234:	10c01c26 	beq	r2,r3,180032a8 <_dtoa_r+0xf0>
18003238:	000d883a 	mov	r6,zero
1800323c:	000f883a 	mov	r7,zero
18003240:	9009883a 	mov	r4,r18
18003244:	980b883a 	mov	r5,r19
18003248:	800a7600 	call	1800a760 <__eqdf2>
1800324c:	10002b1e 	bne	r2,zero,180032fc <_dtoa_r+0x144>
18003250:	d9c02317 	ldw	r7,140(sp)
18003254:	00800044 	movi	r2,1
18003258:	38800015 	stw	r2,0(r7)
1800325c:	d8802517 	ldw	r2,148(sp)
18003260:	10019e26 	beq	r2,zero,180038dc <_dtoa_r+0x724>
18003264:	d8c02517 	ldw	r3,148(sp)
18003268:	00860074 	movhi	r2,6145
1800326c:	10b83344 	addi	r2,r2,-7987
18003270:	18800015 	stw	r2,0(r3)
18003274:	10bfffc4 	addi	r2,r2,-1
18003278:	dfc02117 	ldw	ra,132(sp)
1800327c:	df002017 	ldw	fp,128(sp)
18003280:	ddc01f17 	ldw	r23,124(sp)
18003284:	dd801e17 	ldw	r22,120(sp)
18003288:	dd401d17 	ldw	r21,116(sp)
1800328c:	dd001c17 	ldw	r20,112(sp)
18003290:	dcc01b17 	ldw	r19,108(sp)
18003294:	dc801a17 	ldw	r18,104(sp)
18003298:	dc401917 	ldw	r17,100(sp)
1800329c:	dc001817 	ldw	r16,96(sp)
180032a0:	dec02204 	addi	sp,sp,136
180032a4:	f800283a 	ret
180032a8:	d8c02317 	ldw	r3,140(sp)
180032ac:	0089c3c4 	movi	r2,9999
180032b0:	18800015 	stw	r2,0(r3)
180032b4:	90017726 	beq	r18,zero,18003894 <_dtoa_r+0x6dc>
180032b8:	00860074 	movhi	r2,6145
180032bc:	10b83f04 	addi	r2,r2,-7940
180032c0:	d9002517 	ldw	r4,148(sp)
180032c4:	203fec26 	beq	r4,zero,18003278 <__alt_data_end+0xf8003278>
180032c8:	10c000c7 	ldb	r3,3(r2)
180032cc:	1801781e 	bne	r3,zero,180038b0 <_dtoa_r+0x6f8>
180032d0:	10c000c4 	addi	r3,r2,3
180032d4:	d9802517 	ldw	r6,148(sp)
180032d8:	30c00015 	stw	r3,0(r6)
180032dc:	003fe606 	br	18003278 <__alt_data_end+0xf8003278>
180032e0:	04e00034 	movhi	r19,32768
180032e4:	9cffffc4 	addi	r19,r19,-1
180032e8:	00800044 	movi	r2,1
180032ec:	8ce6703a 	and	r19,r17,r19
180032f0:	80800015 	stw	r2,0(r16)
180032f4:	9823883a 	mov	r17,r19
180032f8:	003fcc06 	br	1800322c <__alt_data_end+0xf800322c>
180032fc:	d8800204 	addi	r2,sp,8
18003300:	d8800015 	stw	r2,0(sp)
18003304:	d9c00104 	addi	r7,sp,4
18003308:	900b883a 	mov	r5,r18
1800330c:	980d883a 	mov	r6,r19
18003310:	e009883a 	mov	r4,fp
18003314:	8820d53a 	srli	r16,r17,20
18003318:	80060a40 	call	180060a4 <__d2b>
1800331c:	d8800915 	stw	r2,36(sp)
18003320:	8001651e 	bne	r16,zero,180038b8 <_dtoa_r+0x700>
18003324:	dd800217 	ldw	r22,8(sp)
18003328:	dc000117 	ldw	r16,4(sp)
1800332c:	00800804 	movi	r2,32
18003330:	b421883a 	add	r16,r22,r16
18003334:	80c10c84 	addi	r3,r16,1074
18003338:	10c2d10e 	bge	r2,r3,18003e80 <_dtoa_r+0xcc8>
1800333c:	00801004 	movi	r2,64
18003340:	81010484 	addi	r4,r16,1042
18003344:	10c7c83a 	sub	r3,r2,r3
18003348:	9108d83a 	srl	r4,r18,r4
1800334c:	88e2983a 	sll	r17,r17,r3
18003350:	2448b03a 	or	r4,r4,r17
18003354:	800bc7c0 	call	1800bc7c <__floatunsidf>
18003358:	017f8434 	movhi	r5,65040
1800335c:	01800044 	movi	r6,1
18003360:	1009883a 	mov	r4,r2
18003364:	194b883a 	add	r5,r3,r5
18003368:	843fffc4 	addi	r16,r16,-1
1800336c:	d9801115 	stw	r6,68(sp)
18003370:	000d883a 	mov	r6,zero
18003374:	01cffe34 	movhi	r7,16376
18003378:	800b2240 	call	1800b224 <__subdf3>
1800337c:	0198dbf4 	movhi	r6,25455
18003380:	01cff4f4 	movhi	r7,16339
18003384:	3190d844 	addi	r6,r6,17249
18003388:	39e1e9c4 	addi	r7,r7,-30809
1800338c:	1009883a 	mov	r4,r2
18003390:	180b883a 	mov	r5,r3
18003394:	800a9b80 	call	1800a9b8 <__muldf3>
18003398:	01a2d874 	movhi	r6,35681
1800339c:	01cff1f4 	movhi	r7,16327
180033a0:	31b22cc4 	addi	r6,r6,-14157
180033a4:	39e28a04 	addi	r7,r7,-30168
180033a8:	180b883a 	mov	r5,r3
180033ac:	1009883a 	mov	r4,r2
180033b0:	80094e40 	call	180094e4 <__adddf3>
180033b4:	8009883a 	mov	r4,r16
180033b8:	1029883a 	mov	r20,r2
180033bc:	1823883a 	mov	r17,r3
180033c0:	800bba00 	call	1800bba0 <__floatsidf>
180033c4:	019427f4 	movhi	r6,20639
180033c8:	01cff4f4 	movhi	r7,16339
180033cc:	319e7ec4 	addi	r6,r6,31227
180033d0:	39d104c4 	addi	r7,r7,17427
180033d4:	1009883a 	mov	r4,r2
180033d8:	180b883a 	mov	r5,r3
180033dc:	800a9b80 	call	1800a9b8 <__muldf3>
180033e0:	100d883a 	mov	r6,r2
180033e4:	180f883a 	mov	r7,r3
180033e8:	a009883a 	mov	r4,r20
180033ec:	880b883a 	mov	r5,r17
180033f0:	80094e40 	call	180094e4 <__adddf3>
180033f4:	1009883a 	mov	r4,r2
180033f8:	180b883a 	mov	r5,r3
180033fc:	1029883a 	mov	r20,r2
18003400:	1823883a 	mov	r17,r3
18003404:	800bb200 	call	1800bb20 <__fixdfsi>
18003408:	000d883a 	mov	r6,zero
1800340c:	000f883a 	mov	r7,zero
18003410:	a009883a 	mov	r4,r20
18003414:	880b883a 	mov	r5,r17
18003418:	d8800515 	stw	r2,20(sp)
1800341c:	800a8c40 	call	1800a8c4 <__ledf2>
18003420:	10028716 	blt	r2,zero,18003e40 <_dtoa_r+0xc88>
18003424:	d8c00517 	ldw	r3,20(sp)
18003428:	00800584 	movi	r2,22
1800342c:	10c27536 	bltu	r2,r3,18003e04 <_dtoa_r+0xc4c>
18003430:	180490fa 	slli	r2,r3,3
18003434:	00c60074 	movhi	r3,6145
18003438:	18f85b04 	addi	r3,r3,-7828
1800343c:	1885883a 	add	r2,r3,r2
18003440:	11000017 	ldw	r4,0(r2)
18003444:	11400117 	ldw	r5,4(r2)
18003448:	900d883a 	mov	r6,r18
1800344c:	980f883a 	mov	r7,r19
18003450:	800a7e80 	call	1800a7e8 <__gedf2>
18003454:	00828d0e 	bge	zero,r2,18003e8c <_dtoa_r+0xcd4>
18003458:	d9000517 	ldw	r4,20(sp)
1800345c:	d8000e15 	stw	zero,56(sp)
18003460:	213fffc4 	addi	r4,r4,-1
18003464:	d9000515 	stw	r4,20(sp)
18003468:	b42dc83a 	sub	r22,r22,r16
1800346c:	b5bfffc4 	addi	r22,r22,-1
18003470:	b0026f16 	blt	r22,zero,18003e30 <_dtoa_r+0xc78>
18003474:	d8000815 	stw	zero,32(sp)
18003478:	d9c00517 	ldw	r7,20(sp)
1800347c:	38026416 	blt	r7,zero,18003e10 <_dtoa_r+0xc58>
18003480:	b1ed883a 	add	r22,r22,r7
18003484:	d9c00d15 	stw	r7,52(sp)
18003488:	d8000a15 	stw	zero,40(sp)
1800348c:	d9800317 	ldw	r6,12(sp)
18003490:	00800244 	movi	r2,9
18003494:	11811436 	bltu	r2,r6,180038e8 <_dtoa_r+0x730>
18003498:	00800144 	movi	r2,5
1800349c:	1184e10e 	bge	r2,r6,18004824 <_dtoa_r+0x166c>
180034a0:	31bfff04 	addi	r6,r6,-4
180034a4:	d9800315 	stw	r6,12(sp)
180034a8:	0023883a 	mov	r17,zero
180034ac:	d9800317 	ldw	r6,12(sp)
180034b0:	008000c4 	movi	r2,3
180034b4:	30836726 	beq	r6,r2,18004254 <_dtoa_r+0x109c>
180034b8:	1183410e 	bge	r2,r6,180041c0 <_dtoa_r+0x1008>
180034bc:	d9c00317 	ldw	r7,12(sp)
180034c0:	00800104 	movi	r2,4
180034c4:	38827c26 	beq	r7,r2,18003eb8 <_dtoa_r+0xd00>
180034c8:	00800144 	movi	r2,5
180034cc:	3884c41e 	bne	r7,r2,180047e0 <_dtoa_r+0x1628>
180034d0:	00800044 	movi	r2,1
180034d4:	d8800b15 	stw	r2,44(sp)
180034d8:	d8c00517 	ldw	r3,20(sp)
180034dc:	d9002217 	ldw	r4,136(sp)
180034e0:	1907883a 	add	r3,r3,r4
180034e4:	19800044 	addi	r6,r3,1
180034e8:	d8c00c15 	stw	r3,48(sp)
180034ec:	d9800615 	stw	r6,24(sp)
180034f0:	0183a40e 	bge	zero,r6,18004384 <_dtoa_r+0x11cc>
180034f4:	d9800617 	ldw	r6,24(sp)
180034f8:	3021883a 	mov	r16,r6
180034fc:	e0001115 	stw	zero,68(fp)
18003500:	008005c4 	movi	r2,23
18003504:	1184c92e 	bgeu	r2,r6,1800482c <_dtoa_r+0x1674>
18003508:	00c00044 	movi	r3,1
1800350c:	00800104 	movi	r2,4
18003510:	1085883a 	add	r2,r2,r2
18003514:	11000504 	addi	r4,r2,20
18003518:	180b883a 	mov	r5,r3
1800351c:	18c00044 	addi	r3,r3,1
18003520:	313ffb2e 	bgeu	r6,r4,18003510 <__alt_data_end+0xf8003510>
18003524:	e1401115 	stw	r5,68(fp)
18003528:	e009883a 	mov	r4,fp
1800352c:	80053540 	call	18005354 <_Balloc>
18003530:	d8800715 	stw	r2,28(sp)
18003534:	e0801015 	stw	r2,64(fp)
18003538:	00800384 	movi	r2,14
1800353c:	1400f736 	bltu	r2,r16,1800391c <_dtoa_r+0x764>
18003540:	8800f626 	beq	r17,zero,1800391c <_dtoa_r+0x764>
18003544:	d9c00517 	ldw	r7,20(sp)
18003548:	01c39a0e 	bge	zero,r7,180043b4 <_dtoa_r+0x11fc>
1800354c:	388003cc 	andi	r2,r7,15
18003550:	100490fa 	slli	r2,r2,3
18003554:	382bd13a 	srai	r21,r7,4
18003558:	00c60074 	movhi	r3,6145
1800355c:	18f85b04 	addi	r3,r3,-7828
18003560:	1885883a 	add	r2,r3,r2
18003564:	a8c0040c 	andi	r3,r21,16
18003568:	12400017 	ldw	r9,0(r2)
1800356c:	12000117 	ldw	r8,4(r2)
18003570:	18037926 	beq	r3,zero,18004358 <_dtoa_r+0x11a0>
18003574:	00860074 	movhi	r2,6145
18003578:	10b85104 	addi	r2,r2,-7868
1800357c:	11800817 	ldw	r6,32(r2)
18003580:	11c00917 	ldw	r7,36(r2)
18003584:	9009883a 	mov	r4,r18
18003588:	980b883a 	mov	r5,r19
1800358c:	da001715 	stw	r8,92(sp)
18003590:	da401615 	stw	r9,88(sp)
18003594:	8009d900 	call	18009d90 <__divdf3>
18003598:	da001717 	ldw	r8,92(sp)
1800359c:	da401617 	ldw	r9,88(sp)
180035a0:	ad4003cc 	andi	r21,r21,15
180035a4:	040000c4 	movi	r16,3
180035a8:	1023883a 	mov	r17,r2
180035ac:	1829883a 	mov	r20,r3
180035b0:	a8001126 	beq	r21,zero,180035f8 <_dtoa_r+0x440>
180035b4:	05c60074 	movhi	r23,6145
180035b8:	bdf85104 	addi	r23,r23,-7868
180035bc:	4805883a 	mov	r2,r9
180035c0:	4007883a 	mov	r3,r8
180035c4:	a980004c 	andi	r6,r21,1
180035c8:	1009883a 	mov	r4,r2
180035cc:	a82bd07a 	srai	r21,r21,1
180035d0:	180b883a 	mov	r5,r3
180035d4:	30000426 	beq	r6,zero,180035e8 <_dtoa_r+0x430>
180035d8:	b9800017 	ldw	r6,0(r23)
180035dc:	b9c00117 	ldw	r7,4(r23)
180035e0:	84000044 	addi	r16,r16,1
180035e4:	800a9b80 	call	1800a9b8 <__muldf3>
180035e8:	bdc00204 	addi	r23,r23,8
180035ec:	a83ff51e 	bne	r21,zero,180035c4 <__alt_data_end+0xf80035c4>
180035f0:	1013883a 	mov	r9,r2
180035f4:	1811883a 	mov	r8,r3
180035f8:	480d883a 	mov	r6,r9
180035fc:	400f883a 	mov	r7,r8
18003600:	8809883a 	mov	r4,r17
18003604:	a00b883a 	mov	r5,r20
18003608:	8009d900 	call	18009d90 <__divdf3>
1800360c:	d8800f15 	stw	r2,60(sp)
18003610:	d8c01015 	stw	r3,64(sp)
18003614:	d8c00e17 	ldw	r3,56(sp)
18003618:	18000626 	beq	r3,zero,18003634 <_dtoa_r+0x47c>
1800361c:	d9000f17 	ldw	r4,60(sp)
18003620:	d9401017 	ldw	r5,64(sp)
18003624:	000d883a 	mov	r6,zero
18003628:	01cffc34 	movhi	r7,16368
1800362c:	800a8c40 	call	1800a8c4 <__ledf2>
18003630:	10040b16 	blt	r2,zero,18004660 <_dtoa_r+0x14a8>
18003634:	8009883a 	mov	r4,r16
18003638:	800bba00 	call	1800bba0 <__floatsidf>
1800363c:	d9800f17 	ldw	r6,60(sp)
18003640:	d9c01017 	ldw	r7,64(sp)
18003644:	1009883a 	mov	r4,r2
18003648:	180b883a 	mov	r5,r3
1800364c:	800a9b80 	call	1800a9b8 <__muldf3>
18003650:	000d883a 	mov	r6,zero
18003654:	01d00734 	movhi	r7,16412
18003658:	1009883a 	mov	r4,r2
1800365c:	180b883a 	mov	r5,r3
18003660:	80094e40 	call	180094e4 <__adddf3>
18003664:	1021883a 	mov	r16,r2
18003668:	d8800617 	ldw	r2,24(sp)
1800366c:	047f3034 	movhi	r17,64704
18003670:	1c63883a 	add	r17,r3,r17
18003674:	10031826 	beq	r2,zero,180042d8 <_dtoa_r+0x1120>
18003678:	d8c00517 	ldw	r3,20(sp)
1800367c:	db000617 	ldw	r12,24(sp)
18003680:	d8c01315 	stw	r3,76(sp)
18003684:	d9000b17 	ldw	r4,44(sp)
18003688:	20038f26 	beq	r4,zero,180044c8 <_dtoa_r+0x1310>
1800368c:	60bfffc4 	addi	r2,r12,-1
18003690:	100490fa 	slli	r2,r2,3
18003694:	00c60074 	movhi	r3,6145
18003698:	18f85b04 	addi	r3,r3,-7828
1800369c:	1885883a 	add	r2,r3,r2
180036a0:	11800017 	ldw	r6,0(r2)
180036a4:	11c00117 	ldw	r7,4(r2)
180036a8:	d8800717 	ldw	r2,28(sp)
180036ac:	0009883a 	mov	r4,zero
180036b0:	014ff834 	movhi	r5,16352
180036b4:	db001615 	stw	r12,88(sp)
180036b8:	15c00044 	addi	r23,r2,1
180036bc:	8009d900 	call	18009d90 <__divdf3>
180036c0:	800d883a 	mov	r6,r16
180036c4:	880f883a 	mov	r7,r17
180036c8:	1009883a 	mov	r4,r2
180036cc:	180b883a 	mov	r5,r3
180036d0:	800b2240 	call	1800b224 <__subdf3>
180036d4:	d9401017 	ldw	r5,64(sp)
180036d8:	d9000f17 	ldw	r4,60(sp)
180036dc:	102b883a 	mov	r21,r2
180036e0:	d8c01215 	stw	r3,72(sp)
180036e4:	800bb200 	call	1800bb20 <__fixdfsi>
180036e8:	1009883a 	mov	r4,r2
180036ec:	1029883a 	mov	r20,r2
180036f0:	800bba00 	call	1800bba0 <__floatsidf>
180036f4:	d9000f17 	ldw	r4,60(sp)
180036f8:	d9401017 	ldw	r5,64(sp)
180036fc:	100d883a 	mov	r6,r2
18003700:	180f883a 	mov	r7,r3
18003704:	800b2240 	call	1800b224 <__subdf3>
18003708:	1823883a 	mov	r17,r3
1800370c:	d8c00717 	ldw	r3,28(sp)
18003710:	d9401217 	ldw	r5,72(sp)
18003714:	a2000c04 	addi	r8,r20,48
18003718:	1021883a 	mov	r16,r2
1800371c:	1a000005 	stb	r8,0(r3)
18003720:	800d883a 	mov	r6,r16
18003724:	880f883a 	mov	r7,r17
18003728:	a809883a 	mov	r4,r21
1800372c:	4029883a 	mov	r20,r8
18003730:	800a7e80 	call	1800a7e8 <__gedf2>
18003734:	00841d16 	blt	zero,r2,180047ac <_dtoa_r+0x15f4>
18003738:	800d883a 	mov	r6,r16
1800373c:	880f883a 	mov	r7,r17
18003740:	0009883a 	mov	r4,zero
18003744:	014ffc34 	movhi	r5,16368
18003748:	800b2240 	call	1800b224 <__subdf3>
1800374c:	d9401217 	ldw	r5,72(sp)
18003750:	100d883a 	mov	r6,r2
18003754:	180f883a 	mov	r7,r3
18003758:	a809883a 	mov	r4,r21
1800375c:	800a7e80 	call	1800a7e8 <__gedf2>
18003760:	db001617 	ldw	r12,88(sp)
18003764:	00840e16 	blt	zero,r2,180047a0 <_dtoa_r+0x15e8>
18003768:	00800044 	movi	r2,1
1800376c:	13006b0e 	bge	r2,r12,1800391c <_dtoa_r+0x764>
18003770:	d9000717 	ldw	r4,28(sp)
18003774:	dd800f15 	stw	r22,60(sp)
18003778:	dcc01015 	stw	r19,64(sp)
1800377c:	2319883a 	add	r12,r4,r12
18003780:	dcc01217 	ldw	r19,72(sp)
18003784:	602d883a 	mov	r22,r12
18003788:	dc801215 	stw	r18,72(sp)
1800378c:	b825883a 	mov	r18,r23
18003790:	00000906 	br	180037b8 <_dtoa_r+0x600>
18003794:	800b2240 	call	1800b224 <__subdf3>
18003798:	a80d883a 	mov	r6,r21
1800379c:	980f883a 	mov	r7,r19
180037a0:	1009883a 	mov	r4,r2
180037a4:	180b883a 	mov	r5,r3
180037a8:	800a8c40 	call	1800a8c4 <__ledf2>
180037ac:	1003e816 	blt	r2,zero,18004750 <_dtoa_r+0x1598>
180037b0:	b825883a 	mov	r18,r23
180037b4:	bd83e926 	beq	r23,r22,1800475c <_dtoa_r+0x15a4>
180037b8:	a809883a 	mov	r4,r21
180037bc:	980b883a 	mov	r5,r19
180037c0:	000d883a 	mov	r6,zero
180037c4:	01d00934 	movhi	r7,16420
180037c8:	800a9b80 	call	1800a9b8 <__muldf3>
180037cc:	000d883a 	mov	r6,zero
180037d0:	01d00934 	movhi	r7,16420
180037d4:	8009883a 	mov	r4,r16
180037d8:	880b883a 	mov	r5,r17
180037dc:	102b883a 	mov	r21,r2
180037e0:	1827883a 	mov	r19,r3
180037e4:	800a9b80 	call	1800a9b8 <__muldf3>
180037e8:	180b883a 	mov	r5,r3
180037ec:	1009883a 	mov	r4,r2
180037f0:	1821883a 	mov	r16,r3
180037f4:	1023883a 	mov	r17,r2
180037f8:	800bb200 	call	1800bb20 <__fixdfsi>
180037fc:	1009883a 	mov	r4,r2
18003800:	1029883a 	mov	r20,r2
18003804:	800bba00 	call	1800bba0 <__floatsidf>
18003808:	8809883a 	mov	r4,r17
1800380c:	800b883a 	mov	r5,r16
18003810:	100d883a 	mov	r6,r2
18003814:	180f883a 	mov	r7,r3
18003818:	800b2240 	call	1800b224 <__subdf3>
1800381c:	a5000c04 	addi	r20,r20,48
18003820:	a80d883a 	mov	r6,r21
18003824:	980f883a 	mov	r7,r19
18003828:	1009883a 	mov	r4,r2
1800382c:	180b883a 	mov	r5,r3
18003830:	95000005 	stb	r20,0(r18)
18003834:	1021883a 	mov	r16,r2
18003838:	1823883a 	mov	r17,r3
1800383c:	800a8c40 	call	1800a8c4 <__ledf2>
18003840:	bdc00044 	addi	r23,r23,1
18003844:	800d883a 	mov	r6,r16
18003848:	880f883a 	mov	r7,r17
1800384c:	0009883a 	mov	r4,zero
18003850:	014ffc34 	movhi	r5,16368
18003854:	103fcf0e 	bge	r2,zero,18003794 <__alt_data_end+0xf8003794>
18003858:	d8c01317 	ldw	r3,76(sp)
1800385c:	d8c00515 	stw	r3,20(sp)
18003860:	d9400917 	ldw	r5,36(sp)
18003864:	e009883a 	mov	r4,fp
18003868:	80053fc0 	call	180053fc <_Bfree>
1800386c:	d9000517 	ldw	r4,20(sp)
18003870:	d9802317 	ldw	r6,140(sp)
18003874:	d9c02517 	ldw	r7,148(sp)
18003878:	b8000005 	stb	zero,0(r23)
1800387c:	20800044 	addi	r2,r4,1
18003880:	30800015 	stw	r2,0(r6)
18003884:	3802aa26 	beq	r7,zero,18004330 <_dtoa_r+0x1178>
18003888:	3dc00015 	stw	r23,0(r7)
1800388c:	d8800717 	ldw	r2,28(sp)
18003890:	003e7906 	br	18003278 <__alt_data_end+0xf8003278>
18003894:	00800434 	movhi	r2,16
18003898:	10bfffc4 	addi	r2,r2,-1
1800389c:	88a2703a 	and	r17,r17,r2
180038a0:	883e851e 	bne	r17,zero,180032b8 <__alt_data_end+0xf80032b8>
180038a4:	00860074 	movhi	r2,6145
180038a8:	10b83c04 	addi	r2,r2,-7952
180038ac:	003e8406 	br	180032c0 <__alt_data_end+0xf80032c0>
180038b0:	10c00204 	addi	r3,r2,8
180038b4:	003e8706 	br	180032d4 <__alt_data_end+0xf80032d4>
180038b8:	01400434 	movhi	r5,16
180038bc:	297fffc4 	addi	r5,r5,-1
180038c0:	994a703a 	and	r5,r19,r5
180038c4:	9009883a 	mov	r4,r18
180038c8:	843f0044 	addi	r16,r16,-1023
180038cc:	294ffc34 	orhi	r5,r5,16368
180038d0:	dd800217 	ldw	r22,8(sp)
180038d4:	d8001115 	stw	zero,68(sp)
180038d8:	003ea506 	br	18003370 <__alt_data_end+0xf8003370>
180038dc:	00860074 	movhi	r2,6145
180038e0:	10b83304 	addi	r2,r2,-7988
180038e4:	003e6406 	br	18003278 <__alt_data_end+0xf8003278>
180038e8:	e0001115 	stw	zero,68(fp)
180038ec:	000b883a 	mov	r5,zero
180038f0:	e009883a 	mov	r4,fp
180038f4:	80053540 	call	18005354 <_Balloc>
180038f8:	01bfffc4 	movi	r6,-1
180038fc:	01c00044 	movi	r7,1
18003900:	d8800715 	stw	r2,28(sp)
18003904:	d9800c15 	stw	r6,48(sp)
18003908:	e0801015 	stw	r2,64(fp)
1800390c:	d8000315 	stw	zero,12(sp)
18003910:	d9c00b15 	stw	r7,44(sp)
18003914:	d9800615 	stw	r6,24(sp)
18003918:	d8002215 	stw	zero,136(sp)
1800391c:	d8800117 	ldw	r2,4(sp)
18003920:	10008916 	blt	r2,zero,18003b48 <_dtoa_r+0x990>
18003924:	d9000517 	ldw	r4,20(sp)
18003928:	00c00384 	movi	r3,14
1800392c:	19008616 	blt	r3,r4,18003b48 <_dtoa_r+0x990>
18003930:	200490fa 	slli	r2,r4,3
18003934:	00c60074 	movhi	r3,6145
18003938:	d9802217 	ldw	r6,136(sp)
1800393c:	18f85b04 	addi	r3,r3,-7828
18003940:	1885883a 	add	r2,r3,r2
18003944:	14000017 	ldw	r16,0(r2)
18003948:	14400117 	ldw	r17,4(r2)
1800394c:	30016316 	blt	r6,zero,18003edc <_dtoa_r+0xd24>
18003950:	800d883a 	mov	r6,r16
18003954:	880f883a 	mov	r7,r17
18003958:	9009883a 	mov	r4,r18
1800395c:	980b883a 	mov	r5,r19
18003960:	8009d900 	call	18009d90 <__divdf3>
18003964:	180b883a 	mov	r5,r3
18003968:	1009883a 	mov	r4,r2
1800396c:	800bb200 	call	1800bb20 <__fixdfsi>
18003970:	1009883a 	mov	r4,r2
18003974:	102b883a 	mov	r21,r2
18003978:	800bba00 	call	1800bba0 <__floatsidf>
1800397c:	800d883a 	mov	r6,r16
18003980:	880f883a 	mov	r7,r17
18003984:	1009883a 	mov	r4,r2
18003988:	180b883a 	mov	r5,r3
1800398c:	800a9b80 	call	1800a9b8 <__muldf3>
18003990:	100d883a 	mov	r6,r2
18003994:	180f883a 	mov	r7,r3
18003998:	9009883a 	mov	r4,r18
1800399c:	980b883a 	mov	r5,r19
180039a0:	800b2240 	call	1800b224 <__subdf3>
180039a4:	d9c00717 	ldw	r7,28(sp)
180039a8:	1009883a 	mov	r4,r2
180039ac:	a8800c04 	addi	r2,r21,48
180039b0:	38800005 	stb	r2,0(r7)
180039b4:	3dc00044 	addi	r23,r7,1
180039b8:	d9c00617 	ldw	r7,24(sp)
180039bc:	01800044 	movi	r6,1
180039c0:	180b883a 	mov	r5,r3
180039c4:	2005883a 	mov	r2,r4
180039c8:	39803826 	beq	r7,r6,18003aac <_dtoa_r+0x8f4>
180039cc:	000d883a 	mov	r6,zero
180039d0:	01d00934 	movhi	r7,16420
180039d4:	800a9b80 	call	1800a9b8 <__muldf3>
180039d8:	000d883a 	mov	r6,zero
180039dc:	000f883a 	mov	r7,zero
180039e0:	1009883a 	mov	r4,r2
180039e4:	180b883a 	mov	r5,r3
180039e8:	1025883a 	mov	r18,r2
180039ec:	1827883a 	mov	r19,r3
180039f0:	800a7600 	call	1800a760 <__eqdf2>
180039f4:	103f9a26 	beq	r2,zero,18003860 <__alt_data_end+0xf8003860>
180039f8:	d9c00617 	ldw	r7,24(sp)
180039fc:	d8c00717 	ldw	r3,28(sp)
18003a00:	b829883a 	mov	r20,r23
18003a04:	38bfffc4 	addi	r2,r7,-1
18003a08:	18ad883a 	add	r22,r3,r2
18003a0c:	00000a06 	br	18003a38 <_dtoa_r+0x880>
18003a10:	800a9b80 	call	1800a9b8 <__muldf3>
18003a14:	000d883a 	mov	r6,zero
18003a18:	000f883a 	mov	r7,zero
18003a1c:	1009883a 	mov	r4,r2
18003a20:	180b883a 	mov	r5,r3
18003a24:	1025883a 	mov	r18,r2
18003a28:	1827883a 	mov	r19,r3
18003a2c:	b829883a 	mov	r20,r23
18003a30:	800a7600 	call	1800a760 <__eqdf2>
18003a34:	103f8a26 	beq	r2,zero,18003860 <__alt_data_end+0xf8003860>
18003a38:	800d883a 	mov	r6,r16
18003a3c:	880f883a 	mov	r7,r17
18003a40:	9009883a 	mov	r4,r18
18003a44:	980b883a 	mov	r5,r19
18003a48:	8009d900 	call	18009d90 <__divdf3>
18003a4c:	180b883a 	mov	r5,r3
18003a50:	1009883a 	mov	r4,r2
18003a54:	800bb200 	call	1800bb20 <__fixdfsi>
18003a58:	1009883a 	mov	r4,r2
18003a5c:	102b883a 	mov	r21,r2
18003a60:	800bba00 	call	1800bba0 <__floatsidf>
18003a64:	800d883a 	mov	r6,r16
18003a68:	880f883a 	mov	r7,r17
18003a6c:	1009883a 	mov	r4,r2
18003a70:	180b883a 	mov	r5,r3
18003a74:	800a9b80 	call	1800a9b8 <__muldf3>
18003a78:	100d883a 	mov	r6,r2
18003a7c:	180f883a 	mov	r7,r3
18003a80:	9009883a 	mov	r4,r18
18003a84:	980b883a 	mov	r5,r19
18003a88:	800b2240 	call	1800b224 <__subdf3>
18003a8c:	aa000c04 	addi	r8,r21,48
18003a90:	a2000005 	stb	r8,0(r20)
18003a94:	000d883a 	mov	r6,zero
18003a98:	01d00934 	movhi	r7,16420
18003a9c:	1009883a 	mov	r4,r2
18003aa0:	180b883a 	mov	r5,r3
18003aa4:	a5c00044 	addi	r23,r20,1
18003aa8:	b53fd91e 	bne	r22,r20,18003a10 <__alt_data_end+0xf8003a10>
18003aac:	100d883a 	mov	r6,r2
18003ab0:	180f883a 	mov	r7,r3
18003ab4:	1009883a 	mov	r4,r2
18003ab8:	180b883a 	mov	r5,r3
18003abc:	80094e40 	call	180094e4 <__adddf3>
18003ac0:	100d883a 	mov	r6,r2
18003ac4:	180f883a 	mov	r7,r3
18003ac8:	8009883a 	mov	r4,r16
18003acc:	880b883a 	mov	r5,r17
18003ad0:	1027883a 	mov	r19,r2
18003ad4:	1825883a 	mov	r18,r3
18003ad8:	800a8c40 	call	1800a8c4 <__ledf2>
18003adc:	10000816 	blt	r2,zero,18003b00 <_dtoa_r+0x948>
18003ae0:	980d883a 	mov	r6,r19
18003ae4:	900f883a 	mov	r7,r18
18003ae8:	8009883a 	mov	r4,r16
18003aec:	880b883a 	mov	r5,r17
18003af0:	800a7600 	call	1800a760 <__eqdf2>
18003af4:	103f5a1e 	bne	r2,zero,18003860 <__alt_data_end+0xf8003860>
18003af8:	ad40004c 	andi	r21,r21,1
18003afc:	a83f5826 	beq	r21,zero,18003860 <__alt_data_end+0xf8003860>
18003b00:	bd3fffc3 	ldbu	r20,-1(r23)
18003b04:	b8bfffc4 	addi	r2,r23,-1
18003b08:	1007883a 	mov	r3,r2
18003b0c:	01400e44 	movi	r5,57
18003b10:	d9800717 	ldw	r6,28(sp)
18003b14:	00000506 	br	18003b2c <_dtoa_r+0x974>
18003b18:	18ffffc4 	addi	r3,r3,-1
18003b1c:	11824726 	beq	r2,r6,1800443c <_dtoa_r+0x1284>
18003b20:	1d000003 	ldbu	r20,0(r3)
18003b24:	102f883a 	mov	r23,r2
18003b28:	10bfffc4 	addi	r2,r2,-1
18003b2c:	a1003fcc 	andi	r4,r20,255
18003b30:	2100201c 	xori	r4,r4,128
18003b34:	213fe004 	addi	r4,r4,-128
18003b38:	217ff726 	beq	r4,r5,18003b18 <__alt_data_end+0xf8003b18>
18003b3c:	a2000044 	addi	r8,r20,1
18003b40:	12000005 	stb	r8,0(r2)
18003b44:	003f4606 	br	18003860 <__alt_data_end+0xf8003860>
18003b48:	d9000b17 	ldw	r4,44(sp)
18003b4c:	2000c826 	beq	r4,zero,18003e70 <_dtoa_r+0xcb8>
18003b50:	d9800317 	ldw	r6,12(sp)
18003b54:	00c00044 	movi	r3,1
18003b58:	1980f90e 	bge	r3,r6,18003f40 <_dtoa_r+0xd88>
18003b5c:	d8800617 	ldw	r2,24(sp)
18003b60:	d8c00a17 	ldw	r3,40(sp)
18003b64:	157fffc4 	addi	r21,r2,-1
18003b68:	1d41f316 	blt	r3,r21,18004338 <_dtoa_r+0x1180>
18003b6c:	1d6bc83a 	sub	r21,r3,r21
18003b70:	d9c00617 	ldw	r7,24(sp)
18003b74:	3802aa16 	blt	r7,zero,18004620 <_dtoa_r+0x1468>
18003b78:	dd000817 	ldw	r20,32(sp)
18003b7c:	d8800617 	ldw	r2,24(sp)
18003b80:	d8c00817 	ldw	r3,32(sp)
18003b84:	01400044 	movi	r5,1
18003b88:	e009883a 	mov	r4,fp
18003b8c:	1887883a 	add	r3,r3,r2
18003b90:	d8c00815 	stw	r3,32(sp)
18003b94:	b0ad883a 	add	r22,r22,r2
18003b98:	80057880 	call	18005788 <__i2b>
18003b9c:	1023883a 	mov	r17,r2
18003ba0:	a0000826 	beq	r20,zero,18003bc4 <_dtoa_r+0xa0c>
18003ba4:	0580070e 	bge	zero,r22,18003bc4 <_dtoa_r+0xa0c>
18003ba8:	a005883a 	mov	r2,r20
18003bac:	b500b916 	blt	r22,r20,18003e94 <_dtoa_r+0xcdc>
18003bb0:	d9000817 	ldw	r4,32(sp)
18003bb4:	a0a9c83a 	sub	r20,r20,r2
18003bb8:	b0adc83a 	sub	r22,r22,r2
18003bbc:	2089c83a 	sub	r4,r4,r2
18003bc0:	d9000815 	stw	r4,32(sp)
18003bc4:	d9800a17 	ldw	r6,40(sp)
18003bc8:	0181810e 	bge	zero,r6,180041d0 <_dtoa_r+0x1018>
18003bcc:	d9c00b17 	ldw	r7,44(sp)
18003bd0:	3800b326 	beq	r7,zero,18003ea0 <_dtoa_r+0xce8>
18003bd4:	a800b226 	beq	r21,zero,18003ea0 <_dtoa_r+0xce8>
18003bd8:	880b883a 	mov	r5,r17
18003bdc:	a80d883a 	mov	r6,r21
18003be0:	e009883a 	mov	r4,fp
18003be4:	8005a500 	call	18005a50 <__pow5mult>
18003be8:	d9800917 	ldw	r6,36(sp)
18003bec:	100b883a 	mov	r5,r2
18003bf0:	e009883a 	mov	r4,fp
18003bf4:	1023883a 	mov	r17,r2
18003bf8:	80057c40 	call	180057c4 <__multiply>
18003bfc:	1021883a 	mov	r16,r2
18003c00:	d8800a17 	ldw	r2,40(sp)
18003c04:	d9400917 	ldw	r5,36(sp)
18003c08:	e009883a 	mov	r4,fp
18003c0c:	1545c83a 	sub	r2,r2,r21
18003c10:	d8800a15 	stw	r2,40(sp)
18003c14:	80053fc0 	call	180053fc <_Bfree>
18003c18:	d8c00a17 	ldw	r3,40(sp)
18003c1c:	18009f1e 	bne	r3,zero,18003e9c <_dtoa_r+0xce4>
18003c20:	05c00044 	movi	r23,1
18003c24:	e009883a 	mov	r4,fp
18003c28:	b80b883a 	mov	r5,r23
18003c2c:	80057880 	call	18005788 <__i2b>
18003c30:	d9000d17 	ldw	r4,52(sp)
18003c34:	102b883a 	mov	r21,r2
18003c38:	2000ce26 	beq	r4,zero,18003f74 <_dtoa_r+0xdbc>
18003c3c:	200d883a 	mov	r6,r4
18003c40:	100b883a 	mov	r5,r2
18003c44:	e009883a 	mov	r4,fp
18003c48:	8005a500 	call	18005a50 <__pow5mult>
18003c4c:	d9800317 	ldw	r6,12(sp)
18003c50:	102b883a 	mov	r21,r2
18003c54:	b981810e 	bge	r23,r6,1800425c <_dtoa_r+0x10a4>
18003c58:	0027883a 	mov	r19,zero
18003c5c:	a8800417 	ldw	r2,16(r21)
18003c60:	05c00804 	movi	r23,32
18003c64:	10800104 	addi	r2,r2,4
18003c68:	1085883a 	add	r2,r2,r2
18003c6c:	1085883a 	add	r2,r2,r2
18003c70:	a885883a 	add	r2,r21,r2
18003c74:	11000017 	ldw	r4,0(r2)
18003c78:	80056700 	call	18005670 <__hi0bits>
18003c7c:	b885c83a 	sub	r2,r23,r2
18003c80:	1585883a 	add	r2,r2,r22
18003c84:	108007cc 	andi	r2,r2,31
18003c88:	1000b326 	beq	r2,zero,18003f58 <_dtoa_r+0xda0>
18003c8c:	00c00804 	movi	r3,32
18003c90:	1887c83a 	sub	r3,r3,r2
18003c94:	01000104 	movi	r4,4
18003c98:	20c2cd0e 	bge	r4,r3,180047d0 <_dtoa_r+0x1618>
18003c9c:	00c00704 	movi	r3,28
18003ca0:	1885c83a 	sub	r2,r3,r2
18003ca4:	d8c00817 	ldw	r3,32(sp)
18003ca8:	a0a9883a 	add	r20,r20,r2
18003cac:	b0ad883a 	add	r22,r22,r2
18003cb0:	1887883a 	add	r3,r3,r2
18003cb4:	d8c00815 	stw	r3,32(sp)
18003cb8:	d9800817 	ldw	r6,32(sp)
18003cbc:	0180040e 	bge	zero,r6,18003cd0 <_dtoa_r+0xb18>
18003cc0:	800b883a 	mov	r5,r16
18003cc4:	e009883a 	mov	r4,fp
18003cc8:	8005b900 	call	18005b90 <__lshift>
18003ccc:	1021883a 	mov	r16,r2
18003cd0:	0580050e 	bge	zero,r22,18003ce8 <_dtoa_r+0xb30>
18003cd4:	a80b883a 	mov	r5,r21
18003cd8:	b00d883a 	mov	r6,r22
18003cdc:	e009883a 	mov	r4,fp
18003ce0:	8005b900 	call	18005b90 <__lshift>
18003ce4:	102b883a 	mov	r21,r2
18003ce8:	d9c00e17 	ldw	r7,56(sp)
18003cec:	3801211e 	bne	r7,zero,18004174 <_dtoa_r+0xfbc>
18003cf0:	d9800617 	ldw	r6,24(sp)
18003cf4:	0181380e 	bge	zero,r6,180041d8 <_dtoa_r+0x1020>
18003cf8:	d8c00b17 	ldw	r3,44(sp)
18003cfc:	1800ab1e 	bne	r3,zero,18003fac <_dtoa_r+0xdf4>
18003d00:	dc800717 	ldw	r18,28(sp)
18003d04:	dcc00617 	ldw	r19,24(sp)
18003d08:	9029883a 	mov	r20,r18
18003d0c:	00000206 	br	18003d18 <_dtoa_r+0xb60>
18003d10:	80054240 	call	18005424 <__multadd>
18003d14:	1021883a 	mov	r16,r2
18003d18:	a80b883a 	mov	r5,r21
18003d1c:	8009883a 	mov	r4,r16
18003d20:	8002f900 	call	18002f90 <quorem>
18003d24:	10800c04 	addi	r2,r2,48
18003d28:	90800005 	stb	r2,0(r18)
18003d2c:	94800044 	addi	r18,r18,1
18003d30:	9507c83a 	sub	r3,r18,r20
18003d34:	000f883a 	mov	r7,zero
18003d38:	01800284 	movi	r6,10
18003d3c:	800b883a 	mov	r5,r16
18003d40:	e009883a 	mov	r4,fp
18003d44:	1cfff216 	blt	r3,r19,18003d10 <__alt_data_end+0xf8003d10>
18003d48:	1011883a 	mov	r8,r2
18003d4c:	d8800617 	ldw	r2,24(sp)
18003d50:	0082370e 	bge	zero,r2,18004630 <_dtoa_r+0x1478>
18003d54:	d9000717 	ldw	r4,28(sp)
18003d58:	0025883a 	mov	r18,zero
18003d5c:	20af883a 	add	r23,r4,r2
18003d60:	01800044 	movi	r6,1
18003d64:	800b883a 	mov	r5,r16
18003d68:	e009883a 	mov	r4,fp
18003d6c:	da001715 	stw	r8,92(sp)
18003d70:	8005b900 	call	18005b90 <__lshift>
18003d74:	a80b883a 	mov	r5,r21
18003d78:	1009883a 	mov	r4,r2
18003d7c:	d8800915 	stw	r2,36(sp)
18003d80:	8005cd80 	call	18005cd8 <__mcmp>
18003d84:	da001717 	ldw	r8,92(sp)
18003d88:	0081800e 	bge	zero,r2,1800438c <_dtoa_r+0x11d4>
18003d8c:	b93fffc3 	ldbu	r4,-1(r23)
18003d90:	b8bfffc4 	addi	r2,r23,-1
18003d94:	1007883a 	mov	r3,r2
18003d98:	01800e44 	movi	r6,57
18003d9c:	d9c00717 	ldw	r7,28(sp)
18003da0:	00000506 	br	18003db8 <_dtoa_r+0xc00>
18003da4:	18ffffc4 	addi	r3,r3,-1
18003da8:	11c12326 	beq	r2,r7,18004238 <_dtoa_r+0x1080>
18003dac:	19000003 	ldbu	r4,0(r3)
18003db0:	102f883a 	mov	r23,r2
18003db4:	10bfffc4 	addi	r2,r2,-1
18003db8:	21403fcc 	andi	r5,r4,255
18003dbc:	2940201c 	xori	r5,r5,128
18003dc0:	297fe004 	addi	r5,r5,-128
18003dc4:	29bff726 	beq	r5,r6,18003da4 <__alt_data_end+0xf8003da4>
18003dc8:	21000044 	addi	r4,r4,1
18003dcc:	11000005 	stb	r4,0(r2)
18003dd0:	a80b883a 	mov	r5,r21
18003dd4:	e009883a 	mov	r4,fp
18003dd8:	80053fc0 	call	180053fc <_Bfree>
18003ddc:	883ea026 	beq	r17,zero,18003860 <__alt_data_end+0xf8003860>
18003de0:	90000426 	beq	r18,zero,18003df4 <_dtoa_r+0xc3c>
18003de4:	94400326 	beq	r18,r17,18003df4 <_dtoa_r+0xc3c>
18003de8:	900b883a 	mov	r5,r18
18003dec:	e009883a 	mov	r4,fp
18003df0:	80053fc0 	call	180053fc <_Bfree>
18003df4:	880b883a 	mov	r5,r17
18003df8:	e009883a 	mov	r4,fp
18003dfc:	80053fc0 	call	180053fc <_Bfree>
18003e00:	003e9706 	br	18003860 <__alt_data_end+0xf8003860>
18003e04:	01800044 	movi	r6,1
18003e08:	d9800e15 	stw	r6,56(sp)
18003e0c:	003d9606 	br	18003468 <__alt_data_end+0xf8003468>
18003e10:	d8800817 	ldw	r2,32(sp)
18003e14:	d8c00517 	ldw	r3,20(sp)
18003e18:	d8000d15 	stw	zero,52(sp)
18003e1c:	10c5c83a 	sub	r2,r2,r3
18003e20:	00c9c83a 	sub	r4,zero,r3
18003e24:	d8800815 	stw	r2,32(sp)
18003e28:	d9000a15 	stw	r4,40(sp)
18003e2c:	003d9706 	br	1800348c <__alt_data_end+0xf800348c>
18003e30:	05adc83a 	sub	r22,zero,r22
18003e34:	dd800815 	stw	r22,32(sp)
18003e38:	002d883a 	mov	r22,zero
18003e3c:	003d8e06 	br	18003478 <__alt_data_end+0xf8003478>
18003e40:	d9000517 	ldw	r4,20(sp)
18003e44:	800bba00 	call	1800bba0 <__floatsidf>
18003e48:	100d883a 	mov	r6,r2
18003e4c:	180f883a 	mov	r7,r3
18003e50:	a009883a 	mov	r4,r20
18003e54:	880b883a 	mov	r5,r17
18003e58:	800a7600 	call	1800a760 <__eqdf2>
18003e5c:	103d7126 	beq	r2,zero,18003424 <__alt_data_end+0xf8003424>
18003e60:	d9c00517 	ldw	r7,20(sp)
18003e64:	39ffffc4 	addi	r7,r7,-1
18003e68:	d9c00515 	stw	r7,20(sp)
18003e6c:	003d6d06 	br	18003424 <__alt_data_end+0xf8003424>
18003e70:	dd400a17 	ldw	r21,40(sp)
18003e74:	dd000817 	ldw	r20,32(sp)
18003e78:	0023883a 	mov	r17,zero
18003e7c:	003f4806 	br	18003ba0 <__alt_data_end+0xf8003ba0>
18003e80:	10e3c83a 	sub	r17,r2,r3
18003e84:	9448983a 	sll	r4,r18,r17
18003e88:	003d3206 	br	18003354 <__alt_data_end+0xf8003354>
18003e8c:	d8000e15 	stw	zero,56(sp)
18003e90:	003d7506 	br	18003468 <__alt_data_end+0xf8003468>
18003e94:	b005883a 	mov	r2,r22
18003e98:	003f4506 	br	18003bb0 <__alt_data_end+0xf8003bb0>
18003e9c:	dc000915 	stw	r16,36(sp)
18003ea0:	d9800a17 	ldw	r6,40(sp)
18003ea4:	d9400917 	ldw	r5,36(sp)
18003ea8:	e009883a 	mov	r4,fp
18003eac:	8005a500 	call	18005a50 <__pow5mult>
18003eb0:	1021883a 	mov	r16,r2
18003eb4:	003f5a06 	br	18003c20 <__alt_data_end+0xf8003c20>
18003eb8:	01c00044 	movi	r7,1
18003ebc:	d9c00b15 	stw	r7,44(sp)
18003ec0:	d8802217 	ldw	r2,136(sp)
18003ec4:	0081280e 	bge	zero,r2,18004368 <_dtoa_r+0x11b0>
18003ec8:	100d883a 	mov	r6,r2
18003ecc:	1021883a 	mov	r16,r2
18003ed0:	d8800c15 	stw	r2,48(sp)
18003ed4:	d8800615 	stw	r2,24(sp)
18003ed8:	003d8806 	br	180034fc <__alt_data_end+0xf80034fc>
18003edc:	d8800617 	ldw	r2,24(sp)
18003ee0:	00be9b16 	blt	zero,r2,18003950 <__alt_data_end+0xf8003950>
18003ee4:	10010f1e 	bne	r2,zero,18004324 <_dtoa_r+0x116c>
18003ee8:	880b883a 	mov	r5,r17
18003eec:	000d883a 	mov	r6,zero
18003ef0:	01d00534 	movhi	r7,16404
18003ef4:	8009883a 	mov	r4,r16
18003ef8:	800a9b80 	call	1800a9b8 <__muldf3>
18003efc:	900d883a 	mov	r6,r18
18003f00:	980f883a 	mov	r7,r19
18003f04:	1009883a 	mov	r4,r2
18003f08:	180b883a 	mov	r5,r3
18003f0c:	800a7e80 	call	1800a7e8 <__gedf2>
18003f10:	002b883a 	mov	r21,zero
18003f14:	0023883a 	mov	r17,zero
18003f18:	1000bf16 	blt	r2,zero,18004218 <_dtoa_r+0x1060>
18003f1c:	d9802217 	ldw	r6,136(sp)
18003f20:	ddc00717 	ldw	r23,28(sp)
18003f24:	018c303a 	nor	r6,zero,r6
18003f28:	d9800515 	stw	r6,20(sp)
18003f2c:	a80b883a 	mov	r5,r21
18003f30:	e009883a 	mov	r4,fp
18003f34:	80053fc0 	call	180053fc <_Bfree>
18003f38:	883e4926 	beq	r17,zero,18003860 <__alt_data_end+0xf8003860>
18003f3c:	003fad06 	br	18003df4 <__alt_data_end+0xf8003df4>
18003f40:	d9c01117 	ldw	r7,68(sp)
18003f44:	3801bc26 	beq	r7,zero,18004638 <_dtoa_r+0x1480>
18003f48:	10810cc4 	addi	r2,r2,1075
18003f4c:	dd400a17 	ldw	r21,40(sp)
18003f50:	dd000817 	ldw	r20,32(sp)
18003f54:	003f0a06 	br	18003b80 <__alt_data_end+0xf8003b80>
18003f58:	00800704 	movi	r2,28
18003f5c:	d9000817 	ldw	r4,32(sp)
18003f60:	a0a9883a 	add	r20,r20,r2
18003f64:	b0ad883a 	add	r22,r22,r2
18003f68:	2089883a 	add	r4,r4,r2
18003f6c:	d9000815 	stw	r4,32(sp)
18003f70:	003f5106 	br	18003cb8 <__alt_data_end+0xf8003cb8>
18003f74:	d8c00317 	ldw	r3,12(sp)
18003f78:	b8c1fc0e 	bge	r23,r3,1800476c <_dtoa_r+0x15b4>
18003f7c:	0027883a 	mov	r19,zero
18003f80:	b805883a 	mov	r2,r23
18003f84:	003f3e06 	br	18003c80 <__alt_data_end+0xf8003c80>
18003f88:	880b883a 	mov	r5,r17
18003f8c:	e009883a 	mov	r4,fp
18003f90:	000f883a 	mov	r7,zero
18003f94:	01800284 	movi	r6,10
18003f98:	80054240 	call	18005424 <__multadd>
18003f9c:	d9000c17 	ldw	r4,48(sp)
18003fa0:	1023883a 	mov	r17,r2
18003fa4:	0102040e 	bge	zero,r4,180047b8 <_dtoa_r+0x1600>
18003fa8:	d9000615 	stw	r4,24(sp)
18003fac:	0500050e 	bge	zero,r20,18003fc4 <_dtoa_r+0xe0c>
18003fb0:	880b883a 	mov	r5,r17
18003fb4:	a00d883a 	mov	r6,r20
18003fb8:	e009883a 	mov	r4,fp
18003fbc:	8005b900 	call	18005b90 <__lshift>
18003fc0:	1023883a 	mov	r17,r2
18003fc4:	9801241e 	bne	r19,zero,18004458 <_dtoa_r+0x12a0>
18003fc8:	8829883a 	mov	r20,r17
18003fcc:	d9000617 	ldw	r4,24(sp)
18003fd0:	dcc00717 	ldw	r19,28(sp)
18003fd4:	9480004c 	andi	r18,r18,1
18003fd8:	20bfffc4 	addi	r2,r4,-1
18003fdc:	9885883a 	add	r2,r19,r2
18003fe0:	d8800415 	stw	r2,16(sp)
18003fe4:	dc800615 	stw	r18,24(sp)
18003fe8:	a80b883a 	mov	r5,r21
18003fec:	8009883a 	mov	r4,r16
18003ff0:	8002f900 	call	18002f90 <quorem>
18003ff4:	880b883a 	mov	r5,r17
18003ff8:	8009883a 	mov	r4,r16
18003ffc:	102f883a 	mov	r23,r2
18004000:	8005cd80 	call	18005cd8 <__mcmp>
18004004:	a80b883a 	mov	r5,r21
18004008:	a00d883a 	mov	r6,r20
1800400c:	e009883a 	mov	r4,fp
18004010:	102d883a 	mov	r22,r2
18004014:	8005d380 	call	18005d38 <__mdiff>
18004018:	1007883a 	mov	r3,r2
1800401c:	10800317 	ldw	r2,12(r2)
18004020:	bc800c04 	addi	r18,r23,48
18004024:	180b883a 	mov	r5,r3
18004028:	10004e1e 	bne	r2,zero,18004164 <_dtoa_r+0xfac>
1800402c:	8009883a 	mov	r4,r16
18004030:	d8c01615 	stw	r3,88(sp)
18004034:	8005cd80 	call	18005cd8 <__mcmp>
18004038:	d8c01617 	ldw	r3,88(sp)
1800403c:	e009883a 	mov	r4,fp
18004040:	d8801615 	stw	r2,88(sp)
18004044:	180b883a 	mov	r5,r3
18004048:	80053fc0 	call	180053fc <_Bfree>
1800404c:	d8801617 	ldw	r2,88(sp)
18004050:	1000041e 	bne	r2,zero,18004064 <_dtoa_r+0xeac>
18004054:	d9800317 	ldw	r6,12(sp)
18004058:	3000021e 	bne	r6,zero,18004064 <_dtoa_r+0xeac>
1800405c:	d8c00617 	ldw	r3,24(sp)
18004060:	18003726 	beq	r3,zero,18004140 <_dtoa_r+0xf88>
18004064:	b0002016 	blt	r22,zero,180040e8 <_dtoa_r+0xf30>
18004068:	b000041e 	bne	r22,zero,1800407c <_dtoa_r+0xec4>
1800406c:	d9000317 	ldw	r4,12(sp)
18004070:	2000021e 	bne	r4,zero,1800407c <_dtoa_r+0xec4>
18004074:	d8c00617 	ldw	r3,24(sp)
18004078:	18001b26 	beq	r3,zero,180040e8 <_dtoa_r+0xf30>
1800407c:	00810716 	blt	zero,r2,1800449c <_dtoa_r+0x12e4>
18004080:	d8c00417 	ldw	r3,16(sp)
18004084:	9d800044 	addi	r22,r19,1
18004088:	9c800005 	stb	r18,0(r19)
1800408c:	b02f883a 	mov	r23,r22
18004090:	98c10626 	beq	r19,r3,180044ac <_dtoa_r+0x12f4>
18004094:	800b883a 	mov	r5,r16
18004098:	000f883a 	mov	r7,zero
1800409c:	01800284 	movi	r6,10
180040a0:	e009883a 	mov	r4,fp
180040a4:	80054240 	call	18005424 <__multadd>
180040a8:	1021883a 	mov	r16,r2
180040ac:	000f883a 	mov	r7,zero
180040b0:	01800284 	movi	r6,10
180040b4:	880b883a 	mov	r5,r17
180040b8:	e009883a 	mov	r4,fp
180040bc:	8d002526 	beq	r17,r20,18004154 <_dtoa_r+0xf9c>
180040c0:	80054240 	call	18005424 <__multadd>
180040c4:	a00b883a 	mov	r5,r20
180040c8:	000f883a 	mov	r7,zero
180040cc:	01800284 	movi	r6,10
180040d0:	e009883a 	mov	r4,fp
180040d4:	1023883a 	mov	r17,r2
180040d8:	80054240 	call	18005424 <__multadd>
180040dc:	1029883a 	mov	r20,r2
180040e0:	b027883a 	mov	r19,r22
180040e4:	003fc006 	br	18003fe8 <__alt_data_end+0xf8003fe8>
180040e8:	9011883a 	mov	r8,r18
180040ec:	00800e0e 	bge	zero,r2,18004128 <_dtoa_r+0xf70>
180040f0:	800b883a 	mov	r5,r16
180040f4:	01800044 	movi	r6,1
180040f8:	e009883a 	mov	r4,fp
180040fc:	da001715 	stw	r8,92(sp)
18004100:	8005b900 	call	18005b90 <__lshift>
18004104:	a80b883a 	mov	r5,r21
18004108:	1009883a 	mov	r4,r2
1800410c:	1021883a 	mov	r16,r2
18004110:	8005cd80 	call	18005cd8 <__mcmp>
18004114:	da001717 	ldw	r8,92(sp)
18004118:	0081960e 	bge	zero,r2,18004774 <_dtoa_r+0x15bc>
1800411c:	00800e44 	movi	r2,57
18004120:	40817026 	beq	r8,r2,180046e4 <_dtoa_r+0x152c>
18004124:	ba000c44 	addi	r8,r23,49
18004128:	8825883a 	mov	r18,r17
1800412c:	9dc00044 	addi	r23,r19,1
18004130:	9a000005 	stb	r8,0(r19)
18004134:	a023883a 	mov	r17,r20
18004138:	dc000915 	stw	r16,36(sp)
1800413c:	003f2406 	br	18003dd0 <__alt_data_end+0xf8003dd0>
18004140:	00800e44 	movi	r2,57
18004144:	9011883a 	mov	r8,r18
18004148:	90816626 	beq	r18,r2,180046e4 <_dtoa_r+0x152c>
1800414c:	05bff516 	blt	zero,r22,18004124 <__alt_data_end+0xf8004124>
18004150:	003ff506 	br	18004128 <__alt_data_end+0xf8004128>
18004154:	80054240 	call	18005424 <__multadd>
18004158:	1023883a 	mov	r17,r2
1800415c:	1029883a 	mov	r20,r2
18004160:	003fdf06 	br	180040e0 <__alt_data_end+0xf80040e0>
18004164:	e009883a 	mov	r4,fp
18004168:	80053fc0 	call	180053fc <_Bfree>
1800416c:	00800044 	movi	r2,1
18004170:	003fbc06 	br	18004064 <__alt_data_end+0xf8004064>
18004174:	a80b883a 	mov	r5,r21
18004178:	8009883a 	mov	r4,r16
1800417c:	8005cd80 	call	18005cd8 <__mcmp>
18004180:	103edb0e 	bge	r2,zero,18003cf0 <__alt_data_end+0xf8003cf0>
18004184:	800b883a 	mov	r5,r16
18004188:	000f883a 	mov	r7,zero
1800418c:	01800284 	movi	r6,10
18004190:	e009883a 	mov	r4,fp
18004194:	80054240 	call	18005424 <__multadd>
18004198:	1021883a 	mov	r16,r2
1800419c:	d8800517 	ldw	r2,20(sp)
180041a0:	d8c00b17 	ldw	r3,44(sp)
180041a4:	10bfffc4 	addi	r2,r2,-1
180041a8:	d8800515 	stw	r2,20(sp)
180041ac:	183f761e 	bne	r3,zero,18003f88 <__alt_data_end+0xf8003f88>
180041b0:	d9000c17 	ldw	r4,48(sp)
180041b4:	0101730e 	bge	zero,r4,18004784 <_dtoa_r+0x15cc>
180041b8:	d9000615 	stw	r4,24(sp)
180041bc:	003ed006 	br	18003d00 <__alt_data_end+0xf8003d00>
180041c0:	00800084 	movi	r2,2
180041c4:	3081861e 	bne	r6,r2,180047e0 <_dtoa_r+0x1628>
180041c8:	d8000b15 	stw	zero,44(sp)
180041cc:	003f3c06 	br	18003ec0 <__alt_data_end+0xf8003ec0>
180041d0:	dc000917 	ldw	r16,36(sp)
180041d4:	003e9206 	br	18003c20 <__alt_data_end+0xf8003c20>
180041d8:	d9c00317 	ldw	r7,12(sp)
180041dc:	00800084 	movi	r2,2
180041e0:	11fec50e 	bge	r2,r7,18003cf8 <__alt_data_end+0xf8003cf8>
180041e4:	d9000617 	ldw	r4,24(sp)
180041e8:	20013c1e 	bne	r4,zero,180046dc <_dtoa_r+0x1524>
180041ec:	a80b883a 	mov	r5,r21
180041f0:	000f883a 	mov	r7,zero
180041f4:	01800144 	movi	r6,5
180041f8:	e009883a 	mov	r4,fp
180041fc:	80054240 	call	18005424 <__multadd>
18004200:	100b883a 	mov	r5,r2
18004204:	8009883a 	mov	r4,r16
18004208:	102b883a 	mov	r21,r2
1800420c:	8005cd80 	call	18005cd8 <__mcmp>
18004210:	dc000915 	stw	r16,36(sp)
18004214:	00bf410e 	bge	zero,r2,18003f1c <__alt_data_end+0xf8003f1c>
18004218:	d9c00717 	ldw	r7,28(sp)
1800421c:	00800c44 	movi	r2,49
18004220:	38800005 	stb	r2,0(r7)
18004224:	d8800517 	ldw	r2,20(sp)
18004228:	3dc00044 	addi	r23,r7,1
1800422c:	10800044 	addi	r2,r2,1
18004230:	d8800515 	stw	r2,20(sp)
18004234:	003f3d06 	br	18003f2c <__alt_data_end+0xf8003f2c>
18004238:	d9800517 	ldw	r6,20(sp)
1800423c:	d9c00717 	ldw	r7,28(sp)
18004240:	00800c44 	movi	r2,49
18004244:	31800044 	addi	r6,r6,1
18004248:	d9800515 	stw	r6,20(sp)
1800424c:	38800005 	stb	r2,0(r7)
18004250:	003edf06 	br	18003dd0 <__alt_data_end+0xf8003dd0>
18004254:	d8000b15 	stw	zero,44(sp)
18004258:	003c9f06 	br	180034d8 <__alt_data_end+0xf80034d8>
1800425c:	903e7e1e 	bne	r18,zero,18003c58 <__alt_data_end+0xf8003c58>
18004260:	00800434 	movhi	r2,16
18004264:	10bfffc4 	addi	r2,r2,-1
18004268:	9884703a 	and	r2,r19,r2
1800426c:	1000ea1e 	bne	r2,zero,18004618 <_dtoa_r+0x1460>
18004270:	9cdffc2c 	andhi	r19,r19,32752
18004274:	9800e826 	beq	r19,zero,18004618 <_dtoa_r+0x1460>
18004278:	d9c00817 	ldw	r7,32(sp)
1800427c:	b5800044 	addi	r22,r22,1
18004280:	04c00044 	movi	r19,1
18004284:	39c00044 	addi	r7,r7,1
18004288:	d9c00815 	stw	r7,32(sp)
1800428c:	d8800d17 	ldw	r2,52(sp)
18004290:	103e721e 	bne	r2,zero,18003c5c <__alt_data_end+0xf8003c5c>
18004294:	00800044 	movi	r2,1
18004298:	003e7906 	br	18003c80 <__alt_data_end+0xf8003c80>
1800429c:	8009883a 	mov	r4,r16
180042a0:	800bba00 	call	1800bba0 <__floatsidf>
180042a4:	d9800f17 	ldw	r6,60(sp)
180042a8:	d9c01017 	ldw	r7,64(sp)
180042ac:	1009883a 	mov	r4,r2
180042b0:	180b883a 	mov	r5,r3
180042b4:	800a9b80 	call	1800a9b8 <__muldf3>
180042b8:	000d883a 	mov	r6,zero
180042bc:	01d00734 	movhi	r7,16412
180042c0:	1009883a 	mov	r4,r2
180042c4:	180b883a 	mov	r5,r3
180042c8:	80094e40 	call	180094e4 <__adddf3>
180042cc:	047f3034 	movhi	r17,64704
180042d0:	1021883a 	mov	r16,r2
180042d4:	1c63883a 	add	r17,r3,r17
180042d8:	d9000f17 	ldw	r4,60(sp)
180042dc:	d9401017 	ldw	r5,64(sp)
180042e0:	000d883a 	mov	r6,zero
180042e4:	01d00534 	movhi	r7,16404
180042e8:	800b2240 	call	1800b224 <__subdf3>
180042ec:	800d883a 	mov	r6,r16
180042f0:	880f883a 	mov	r7,r17
180042f4:	1009883a 	mov	r4,r2
180042f8:	180b883a 	mov	r5,r3
180042fc:	102b883a 	mov	r21,r2
18004300:	1829883a 	mov	r20,r3
18004304:	800a7e80 	call	1800a7e8 <__gedf2>
18004308:	00806c16 	blt	zero,r2,180044bc <_dtoa_r+0x1304>
1800430c:	89e0003c 	xorhi	r7,r17,32768
18004310:	800d883a 	mov	r6,r16
18004314:	a809883a 	mov	r4,r21
18004318:	a00b883a 	mov	r5,r20
1800431c:	800a8c40 	call	1800a8c4 <__ledf2>
18004320:	103d7e0e 	bge	r2,zero,1800391c <__alt_data_end+0xf800391c>
18004324:	002b883a 	mov	r21,zero
18004328:	0023883a 	mov	r17,zero
1800432c:	003efb06 	br	18003f1c <__alt_data_end+0xf8003f1c>
18004330:	d8800717 	ldw	r2,28(sp)
18004334:	003bd006 	br	18003278 <__alt_data_end+0xf8003278>
18004338:	d9000a17 	ldw	r4,40(sp)
1800433c:	d9800d17 	ldw	r6,52(sp)
18004340:	dd400a15 	stw	r21,40(sp)
18004344:	a905c83a 	sub	r2,r21,r4
18004348:	308d883a 	add	r6,r6,r2
1800434c:	d9800d15 	stw	r6,52(sp)
18004350:	002b883a 	mov	r21,zero
18004354:	003e0606 	br	18003b70 <__alt_data_end+0xf8003b70>
18004358:	9023883a 	mov	r17,r18
1800435c:	9829883a 	mov	r20,r19
18004360:	04000084 	movi	r16,2
18004364:	003c9206 	br	180035b0 <__alt_data_end+0xf80035b0>
18004368:	04000044 	movi	r16,1
1800436c:	dc000c15 	stw	r16,48(sp)
18004370:	dc000615 	stw	r16,24(sp)
18004374:	dc002215 	stw	r16,136(sp)
18004378:	e0001115 	stw	zero,68(fp)
1800437c:	000b883a 	mov	r5,zero
18004380:	003c6906 	br	18003528 <__alt_data_end+0xf8003528>
18004384:	3021883a 	mov	r16,r6
18004388:	003ffb06 	br	18004378 <__alt_data_end+0xf8004378>
1800438c:	1000021e 	bne	r2,zero,18004398 <_dtoa_r+0x11e0>
18004390:	4200004c 	andi	r8,r8,1
18004394:	403e7d1e 	bne	r8,zero,18003d8c <__alt_data_end+0xf8003d8c>
18004398:	01000c04 	movi	r4,48
1800439c:	00000106 	br	180043a4 <_dtoa_r+0x11ec>
180043a0:	102f883a 	mov	r23,r2
180043a4:	b8bfffc4 	addi	r2,r23,-1
180043a8:	10c00007 	ldb	r3,0(r2)
180043ac:	193ffc26 	beq	r3,r4,180043a0 <__alt_data_end+0xf80043a0>
180043b0:	003e8706 	br	18003dd0 <__alt_data_end+0xf8003dd0>
180043b4:	d8800517 	ldw	r2,20(sp)
180043b8:	00a3c83a 	sub	r17,zero,r2
180043bc:	8800a426 	beq	r17,zero,18004650 <_dtoa_r+0x1498>
180043c0:	888003cc 	andi	r2,r17,15
180043c4:	100490fa 	slli	r2,r2,3
180043c8:	00c60074 	movhi	r3,6145
180043cc:	18f85b04 	addi	r3,r3,-7828
180043d0:	1885883a 	add	r2,r3,r2
180043d4:	11800017 	ldw	r6,0(r2)
180043d8:	11c00117 	ldw	r7,4(r2)
180043dc:	9009883a 	mov	r4,r18
180043e0:	980b883a 	mov	r5,r19
180043e4:	8823d13a 	srai	r17,r17,4
180043e8:	800a9b80 	call	1800a9b8 <__muldf3>
180043ec:	d8800f15 	stw	r2,60(sp)
180043f0:	d8c01015 	stw	r3,64(sp)
180043f4:	8800e826 	beq	r17,zero,18004798 <_dtoa_r+0x15e0>
180043f8:	05060074 	movhi	r20,6145
180043fc:	a5385104 	addi	r20,r20,-7868
18004400:	04000084 	movi	r16,2
18004404:	8980004c 	andi	r6,r17,1
18004408:	1009883a 	mov	r4,r2
1800440c:	8823d07a 	srai	r17,r17,1
18004410:	180b883a 	mov	r5,r3
18004414:	30000426 	beq	r6,zero,18004428 <_dtoa_r+0x1270>
18004418:	a1800017 	ldw	r6,0(r20)
1800441c:	a1c00117 	ldw	r7,4(r20)
18004420:	84000044 	addi	r16,r16,1
18004424:	800a9b80 	call	1800a9b8 <__muldf3>
18004428:	a5000204 	addi	r20,r20,8
1800442c:	883ff51e 	bne	r17,zero,18004404 <__alt_data_end+0xf8004404>
18004430:	d8800f15 	stw	r2,60(sp)
18004434:	d8c01015 	stw	r3,64(sp)
18004438:	003c7606 	br	18003614 <__alt_data_end+0xf8003614>
1800443c:	00c00c04 	movi	r3,48
18004440:	10c00005 	stb	r3,0(r2)
18004444:	d8c00517 	ldw	r3,20(sp)
18004448:	bd3fffc3 	ldbu	r20,-1(r23)
1800444c:	18c00044 	addi	r3,r3,1
18004450:	d8c00515 	stw	r3,20(sp)
18004454:	003db906 	br	18003b3c <__alt_data_end+0xf8003b3c>
18004458:	89400117 	ldw	r5,4(r17)
1800445c:	e009883a 	mov	r4,fp
18004460:	80053540 	call	18005354 <_Balloc>
18004464:	89800417 	ldw	r6,16(r17)
18004468:	89400304 	addi	r5,r17,12
1800446c:	11000304 	addi	r4,r2,12
18004470:	31800084 	addi	r6,r6,2
18004474:	318d883a 	add	r6,r6,r6
18004478:	318d883a 	add	r6,r6,r6
1800447c:	1027883a 	mov	r19,r2
18004480:	800520c0 	call	1800520c <memcpy>
18004484:	01800044 	movi	r6,1
18004488:	980b883a 	mov	r5,r19
1800448c:	e009883a 	mov	r4,fp
18004490:	8005b900 	call	18005b90 <__lshift>
18004494:	1029883a 	mov	r20,r2
18004498:	003ecc06 	br	18003fcc <__alt_data_end+0xf8003fcc>
1800449c:	00800e44 	movi	r2,57
180044a0:	90809026 	beq	r18,r2,180046e4 <_dtoa_r+0x152c>
180044a4:	92000044 	addi	r8,r18,1
180044a8:	003f1f06 	br	18004128 <__alt_data_end+0xf8004128>
180044ac:	9011883a 	mov	r8,r18
180044b0:	8825883a 	mov	r18,r17
180044b4:	a023883a 	mov	r17,r20
180044b8:	003e2906 	br	18003d60 <__alt_data_end+0xf8003d60>
180044bc:	002b883a 	mov	r21,zero
180044c0:	0023883a 	mov	r17,zero
180044c4:	003f5406 	br	18004218 <__alt_data_end+0xf8004218>
180044c8:	61bfffc4 	addi	r6,r12,-1
180044cc:	300490fa 	slli	r2,r6,3
180044d0:	00c60074 	movhi	r3,6145
180044d4:	18f85b04 	addi	r3,r3,-7828
180044d8:	1885883a 	add	r2,r3,r2
180044dc:	11000017 	ldw	r4,0(r2)
180044e0:	11400117 	ldw	r5,4(r2)
180044e4:	d8800717 	ldw	r2,28(sp)
180044e8:	880f883a 	mov	r7,r17
180044ec:	d9801215 	stw	r6,72(sp)
180044f0:	800d883a 	mov	r6,r16
180044f4:	db001615 	stw	r12,88(sp)
180044f8:	15c00044 	addi	r23,r2,1
180044fc:	800a9b80 	call	1800a9b8 <__muldf3>
18004500:	d9401017 	ldw	r5,64(sp)
18004504:	d9000f17 	ldw	r4,60(sp)
18004508:	d8c01515 	stw	r3,84(sp)
1800450c:	d8801415 	stw	r2,80(sp)
18004510:	800bb200 	call	1800bb20 <__fixdfsi>
18004514:	1009883a 	mov	r4,r2
18004518:	1021883a 	mov	r16,r2
1800451c:	800bba00 	call	1800bba0 <__floatsidf>
18004520:	d9000f17 	ldw	r4,60(sp)
18004524:	d9401017 	ldw	r5,64(sp)
18004528:	100d883a 	mov	r6,r2
1800452c:	180f883a 	mov	r7,r3
18004530:	800b2240 	call	1800b224 <__subdf3>
18004534:	1829883a 	mov	r20,r3
18004538:	d8c00717 	ldw	r3,28(sp)
1800453c:	84000c04 	addi	r16,r16,48
18004540:	1023883a 	mov	r17,r2
18004544:	1c000005 	stb	r16,0(r3)
18004548:	db001617 	ldw	r12,88(sp)
1800454c:	00800044 	movi	r2,1
18004550:	60802226 	beq	r12,r2,180045dc <_dtoa_r+0x1424>
18004554:	d9c00717 	ldw	r7,28(sp)
18004558:	8805883a 	mov	r2,r17
1800455c:	b82b883a 	mov	r21,r23
18004560:	3b19883a 	add	r12,r7,r12
18004564:	6023883a 	mov	r17,r12
18004568:	a007883a 	mov	r3,r20
1800456c:	dc800f15 	stw	r18,60(sp)
18004570:	000d883a 	mov	r6,zero
18004574:	01d00934 	movhi	r7,16420
18004578:	1009883a 	mov	r4,r2
1800457c:	180b883a 	mov	r5,r3
18004580:	800a9b80 	call	1800a9b8 <__muldf3>
18004584:	180b883a 	mov	r5,r3
18004588:	1009883a 	mov	r4,r2
1800458c:	1829883a 	mov	r20,r3
18004590:	1025883a 	mov	r18,r2
18004594:	800bb200 	call	1800bb20 <__fixdfsi>
18004598:	1009883a 	mov	r4,r2
1800459c:	1021883a 	mov	r16,r2
180045a0:	800bba00 	call	1800bba0 <__floatsidf>
180045a4:	100d883a 	mov	r6,r2
180045a8:	180f883a 	mov	r7,r3
180045ac:	9009883a 	mov	r4,r18
180045b0:	a00b883a 	mov	r5,r20
180045b4:	84000c04 	addi	r16,r16,48
180045b8:	800b2240 	call	1800b224 <__subdf3>
180045bc:	ad400044 	addi	r21,r21,1
180045c0:	ac3fffc5 	stb	r16,-1(r21)
180045c4:	ac7fea1e 	bne	r21,r17,18004570 <__alt_data_end+0xf8004570>
180045c8:	1023883a 	mov	r17,r2
180045cc:	d8801217 	ldw	r2,72(sp)
180045d0:	dc800f17 	ldw	r18,60(sp)
180045d4:	1829883a 	mov	r20,r3
180045d8:	b8af883a 	add	r23,r23,r2
180045dc:	d9001417 	ldw	r4,80(sp)
180045e0:	d9401517 	ldw	r5,84(sp)
180045e4:	000d883a 	mov	r6,zero
180045e8:	01cff834 	movhi	r7,16352
180045ec:	80094e40 	call	180094e4 <__adddf3>
180045f0:	880d883a 	mov	r6,r17
180045f4:	a00f883a 	mov	r7,r20
180045f8:	1009883a 	mov	r4,r2
180045fc:	180b883a 	mov	r5,r3
18004600:	800a8c40 	call	1800a8c4 <__ledf2>
18004604:	10003e0e 	bge	r2,zero,18004700 <_dtoa_r+0x1548>
18004608:	d9001317 	ldw	r4,76(sp)
1800460c:	bd3fffc3 	ldbu	r20,-1(r23)
18004610:	d9000515 	stw	r4,20(sp)
18004614:	003d3b06 	br	18003b04 <__alt_data_end+0xf8003b04>
18004618:	0027883a 	mov	r19,zero
1800461c:	003f1b06 	br	1800428c <__alt_data_end+0xf800428c>
18004620:	d8800817 	ldw	r2,32(sp)
18004624:	11e9c83a 	sub	r20,r2,r7
18004628:	0005883a 	mov	r2,zero
1800462c:	003d5406 	br	18003b80 <__alt_data_end+0xf8003b80>
18004630:	00800044 	movi	r2,1
18004634:	003dc706 	br	18003d54 <__alt_data_end+0xf8003d54>
18004638:	d8c00217 	ldw	r3,8(sp)
1800463c:	00800d84 	movi	r2,54
18004640:	dd400a17 	ldw	r21,40(sp)
18004644:	10c5c83a 	sub	r2,r2,r3
18004648:	dd000817 	ldw	r20,32(sp)
1800464c:	003d4c06 	br	18003b80 <__alt_data_end+0xf8003b80>
18004650:	dc800f15 	stw	r18,60(sp)
18004654:	dcc01015 	stw	r19,64(sp)
18004658:	04000084 	movi	r16,2
1800465c:	003bed06 	br	18003614 <__alt_data_end+0xf8003614>
18004660:	d9000617 	ldw	r4,24(sp)
18004664:	203f0d26 	beq	r4,zero,1800429c <__alt_data_end+0xf800429c>
18004668:	d9800c17 	ldw	r6,48(sp)
1800466c:	01bcab0e 	bge	zero,r6,1800391c <__alt_data_end+0xf800391c>
18004670:	d9401017 	ldw	r5,64(sp)
18004674:	d9000f17 	ldw	r4,60(sp)
18004678:	000d883a 	mov	r6,zero
1800467c:	01d00934 	movhi	r7,16420
18004680:	800a9b80 	call	1800a9b8 <__muldf3>
18004684:	81000044 	addi	r4,r16,1
18004688:	d8800f15 	stw	r2,60(sp)
1800468c:	d8c01015 	stw	r3,64(sp)
18004690:	800bba00 	call	1800bba0 <__floatsidf>
18004694:	d9800f17 	ldw	r6,60(sp)
18004698:	d9c01017 	ldw	r7,64(sp)
1800469c:	1009883a 	mov	r4,r2
180046a0:	180b883a 	mov	r5,r3
180046a4:	800a9b80 	call	1800a9b8 <__muldf3>
180046a8:	01d00734 	movhi	r7,16412
180046ac:	000d883a 	mov	r6,zero
180046b0:	1009883a 	mov	r4,r2
180046b4:	180b883a 	mov	r5,r3
180046b8:	80094e40 	call	180094e4 <__adddf3>
180046bc:	d9c00517 	ldw	r7,20(sp)
180046c0:	047f3034 	movhi	r17,64704
180046c4:	1021883a 	mov	r16,r2
180046c8:	39ffffc4 	addi	r7,r7,-1
180046cc:	d9c01315 	stw	r7,76(sp)
180046d0:	1c63883a 	add	r17,r3,r17
180046d4:	db000c17 	ldw	r12,48(sp)
180046d8:	003bea06 	br	18003684 <__alt_data_end+0xf8003684>
180046dc:	dc000915 	stw	r16,36(sp)
180046e0:	003e0e06 	br	18003f1c <__alt_data_end+0xf8003f1c>
180046e4:	01000e44 	movi	r4,57
180046e8:	8825883a 	mov	r18,r17
180046ec:	9dc00044 	addi	r23,r19,1
180046f0:	99000005 	stb	r4,0(r19)
180046f4:	a023883a 	mov	r17,r20
180046f8:	dc000915 	stw	r16,36(sp)
180046fc:	003da406 	br	18003d90 <__alt_data_end+0xf8003d90>
18004700:	d9801417 	ldw	r6,80(sp)
18004704:	d9c01517 	ldw	r7,84(sp)
18004708:	0009883a 	mov	r4,zero
1800470c:	014ff834 	movhi	r5,16352
18004710:	800b2240 	call	1800b224 <__subdf3>
18004714:	880d883a 	mov	r6,r17
18004718:	a00f883a 	mov	r7,r20
1800471c:	1009883a 	mov	r4,r2
18004720:	180b883a 	mov	r5,r3
18004724:	800a7e80 	call	1800a7e8 <__gedf2>
18004728:	00bc7c0e 	bge	zero,r2,1800391c <__alt_data_end+0xf800391c>
1800472c:	01000c04 	movi	r4,48
18004730:	00000106 	br	18004738 <_dtoa_r+0x1580>
18004734:	102f883a 	mov	r23,r2
18004738:	b8bfffc4 	addi	r2,r23,-1
1800473c:	10c00007 	ldb	r3,0(r2)
18004740:	193ffc26 	beq	r3,r4,18004734 <__alt_data_end+0xf8004734>
18004744:	d9801317 	ldw	r6,76(sp)
18004748:	d9800515 	stw	r6,20(sp)
1800474c:	003c4406 	br	18003860 <__alt_data_end+0xf8003860>
18004750:	d9801317 	ldw	r6,76(sp)
18004754:	d9800515 	stw	r6,20(sp)
18004758:	003cea06 	br	18003b04 <__alt_data_end+0xf8003b04>
1800475c:	dd800f17 	ldw	r22,60(sp)
18004760:	dcc01017 	ldw	r19,64(sp)
18004764:	dc801217 	ldw	r18,72(sp)
18004768:	003c6c06 	br	1800391c <__alt_data_end+0xf800391c>
1800476c:	903e031e 	bne	r18,zero,18003f7c <__alt_data_end+0xf8003f7c>
18004770:	003ebb06 	br	18004260 <__alt_data_end+0xf8004260>
18004774:	103e6c1e 	bne	r2,zero,18004128 <__alt_data_end+0xf8004128>
18004778:	4080004c 	andi	r2,r8,1
1800477c:	103e6a26 	beq	r2,zero,18004128 <__alt_data_end+0xf8004128>
18004780:	003e6606 	br	1800411c <__alt_data_end+0xf800411c>
18004784:	d8c00317 	ldw	r3,12(sp)
18004788:	00800084 	movi	r2,2
1800478c:	10c02916 	blt	r2,r3,18004834 <_dtoa_r+0x167c>
18004790:	d9000c17 	ldw	r4,48(sp)
18004794:	003e8806 	br	180041b8 <__alt_data_end+0xf80041b8>
18004798:	04000084 	movi	r16,2
1800479c:	003b9d06 	br	18003614 <__alt_data_end+0xf8003614>
180047a0:	d9001317 	ldw	r4,76(sp)
180047a4:	d9000515 	stw	r4,20(sp)
180047a8:	003cd606 	br	18003b04 <__alt_data_end+0xf8003b04>
180047ac:	d8801317 	ldw	r2,76(sp)
180047b0:	d8800515 	stw	r2,20(sp)
180047b4:	003c2a06 	br	18003860 <__alt_data_end+0xf8003860>
180047b8:	d9800317 	ldw	r6,12(sp)
180047bc:	00800084 	movi	r2,2
180047c0:	11801516 	blt	r2,r6,18004818 <_dtoa_r+0x1660>
180047c4:	d9c00c17 	ldw	r7,48(sp)
180047c8:	d9c00615 	stw	r7,24(sp)
180047cc:	003df706 	br	18003fac <__alt_data_end+0xf8003fac>
180047d0:	193d3926 	beq	r3,r4,18003cb8 <__alt_data_end+0xf8003cb8>
180047d4:	00c00f04 	movi	r3,60
180047d8:	1885c83a 	sub	r2,r3,r2
180047dc:	003ddf06 	br	18003f5c <__alt_data_end+0xf8003f5c>
180047e0:	e009883a 	mov	r4,fp
180047e4:	e0001115 	stw	zero,68(fp)
180047e8:	000b883a 	mov	r5,zero
180047ec:	80053540 	call	18005354 <_Balloc>
180047f0:	d8800715 	stw	r2,28(sp)
180047f4:	d8c00717 	ldw	r3,28(sp)
180047f8:	00bfffc4 	movi	r2,-1
180047fc:	01000044 	movi	r4,1
18004800:	d8800c15 	stw	r2,48(sp)
18004804:	e0c01015 	stw	r3,64(fp)
18004808:	d9000b15 	stw	r4,44(sp)
1800480c:	d8800615 	stw	r2,24(sp)
18004810:	d8002215 	stw	zero,136(sp)
18004814:	003c4106 	br	1800391c <__alt_data_end+0xf800391c>
18004818:	d8c00c17 	ldw	r3,48(sp)
1800481c:	d8c00615 	stw	r3,24(sp)
18004820:	003e7006 	br	180041e4 <__alt_data_end+0xf80041e4>
18004824:	04400044 	movi	r17,1
18004828:	003b2006 	br	180034ac <__alt_data_end+0xf80034ac>
1800482c:	000b883a 	mov	r5,zero
18004830:	003b3d06 	br	18003528 <__alt_data_end+0xf8003528>
18004834:	d8800c17 	ldw	r2,48(sp)
18004838:	d8800615 	stw	r2,24(sp)
1800483c:	003e6906 	br	180041e4 <__alt_data_end+0xf80041e4>

18004840 <_setlocale_r>:
18004840:	30001b26 	beq	r6,zero,180048b0 <_setlocale_r+0x70>
18004844:	01460074 	movhi	r5,6145
18004848:	defffe04 	addi	sp,sp,-8
1800484c:	29784104 	addi	r5,r5,-7932
18004850:	3009883a 	mov	r4,r6
18004854:	dc000015 	stw	r16,0(sp)
18004858:	dfc00115 	stw	ra,4(sp)
1800485c:	3021883a 	mov	r16,r6
18004860:	80064d40 	call	180064d4 <strcmp>
18004864:	1000061e 	bne	r2,zero,18004880 <_setlocale_r+0x40>
18004868:	00860074 	movhi	r2,6145
1800486c:	10b84004 	addi	r2,r2,-7936
18004870:	dfc00117 	ldw	ra,4(sp)
18004874:	dc000017 	ldw	r16,0(sp)
18004878:	dec00204 	addi	sp,sp,8
1800487c:	f800283a 	ret
18004880:	01460074 	movhi	r5,6145
18004884:	29784004 	addi	r5,r5,-7936
18004888:	8009883a 	mov	r4,r16
1800488c:	80064d40 	call	180064d4 <strcmp>
18004890:	103ff526 	beq	r2,zero,18004868 <__alt_data_end+0xf8004868>
18004894:	01460074 	movhi	r5,6145
18004898:	29782b04 	addi	r5,r5,-8020
1800489c:	8009883a 	mov	r4,r16
180048a0:	80064d40 	call	180064d4 <strcmp>
180048a4:	103ff026 	beq	r2,zero,18004868 <__alt_data_end+0xf8004868>
180048a8:	0005883a 	mov	r2,zero
180048ac:	003ff006 	br	18004870 <__alt_data_end+0xf8004870>
180048b0:	00860074 	movhi	r2,6145
180048b4:	10b84004 	addi	r2,r2,-7936
180048b8:	f800283a 	ret

180048bc <__locale_charset>:
180048bc:	00860074 	movhi	r2,6145
180048c0:	10bb0704 	addi	r2,r2,-5092
180048c4:	f800283a 	ret

180048c8 <__locale_mb_cur_max>:
180048c8:	00860074 	movhi	r2,6145
180048cc:	1080a604 	addi	r2,r2,664
180048d0:	10800017 	ldw	r2,0(r2)
180048d4:	f800283a 	ret

180048d8 <__locale_msgcharset>:
180048d8:	00860074 	movhi	r2,6145
180048dc:	10baff04 	addi	r2,r2,-5124
180048e0:	f800283a 	ret

180048e4 <__locale_cjk_lang>:
180048e4:	0005883a 	mov	r2,zero
180048e8:	f800283a 	ret

180048ec <_localeconv_r>:
180048ec:	00860074 	movhi	r2,6145
180048f0:	10bb0f04 	addi	r2,r2,-5060
180048f4:	f800283a 	ret

180048f8 <setlocale>:
180048f8:	00860074 	movhi	r2,6145
180048fc:	1080a504 	addi	r2,r2,660
18004900:	280d883a 	mov	r6,r5
18004904:	200b883a 	mov	r5,r4
18004908:	11000017 	ldw	r4,0(r2)
1800490c:	80048401 	jmpi	18004840 <_setlocale_r>

18004910 <localeconv>:
18004910:	00860074 	movhi	r2,6145
18004914:	10bb0f04 	addi	r2,r2,-5060
18004918:	f800283a 	ret

1800491c <_malloc_r>:
1800491c:	defff504 	addi	sp,sp,-44
18004920:	dc800315 	stw	r18,12(sp)
18004924:	dfc00a15 	stw	ra,40(sp)
18004928:	df000915 	stw	fp,36(sp)
1800492c:	ddc00815 	stw	r23,32(sp)
18004930:	dd800715 	stw	r22,28(sp)
18004934:	dd400615 	stw	r21,24(sp)
18004938:	dd000515 	stw	r20,20(sp)
1800493c:	dcc00415 	stw	r19,16(sp)
18004940:	dc400215 	stw	r17,8(sp)
18004944:	dc000115 	stw	r16,4(sp)
18004948:	288002c4 	addi	r2,r5,11
1800494c:	00c00584 	movi	r3,22
18004950:	2025883a 	mov	r18,r4
18004954:	18807f2e 	bgeu	r3,r2,18004b54 <_malloc_r+0x238>
18004958:	047ffe04 	movi	r17,-8
1800495c:	1462703a 	and	r17,r2,r17
18004960:	8800a316 	blt	r17,zero,18004bf0 <_malloc_r+0x2d4>
18004964:	8940a236 	bltu	r17,r5,18004bf0 <_malloc_r+0x2d4>
18004968:	800bef00 	call	1800bef0 <__malloc_lock>
1800496c:	00807dc4 	movi	r2,503
18004970:	1441e92e 	bgeu	r2,r17,18005118 <_malloc_r+0x7fc>
18004974:	8804d27a 	srli	r2,r17,9
18004978:	1000a126 	beq	r2,zero,18004c00 <_malloc_r+0x2e4>
1800497c:	00c00104 	movi	r3,4
18004980:	18811e36 	bltu	r3,r2,18004dfc <_malloc_r+0x4e0>
18004984:	8804d1ba 	srli	r2,r17,6
18004988:	12000e44 	addi	r8,r2,57
1800498c:	11c00e04 	addi	r7,r2,56
18004990:	4209883a 	add	r4,r8,r8
18004994:	04c60074 	movhi	r19,6145
18004998:	2109883a 	add	r4,r4,r4
1800499c:	9cfb1d04 	addi	r19,r19,-5004
180049a0:	2109883a 	add	r4,r4,r4
180049a4:	9909883a 	add	r4,r19,r4
180049a8:	24000117 	ldw	r16,4(r4)
180049ac:	213ffe04 	addi	r4,r4,-8
180049b0:	24009726 	beq	r4,r16,18004c10 <_malloc_r+0x2f4>
180049b4:	80800117 	ldw	r2,4(r16)
180049b8:	01bfff04 	movi	r6,-4
180049bc:	014003c4 	movi	r5,15
180049c0:	1184703a 	and	r2,r2,r6
180049c4:	1447c83a 	sub	r3,r2,r17
180049c8:	28c00716 	blt	r5,r3,180049e8 <_malloc_r+0xcc>
180049cc:	1800920e 	bge	r3,zero,18004c18 <_malloc_r+0x2fc>
180049d0:	84000317 	ldw	r16,12(r16)
180049d4:	24008e26 	beq	r4,r16,18004c10 <_malloc_r+0x2f4>
180049d8:	80800117 	ldw	r2,4(r16)
180049dc:	1184703a 	and	r2,r2,r6
180049e0:	1447c83a 	sub	r3,r2,r17
180049e4:	28fff90e 	bge	r5,r3,180049cc <__alt_data_end+0xf80049cc>
180049e8:	3809883a 	mov	r4,r7
180049ec:	01860074 	movhi	r6,6145
180049f0:	9c000417 	ldw	r16,16(r19)
180049f4:	31bb1d04 	addi	r6,r6,-5004
180049f8:	32000204 	addi	r8,r6,8
180049fc:	82013426 	beq	r16,r8,18004ed0 <_malloc_r+0x5b4>
18004a00:	80c00117 	ldw	r3,4(r16)
18004a04:	00bfff04 	movi	r2,-4
18004a08:	188e703a 	and	r7,r3,r2
18004a0c:	3c45c83a 	sub	r2,r7,r17
18004a10:	00c003c4 	movi	r3,15
18004a14:	18811f16 	blt	r3,r2,18004e94 <_malloc_r+0x578>
18004a18:	32000515 	stw	r8,20(r6)
18004a1c:	32000415 	stw	r8,16(r6)
18004a20:	10007f0e 	bge	r2,zero,18004c20 <_malloc_r+0x304>
18004a24:	00807fc4 	movi	r2,511
18004a28:	11c0fd36 	bltu	r2,r7,18004e20 <_malloc_r+0x504>
18004a2c:	3806d0fa 	srli	r3,r7,3
18004a30:	01c00044 	movi	r7,1
18004a34:	30800117 	ldw	r2,4(r6)
18004a38:	19400044 	addi	r5,r3,1
18004a3c:	294b883a 	add	r5,r5,r5
18004a40:	1807d0ba 	srai	r3,r3,2
18004a44:	294b883a 	add	r5,r5,r5
18004a48:	294b883a 	add	r5,r5,r5
18004a4c:	298b883a 	add	r5,r5,r6
18004a50:	38c6983a 	sll	r3,r7,r3
18004a54:	29c00017 	ldw	r7,0(r5)
18004a58:	2a7ffe04 	addi	r9,r5,-8
18004a5c:	1886b03a 	or	r3,r3,r2
18004a60:	82400315 	stw	r9,12(r16)
18004a64:	81c00215 	stw	r7,8(r16)
18004a68:	30c00115 	stw	r3,4(r6)
18004a6c:	2c000015 	stw	r16,0(r5)
18004a70:	3c000315 	stw	r16,12(r7)
18004a74:	2005d0ba 	srai	r2,r4,2
18004a78:	01400044 	movi	r5,1
18004a7c:	288a983a 	sll	r5,r5,r2
18004a80:	19406f36 	bltu	r3,r5,18004c40 <_malloc_r+0x324>
18004a84:	28c4703a 	and	r2,r5,r3
18004a88:	10000a1e 	bne	r2,zero,18004ab4 <_malloc_r+0x198>
18004a8c:	00bfff04 	movi	r2,-4
18004a90:	294b883a 	add	r5,r5,r5
18004a94:	2088703a 	and	r4,r4,r2
18004a98:	28c4703a 	and	r2,r5,r3
18004a9c:	21000104 	addi	r4,r4,4
18004aa0:	1000041e 	bne	r2,zero,18004ab4 <_malloc_r+0x198>
18004aa4:	294b883a 	add	r5,r5,r5
18004aa8:	28c4703a 	and	r2,r5,r3
18004aac:	21000104 	addi	r4,r4,4
18004ab0:	103ffc26 	beq	r2,zero,18004aa4 <__alt_data_end+0xf8004aa4>
18004ab4:	02bfff04 	movi	r10,-4
18004ab8:	024003c4 	movi	r9,15
18004abc:	21800044 	addi	r6,r4,1
18004ac0:	318d883a 	add	r6,r6,r6
18004ac4:	318d883a 	add	r6,r6,r6
18004ac8:	318d883a 	add	r6,r6,r6
18004acc:	998d883a 	add	r6,r19,r6
18004ad0:	333ffe04 	addi	r12,r6,-8
18004ad4:	2017883a 	mov	r11,r4
18004ad8:	31800104 	addi	r6,r6,4
18004adc:	34000017 	ldw	r16,0(r6)
18004ae0:	31fffd04 	addi	r7,r6,-12
18004ae4:	81c0041e 	bne	r16,r7,18004af8 <_malloc_r+0x1dc>
18004ae8:	0000fb06 	br	18004ed8 <_malloc_r+0x5bc>
18004aec:	1801030e 	bge	r3,zero,18004efc <_malloc_r+0x5e0>
18004af0:	84000317 	ldw	r16,12(r16)
18004af4:	81c0f826 	beq	r16,r7,18004ed8 <_malloc_r+0x5bc>
18004af8:	80800117 	ldw	r2,4(r16)
18004afc:	1284703a 	and	r2,r2,r10
18004b00:	1447c83a 	sub	r3,r2,r17
18004b04:	48fff90e 	bge	r9,r3,18004aec <__alt_data_end+0xf8004aec>
18004b08:	80800317 	ldw	r2,12(r16)
18004b0c:	81000217 	ldw	r4,8(r16)
18004b10:	89400054 	ori	r5,r17,1
18004b14:	81400115 	stw	r5,4(r16)
18004b18:	20800315 	stw	r2,12(r4)
18004b1c:	11000215 	stw	r4,8(r2)
18004b20:	8463883a 	add	r17,r16,r17
18004b24:	9c400515 	stw	r17,20(r19)
18004b28:	9c400415 	stw	r17,16(r19)
18004b2c:	18800054 	ori	r2,r3,1
18004b30:	88800115 	stw	r2,4(r17)
18004b34:	8a000315 	stw	r8,12(r17)
18004b38:	8a000215 	stw	r8,8(r17)
18004b3c:	88e3883a 	add	r17,r17,r3
18004b40:	88c00015 	stw	r3,0(r17)
18004b44:	9009883a 	mov	r4,r18
18004b48:	800bf140 	call	1800bf14 <__malloc_unlock>
18004b4c:	80800204 	addi	r2,r16,8
18004b50:	00001b06 	br	18004bc0 <_malloc_r+0x2a4>
18004b54:	04400404 	movi	r17,16
18004b58:	89402536 	bltu	r17,r5,18004bf0 <_malloc_r+0x2d4>
18004b5c:	800bef00 	call	1800bef0 <__malloc_lock>
18004b60:	00800184 	movi	r2,6
18004b64:	01000084 	movi	r4,2
18004b68:	04c60074 	movhi	r19,6145
18004b6c:	1085883a 	add	r2,r2,r2
18004b70:	9cfb1d04 	addi	r19,r19,-5004
18004b74:	1085883a 	add	r2,r2,r2
18004b78:	9885883a 	add	r2,r19,r2
18004b7c:	14000117 	ldw	r16,4(r2)
18004b80:	10fffe04 	addi	r3,r2,-8
18004b84:	80c0d926 	beq	r16,r3,18004eec <_malloc_r+0x5d0>
18004b88:	80c00117 	ldw	r3,4(r16)
18004b8c:	81000317 	ldw	r4,12(r16)
18004b90:	00bfff04 	movi	r2,-4
18004b94:	1884703a 	and	r2,r3,r2
18004b98:	81400217 	ldw	r5,8(r16)
18004b9c:	8085883a 	add	r2,r16,r2
18004ba0:	10c00117 	ldw	r3,4(r2)
18004ba4:	29000315 	stw	r4,12(r5)
18004ba8:	21400215 	stw	r5,8(r4)
18004bac:	18c00054 	ori	r3,r3,1
18004bb0:	10c00115 	stw	r3,4(r2)
18004bb4:	9009883a 	mov	r4,r18
18004bb8:	800bf140 	call	1800bf14 <__malloc_unlock>
18004bbc:	80800204 	addi	r2,r16,8
18004bc0:	dfc00a17 	ldw	ra,40(sp)
18004bc4:	df000917 	ldw	fp,36(sp)
18004bc8:	ddc00817 	ldw	r23,32(sp)
18004bcc:	dd800717 	ldw	r22,28(sp)
18004bd0:	dd400617 	ldw	r21,24(sp)
18004bd4:	dd000517 	ldw	r20,20(sp)
18004bd8:	dcc00417 	ldw	r19,16(sp)
18004bdc:	dc800317 	ldw	r18,12(sp)
18004be0:	dc400217 	ldw	r17,8(sp)
18004be4:	dc000117 	ldw	r16,4(sp)
18004be8:	dec00b04 	addi	sp,sp,44
18004bec:	f800283a 	ret
18004bf0:	00800304 	movi	r2,12
18004bf4:	90800015 	stw	r2,0(r18)
18004bf8:	0005883a 	mov	r2,zero
18004bfc:	003ff006 	br	18004bc0 <__alt_data_end+0xf8004bc0>
18004c00:	01002004 	movi	r4,128
18004c04:	02001004 	movi	r8,64
18004c08:	01c00fc4 	movi	r7,63
18004c0c:	003f6106 	br	18004994 <__alt_data_end+0xf8004994>
18004c10:	4009883a 	mov	r4,r8
18004c14:	003f7506 	br	180049ec <__alt_data_end+0xf80049ec>
18004c18:	81000317 	ldw	r4,12(r16)
18004c1c:	003fde06 	br	18004b98 <__alt_data_end+0xf8004b98>
18004c20:	81c5883a 	add	r2,r16,r7
18004c24:	11400117 	ldw	r5,4(r2)
18004c28:	9009883a 	mov	r4,r18
18004c2c:	29400054 	ori	r5,r5,1
18004c30:	11400115 	stw	r5,4(r2)
18004c34:	800bf140 	call	1800bf14 <__malloc_unlock>
18004c38:	80800204 	addi	r2,r16,8
18004c3c:	003fe006 	br	18004bc0 <__alt_data_end+0xf8004bc0>
18004c40:	9c000217 	ldw	r16,8(r19)
18004c44:	00bfff04 	movi	r2,-4
18004c48:	85800117 	ldw	r22,4(r16)
18004c4c:	b0ac703a 	and	r22,r22,r2
18004c50:	b4400336 	bltu	r22,r17,18004c60 <_malloc_r+0x344>
18004c54:	b445c83a 	sub	r2,r22,r17
18004c58:	00c003c4 	movi	r3,15
18004c5c:	18805d16 	blt	r3,r2,18004dd4 <_malloc_r+0x4b8>
18004c60:	05c60074 	movhi	r23,6145
18004c64:	00860074 	movhi	r2,6145
18004c68:	10888904 	addi	r2,r2,8740
18004c6c:	bdc0a704 	addi	r23,r23,668
18004c70:	15400017 	ldw	r21,0(r2)
18004c74:	b8c00017 	ldw	r3,0(r23)
18004c78:	00bfffc4 	movi	r2,-1
18004c7c:	858d883a 	add	r6,r16,r22
18004c80:	8d6b883a 	add	r21,r17,r21
18004c84:	1880ea26 	beq	r3,r2,18005030 <_malloc_r+0x714>
18004c88:	ad4403c4 	addi	r21,r21,4111
18004c8c:	00bc0004 	movi	r2,-4096
18004c90:	a8aa703a 	and	r21,r21,r2
18004c94:	a80b883a 	mov	r5,r21
18004c98:	9009883a 	mov	r4,r18
18004c9c:	d9800015 	stw	r6,0(sp)
18004ca0:	80064800 	call	18006480 <_sbrk_r>
18004ca4:	1029883a 	mov	r20,r2
18004ca8:	00bfffc4 	movi	r2,-1
18004cac:	d9800017 	ldw	r6,0(sp)
18004cb0:	a080e826 	beq	r20,r2,18005054 <_malloc_r+0x738>
18004cb4:	a180a636 	bltu	r20,r6,18004f50 <_malloc_r+0x634>
18004cb8:	07060074 	movhi	fp,6145
18004cbc:	e7089204 	addi	fp,fp,8776
18004cc0:	e0800017 	ldw	r2,0(fp)
18004cc4:	a887883a 	add	r3,r21,r2
18004cc8:	e0c00015 	stw	r3,0(fp)
18004ccc:	3500e626 	beq	r6,r20,18005068 <_malloc_r+0x74c>
18004cd0:	b9000017 	ldw	r4,0(r23)
18004cd4:	00bfffc4 	movi	r2,-1
18004cd8:	2080ee26 	beq	r4,r2,18005094 <_malloc_r+0x778>
18004cdc:	a185c83a 	sub	r2,r20,r6
18004ce0:	10c5883a 	add	r2,r2,r3
18004ce4:	e0800015 	stw	r2,0(fp)
18004ce8:	a0c001cc 	andi	r3,r20,7
18004cec:	1800bc26 	beq	r3,zero,18004fe0 <_malloc_r+0x6c4>
18004cf0:	a0e9c83a 	sub	r20,r20,r3
18004cf4:	00840204 	movi	r2,4104
18004cf8:	a5000204 	addi	r20,r20,8
18004cfc:	10c7c83a 	sub	r3,r2,r3
18004d00:	a545883a 	add	r2,r20,r21
18004d04:	1083ffcc 	andi	r2,r2,4095
18004d08:	18abc83a 	sub	r21,r3,r2
18004d0c:	a80b883a 	mov	r5,r21
18004d10:	9009883a 	mov	r4,r18
18004d14:	80064800 	call	18006480 <_sbrk_r>
18004d18:	00ffffc4 	movi	r3,-1
18004d1c:	10c0e126 	beq	r2,r3,180050a4 <_malloc_r+0x788>
18004d20:	1505c83a 	sub	r2,r2,r20
18004d24:	1545883a 	add	r2,r2,r21
18004d28:	10800054 	ori	r2,r2,1
18004d2c:	e0c00017 	ldw	r3,0(fp)
18004d30:	9d000215 	stw	r20,8(r19)
18004d34:	a0800115 	stw	r2,4(r20)
18004d38:	a8c7883a 	add	r3,r21,r3
18004d3c:	e0c00015 	stw	r3,0(fp)
18004d40:	84c00e26 	beq	r16,r19,18004d7c <_malloc_r+0x460>
18004d44:	018003c4 	movi	r6,15
18004d48:	3580a72e 	bgeu	r6,r22,18004fe8 <_malloc_r+0x6cc>
18004d4c:	81400117 	ldw	r5,4(r16)
18004d50:	013ffe04 	movi	r4,-8
18004d54:	b0bffd04 	addi	r2,r22,-12
18004d58:	1104703a 	and	r2,r2,r4
18004d5c:	2900004c 	andi	r4,r5,1
18004d60:	2088b03a 	or	r4,r4,r2
18004d64:	81000115 	stw	r4,4(r16)
18004d68:	01400144 	movi	r5,5
18004d6c:	8089883a 	add	r4,r16,r2
18004d70:	21400115 	stw	r5,4(r4)
18004d74:	21400215 	stw	r5,8(r4)
18004d78:	3080cd36 	bltu	r6,r2,180050b0 <_malloc_r+0x794>
18004d7c:	00860074 	movhi	r2,6145
18004d80:	10888804 	addi	r2,r2,8736
18004d84:	11000017 	ldw	r4,0(r2)
18004d88:	20c0012e 	bgeu	r4,r3,18004d90 <_malloc_r+0x474>
18004d8c:	10c00015 	stw	r3,0(r2)
18004d90:	00860074 	movhi	r2,6145
18004d94:	10888704 	addi	r2,r2,8732
18004d98:	11000017 	ldw	r4,0(r2)
18004d9c:	9c000217 	ldw	r16,8(r19)
18004da0:	20c0012e 	bgeu	r4,r3,18004da8 <_malloc_r+0x48c>
18004da4:	10c00015 	stw	r3,0(r2)
18004da8:	80c00117 	ldw	r3,4(r16)
18004dac:	00bfff04 	movi	r2,-4
18004db0:	1886703a 	and	r3,r3,r2
18004db4:	1c45c83a 	sub	r2,r3,r17
18004db8:	1c400236 	bltu	r3,r17,18004dc4 <_malloc_r+0x4a8>
18004dbc:	00c003c4 	movi	r3,15
18004dc0:	18800416 	blt	r3,r2,18004dd4 <_malloc_r+0x4b8>
18004dc4:	9009883a 	mov	r4,r18
18004dc8:	800bf140 	call	1800bf14 <__malloc_unlock>
18004dcc:	0005883a 	mov	r2,zero
18004dd0:	003f7b06 	br	18004bc0 <__alt_data_end+0xf8004bc0>
18004dd4:	88c00054 	ori	r3,r17,1
18004dd8:	80c00115 	stw	r3,4(r16)
18004ddc:	8463883a 	add	r17,r16,r17
18004de0:	10800054 	ori	r2,r2,1
18004de4:	9c400215 	stw	r17,8(r19)
18004de8:	88800115 	stw	r2,4(r17)
18004dec:	9009883a 	mov	r4,r18
18004df0:	800bf140 	call	1800bf14 <__malloc_unlock>
18004df4:	80800204 	addi	r2,r16,8
18004df8:	003f7106 	br	18004bc0 <__alt_data_end+0xf8004bc0>
18004dfc:	00c00504 	movi	r3,20
18004e00:	18804a2e 	bgeu	r3,r2,18004f2c <_malloc_r+0x610>
18004e04:	00c01504 	movi	r3,84
18004e08:	18806e36 	bltu	r3,r2,18004fc4 <_malloc_r+0x6a8>
18004e0c:	8804d33a 	srli	r2,r17,12
18004e10:	12001bc4 	addi	r8,r2,111
18004e14:	11c01b84 	addi	r7,r2,110
18004e18:	4209883a 	add	r4,r8,r8
18004e1c:	003edd06 	br	18004994 <__alt_data_end+0xf8004994>
18004e20:	3804d27a 	srli	r2,r7,9
18004e24:	00c00104 	movi	r3,4
18004e28:	1880442e 	bgeu	r3,r2,18004f3c <_malloc_r+0x620>
18004e2c:	00c00504 	movi	r3,20
18004e30:	18808136 	bltu	r3,r2,18005038 <_malloc_r+0x71c>
18004e34:	11401704 	addi	r5,r2,92
18004e38:	10c016c4 	addi	r3,r2,91
18004e3c:	294b883a 	add	r5,r5,r5
18004e40:	294b883a 	add	r5,r5,r5
18004e44:	294b883a 	add	r5,r5,r5
18004e48:	994b883a 	add	r5,r19,r5
18004e4c:	28800017 	ldw	r2,0(r5)
18004e50:	01860074 	movhi	r6,6145
18004e54:	297ffe04 	addi	r5,r5,-8
18004e58:	31bb1d04 	addi	r6,r6,-5004
18004e5c:	28806526 	beq	r5,r2,18004ff4 <_malloc_r+0x6d8>
18004e60:	01bfff04 	movi	r6,-4
18004e64:	10c00117 	ldw	r3,4(r2)
18004e68:	1986703a 	and	r3,r3,r6
18004e6c:	38c0022e 	bgeu	r7,r3,18004e78 <_malloc_r+0x55c>
18004e70:	10800217 	ldw	r2,8(r2)
18004e74:	28bffb1e 	bne	r5,r2,18004e64 <__alt_data_end+0xf8004e64>
18004e78:	11400317 	ldw	r5,12(r2)
18004e7c:	98c00117 	ldw	r3,4(r19)
18004e80:	81400315 	stw	r5,12(r16)
18004e84:	80800215 	stw	r2,8(r16)
18004e88:	2c000215 	stw	r16,8(r5)
18004e8c:	14000315 	stw	r16,12(r2)
18004e90:	003ef806 	br	18004a74 <__alt_data_end+0xf8004a74>
18004e94:	88c00054 	ori	r3,r17,1
18004e98:	80c00115 	stw	r3,4(r16)
18004e9c:	8463883a 	add	r17,r16,r17
18004ea0:	34400515 	stw	r17,20(r6)
18004ea4:	34400415 	stw	r17,16(r6)
18004ea8:	10c00054 	ori	r3,r2,1
18004eac:	8a000315 	stw	r8,12(r17)
18004eb0:	8a000215 	stw	r8,8(r17)
18004eb4:	88c00115 	stw	r3,4(r17)
18004eb8:	88a3883a 	add	r17,r17,r2
18004ebc:	88800015 	stw	r2,0(r17)
18004ec0:	9009883a 	mov	r4,r18
18004ec4:	800bf140 	call	1800bf14 <__malloc_unlock>
18004ec8:	80800204 	addi	r2,r16,8
18004ecc:	003f3c06 	br	18004bc0 <__alt_data_end+0xf8004bc0>
18004ed0:	30c00117 	ldw	r3,4(r6)
18004ed4:	003ee706 	br	18004a74 <__alt_data_end+0xf8004a74>
18004ed8:	5ac00044 	addi	r11,r11,1
18004edc:	588000cc 	andi	r2,r11,3
18004ee0:	31800204 	addi	r6,r6,8
18004ee4:	103efd1e 	bne	r2,zero,18004adc <__alt_data_end+0xf8004adc>
18004ee8:	00002406 	br	18004f7c <_malloc_r+0x660>
18004eec:	14000317 	ldw	r16,12(r2)
18004ef0:	143f251e 	bne	r2,r16,18004b88 <__alt_data_end+0xf8004b88>
18004ef4:	21000084 	addi	r4,r4,2
18004ef8:	003ebc06 	br	180049ec <__alt_data_end+0xf80049ec>
18004efc:	8085883a 	add	r2,r16,r2
18004f00:	10c00117 	ldw	r3,4(r2)
18004f04:	81000317 	ldw	r4,12(r16)
18004f08:	81400217 	ldw	r5,8(r16)
18004f0c:	18c00054 	ori	r3,r3,1
18004f10:	10c00115 	stw	r3,4(r2)
18004f14:	29000315 	stw	r4,12(r5)
18004f18:	21400215 	stw	r5,8(r4)
18004f1c:	9009883a 	mov	r4,r18
18004f20:	800bf140 	call	1800bf14 <__malloc_unlock>
18004f24:	80800204 	addi	r2,r16,8
18004f28:	003f2506 	br	18004bc0 <__alt_data_end+0xf8004bc0>
18004f2c:	12001704 	addi	r8,r2,92
18004f30:	11c016c4 	addi	r7,r2,91
18004f34:	4209883a 	add	r4,r8,r8
18004f38:	003e9606 	br	18004994 <__alt_data_end+0xf8004994>
18004f3c:	3804d1ba 	srli	r2,r7,6
18004f40:	11400e44 	addi	r5,r2,57
18004f44:	10c00e04 	addi	r3,r2,56
18004f48:	294b883a 	add	r5,r5,r5
18004f4c:	003fbc06 	br	18004e40 <__alt_data_end+0xf8004e40>
18004f50:	84ff5926 	beq	r16,r19,18004cb8 <__alt_data_end+0xf8004cb8>
18004f54:	00860074 	movhi	r2,6145
18004f58:	10bb1d04 	addi	r2,r2,-5004
18004f5c:	14000217 	ldw	r16,8(r2)
18004f60:	00bfff04 	movi	r2,-4
18004f64:	80c00117 	ldw	r3,4(r16)
18004f68:	1886703a 	and	r3,r3,r2
18004f6c:	003f9106 	br	18004db4 <__alt_data_end+0xf8004db4>
18004f70:	60800217 	ldw	r2,8(r12)
18004f74:	213fffc4 	addi	r4,r4,-1
18004f78:	1300651e 	bne	r2,r12,18005110 <_malloc_r+0x7f4>
18004f7c:	208000cc 	andi	r2,r4,3
18004f80:	633ffe04 	addi	r12,r12,-8
18004f84:	103ffa1e 	bne	r2,zero,18004f70 <__alt_data_end+0xf8004f70>
18004f88:	98800117 	ldw	r2,4(r19)
18004f8c:	0146303a 	nor	r3,zero,r5
18004f90:	1884703a 	and	r2,r3,r2
18004f94:	98800115 	stw	r2,4(r19)
18004f98:	294b883a 	add	r5,r5,r5
18004f9c:	117f2836 	bltu	r2,r5,18004c40 <__alt_data_end+0xf8004c40>
18004fa0:	283f2726 	beq	r5,zero,18004c40 <__alt_data_end+0xf8004c40>
18004fa4:	2886703a 	and	r3,r5,r2
18004fa8:	5809883a 	mov	r4,r11
18004fac:	183ec31e 	bne	r3,zero,18004abc <__alt_data_end+0xf8004abc>
18004fb0:	294b883a 	add	r5,r5,r5
18004fb4:	2886703a 	and	r3,r5,r2
18004fb8:	21000104 	addi	r4,r4,4
18004fbc:	183ffc26 	beq	r3,zero,18004fb0 <__alt_data_end+0xf8004fb0>
18004fc0:	003ebe06 	br	18004abc <__alt_data_end+0xf8004abc>
18004fc4:	00c05504 	movi	r3,340
18004fc8:	18801236 	bltu	r3,r2,18005014 <_malloc_r+0x6f8>
18004fcc:	8804d3fa 	srli	r2,r17,15
18004fd0:	12001e04 	addi	r8,r2,120
18004fd4:	11c01dc4 	addi	r7,r2,119
18004fd8:	4209883a 	add	r4,r8,r8
18004fdc:	003e6d06 	br	18004994 <__alt_data_end+0xf8004994>
18004fe0:	00c40004 	movi	r3,4096
18004fe4:	003f4606 	br	18004d00 <__alt_data_end+0xf8004d00>
18004fe8:	00800044 	movi	r2,1
18004fec:	a0800115 	stw	r2,4(r20)
18004ff0:	003f7406 	br	18004dc4 <__alt_data_end+0xf8004dc4>
18004ff4:	1805d0ba 	srai	r2,r3,2
18004ff8:	01c00044 	movi	r7,1
18004ffc:	30c00117 	ldw	r3,4(r6)
18005000:	388e983a 	sll	r7,r7,r2
18005004:	2805883a 	mov	r2,r5
18005008:	38c6b03a 	or	r3,r7,r3
1800500c:	30c00115 	stw	r3,4(r6)
18005010:	003f9b06 	br	18004e80 <__alt_data_end+0xf8004e80>
18005014:	00c15504 	movi	r3,1364
18005018:	18801a36 	bltu	r3,r2,18005084 <_malloc_r+0x768>
1800501c:	8804d4ba 	srli	r2,r17,18
18005020:	12001f44 	addi	r8,r2,125
18005024:	11c01f04 	addi	r7,r2,124
18005028:	4209883a 	add	r4,r8,r8
1800502c:	003e5906 	br	18004994 <__alt_data_end+0xf8004994>
18005030:	ad400404 	addi	r21,r21,16
18005034:	003f1706 	br	18004c94 <__alt_data_end+0xf8004c94>
18005038:	00c01504 	movi	r3,84
1800503c:	18802336 	bltu	r3,r2,180050cc <_malloc_r+0x7b0>
18005040:	3804d33a 	srli	r2,r7,12
18005044:	11401bc4 	addi	r5,r2,111
18005048:	10c01b84 	addi	r3,r2,110
1800504c:	294b883a 	add	r5,r5,r5
18005050:	003f7b06 	br	18004e40 <__alt_data_end+0xf8004e40>
18005054:	9c000217 	ldw	r16,8(r19)
18005058:	00bfff04 	movi	r2,-4
1800505c:	80c00117 	ldw	r3,4(r16)
18005060:	1886703a 	and	r3,r3,r2
18005064:	003f5306 	br	18004db4 <__alt_data_end+0xf8004db4>
18005068:	3083ffcc 	andi	r2,r6,4095
1800506c:	103f181e 	bne	r2,zero,18004cd0 <__alt_data_end+0xf8004cd0>
18005070:	99000217 	ldw	r4,8(r19)
18005074:	b545883a 	add	r2,r22,r21
18005078:	10800054 	ori	r2,r2,1
1800507c:	20800115 	stw	r2,4(r4)
18005080:	003f3e06 	br	18004d7c <__alt_data_end+0xf8004d7c>
18005084:	01003f84 	movi	r4,254
18005088:	02001fc4 	movi	r8,127
1800508c:	01c01f84 	movi	r7,126
18005090:	003e4006 	br	18004994 <__alt_data_end+0xf8004994>
18005094:	00860074 	movhi	r2,6145
18005098:	1080a704 	addi	r2,r2,668
1800509c:	15000015 	stw	r20,0(r2)
180050a0:	003f1106 	br	18004ce8 <__alt_data_end+0xf8004ce8>
180050a4:	00800044 	movi	r2,1
180050a8:	002b883a 	mov	r21,zero
180050ac:	003f1f06 	br	18004d2c <__alt_data_end+0xf8004d2c>
180050b0:	81400204 	addi	r5,r16,8
180050b4:	9009883a 	mov	r4,r18
180050b8:	8007d200 	call	18007d20 <_free_r>
180050bc:	00860074 	movhi	r2,6145
180050c0:	10889204 	addi	r2,r2,8776
180050c4:	10c00017 	ldw	r3,0(r2)
180050c8:	003f2c06 	br	18004d7c <__alt_data_end+0xf8004d7c>
180050cc:	00c05504 	movi	r3,340
180050d0:	18800536 	bltu	r3,r2,180050e8 <_malloc_r+0x7cc>
180050d4:	3804d3fa 	srli	r2,r7,15
180050d8:	11401e04 	addi	r5,r2,120
180050dc:	10c01dc4 	addi	r3,r2,119
180050e0:	294b883a 	add	r5,r5,r5
180050e4:	003f5606 	br	18004e40 <__alt_data_end+0xf8004e40>
180050e8:	00c15504 	movi	r3,1364
180050ec:	18800536 	bltu	r3,r2,18005104 <_malloc_r+0x7e8>
180050f0:	3804d4ba 	srli	r2,r7,18
180050f4:	11401f44 	addi	r5,r2,125
180050f8:	10c01f04 	addi	r3,r2,124
180050fc:	294b883a 	add	r5,r5,r5
18005100:	003f4f06 	br	18004e40 <__alt_data_end+0xf8004e40>
18005104:	01403f84 	movi	r5,254
18005108:	00c01f84 	movi	r3,126
1800510c:	003f4c06 	br	18004e40 <__alt_data_end+0xf8004e40>
18005110:	98800117 	ldw	r2,4(r19)
18005114:	003fa006 	br	18004f98 <__alt_data_end+0xf8004f98>
18005118:	8808d0fa 	srli	r4,r17,3
1800511c:	20800044 	addi	r2,r4,1
18005120:	1085883a 	add	r2,r2,r2
18005124:	003e9006 	br	18004b68 <__alt_data_end+0xf8004b68>

18005128 <memchr>:
18005128:	208000cc 	andi	r2,r4,3
1800512c:	280f883a 	mov	r7,r5
18005130:	10003426 	beq	r2,zero,18005204 <memchr+0xdc>
18005134:	30bfffc4 	addi	r2,r6,-1
18005138:	30001a26 	beq	r6,zero,180051a4 <memchr+0x7c>
1800513c:	20c00003 	ldbu	r3,0(r4)
18005140:	29803fcc 	andi	r6,r5,255
18005144:	30c0051e 	bne	r6,r3,1800515c <memchr+0x34>
18005148:	00001806 	br	180051ac <memchr+0x84>
1800514c:	10001526 	beq	r2,zero,180051a4 <memchr+0x7c>
18005150:	20c00003 	ldbu	r3,0(r4)
18005154:	10bfffc4 	addi	r2,r2,-1
18005158:	30c01426 	beq	r6,r3,180051ac <memchr+0x84>
1800515c:	21000044 	addi	r4,r4,1
18005160:	20c000cc 	andi	r3,r4,3
18005164:	183ff91e 	bne	r3,zero,1800514c <__alt_data_end+0xf800514c>
18005168:	020000c4 	movi	r8,3
1800516c:	40801136 	bltu	r8,r2,180051b4 <memchr+0x8c>
18005170:	10000c26 	beq	r2,zero,180051a4 <memchr+0x7c>
18005174:	20c00003 	ldbu	r3,0(r4)
18005178:	29403fcc 	andi	r5,r5,255
1800517c:	28c00b26 	beq	r5,r3,180051ac <memchr+0x84>
18005180:	20c00044 	addi	r3,r4,1
18005184:	39803fcc 	andi	r6,r7,255
18005188:	2089883a 	add	r4,r4,r2
1800518c:	00000306 	br	1800519c <memchr+0x74>
18005190:	18c00044 	addi	r3,r3,1
18005194:	197fffc3 	ldbu	r5,-1(r3)
18005198:	31400526 	beq	r6,r5,180051b0 <memchr+0x88>
1800519c:	1805883a 	mov	r2,r3
180051a0:	20fffb1e 	bne	r4,r3,18005190 <__alt_data_end+0xf8005190>
180051a4:	0005883a 	mov	r2,zero
180051a8:	f800283a 	ret
180051ac:	2005883a 	mov	r2,r4
180051b0:	f800283a 	ret
180051b4:	28c03fcc 	andi	r3,r5,255
180051b8:	1812923a 	slli	r9,r3,8
180051bc:	02ffbff4 	movhi	r11,65279
180051c0:	02a02074 	movhi	r10,32897
180051c4:	48d2b03a 	or	r9,r9,r3
180051c8:	4806943a 	slli	r3,r9,16
180051cc:	5affbfc4 	addi	r11,r11,-257
180051d0:	52a02004 	addi	r10,r10,-32640
180051d4:	48d2b03a 	or	r9,r9,r3
180051d8:	20c00017 	ldw	r3,0(r4)
180051dc:	48c6f03a 	xor	r3,r9,r3
180051e0:	1acd883a 	add	r6,r3,r11
180051e4:	00c6303a 	nor	r3,zero,r3
180051e8:	30c6703a 	and	r3,r6,r3
180051ec:	1a86703a 	and	r3,r3,r10
180051f0:	183fe01e 	bne	r3,zero,18005174 <__alt_data_end+0xf8005174>
180051f4:	10bfff04 	addi	r2,r2,-4
180051f8:	21000104 	addi	r4,r4,4
180051fc:	40bff636 	bltu	r8,r2,180051d8 <__alt_data_end+0xf80051d8>
18005200:	003fdb06 	br	18005170 <__alt_data_end+0xf8005170>
18005204:	3005883a 	mov	r2,r6
18005208:	003fd706 	br	18005168 <__alt_data_end+0xf8005168>

1800520c <memcpy>:
1800520c:	defffd04 	addi	sp,sp,-12
18005210:	dfc00215 	stw	ra,8(sp)
18005214:	dc400115 	stw	r17,4(sp)
18005218:	dc000015 	stw	r16,0(sp)
1800521c:	00c003c4 	movi	r3,15
18005220:	2005883a 	mov	r2,r4
18005224:	1980452e 	bgeu	r3,r6,1800533c <memcpy+0x130>
18005228:	2906b03a 	or	r3,r5,r4
1800522c:	18c000cc 	andi	r3,r3,3
18005230:	1800441e 	bne	r3,zero,18005344 <memcpy+0x138>
18005234:	347ffc04 	addi	r17,r6,-16
18005238:	8822d13a 	srli	r17,r17,4
1800523c:	28c00104 	addi	r3,r5,4
18005240:	23400104 	addi	r13,r4,4
18005244:	8820913a 	slli	r16,r17,4
18005248:	2b000204 	addi	r12,r5,8
1800524c:	22c00204 	addi	r11,r4,8
18005250:	84000504 	addi	r16,r16,20
18005254:	2a800304 	addi	r10,r5,12
18005258:	22400304 	addi	r9,r4,12
1800525c:	2c21883a 	add	r16,r5,r16
18005260:	2811883a 	mov	r8,r5
18005264:	200f883a 	mov	r7,r4
18005268:	41000017 	ldw	r4,0(r8)
1800526c:	1fc00017 	ldw	ra,0(r3)
18005270:	63c00017 	ldw	r15,0(r12)
18005274:	39000015 	stw	r4,0(r7)
18005278:	53800017 	ldw	r14,0(r10)
1800527c:	6fc00015 	stw	ra,0(r13)
18005280:	5bc00015 	stw	r15,0(r11)
18005284:	4b800015 	stw	r14,0(r9)
18005288:	18c00404 	addi	r3,r3,16
1800528c:	39c00404 	addi	r7,r7,16
18005290:	42000404 	addi	r8,r8,16
18005294:	6b400404 	addi	r13,r13,16
18005298:	63000404 	addi	r12,r12,16
1800529c:	5ac00404 	addi	r11,r11,16
180052a0:	52800404 	addi	r10,r10,16
180052a4:	4a400404 	addi	r9,r9,16
180052a8:	1c3fef1e 	bne	r3,r16,18005268 <__alt_data_end+0xf8005268>
180052ac:	89c00044 	addi	r7,r17,1
180052b0:	380e913a 	slli	r7,r7,4
180052b4:	310003cc 	andi	r4,r6,15
180052b8:	02c000c4 	movi	r11,3
180052bc:	11c7883a 	add	r3,r2,r7
180052c0:	29cb883a 	add	r5,r5,r7
180052c4:	5900212e 	bgeu	r11,r4,1800534c <memcpy+0x140>
180052c8:	1813883a 	mov	r9,r3
180052cc:	2811883a 	mov	r8,r5
180052d0:	200f883a 	mov	r7,r4
180052d4:	42800017 	ldw	r10,0(r8)
180052d8:	4a400104 	addi	r9,r9,4
180052dc:	39ffff04 	addi	r7,r7,-4
180052e0:	4abfff15 	stw	r10,-4(r9)
180052e4:	42000104 	addi	r8,r8,4
180052e8:	59fffa36 	bltu	r11,r7,180052d4 <__alt_data_end+0xf80052d4>
180052ec:	213fff04 	addi	r4,r4,-4
180052f0:	2008d0ba 	srli	r4,r4,2
180052f4:	318000cc 	andi	r6,r6,3
180052f8:	21000044 	addi	r4,r4,1
180052fc:	2109883a 	add	r4,r4,r4
18005300:	2109883a 	add	r4,r4,r4
18005304:	1907883a 	add	r3,r3,r4
18005308:	290b883a 	add	r5,r5,r4
1800530c:	30000626 	beq	r6,zero,18005328 <memcpy+0x11c>
18005310:	198d883a 	add	r6,r3,r6
18005314:	29c00003 	ldbu	r7,0(r5)
18005318:	18c00044 	addi	r3,r3,1
1800531c:	29400044 	addi	r5,r5,1
18005320:	19ffffc5 	stb	r7,-1(r3)
18005324:	19bffb1e 	bne	r3,r6,18005314 <__alt_data_end+0xf8005314>
18005328:	dfc00217 	ldw	ra,8(sp)
1800532c:	dc400117 	ldw	r17,4(sp)
18005330:	dc000017 	ldw	r16,0(sp)
18005334:	dec00304 	addi	sp,sp,12
18005338:	f800283a 	ret
1800533c:	2007883a 	mov	r3,r4
18005340:	003ff206 	br	1800530c <__alt_data_end+0xf800530c>
18005344:	2007883a 	mov	r3,r4
18005348:	003ff106 	br	18005310 <__alt_data_end+0xf8005310>
1800534c:	200d883a 	mov	r6,r4
18005350:	003fee06 	br	1800530c <__alt_data_end+0xf800530c>

18005354 <_Balloc>:
18005354:	20801317 	ldw	r2,76(r4)
18005358:	defffc04 	addi	sp,sp,-16
1800535c:	dc400115 	stw	r17,4(sp)
18005360:	dc000015 	stw	r16,0(sp)
18005364:	dfc00315 	stw	ra,12(sp)
18005368:	dc800215 	stw	r18,8(sp)
1800536c:	2023883a 	mov	r17,r4
18005370:	2821883a 	mov	r16,r5
18005374:	10000f26 	beq	r2,zero,180053b4 <_Balloc+0x60>
18005378:	8407883a 	add	r3,r16,r16
1800537c:	18c7883a 	add	r3,r3,r3
18005380:	10c7883a 	add	r3,r2,r3
18005384:	18800017 	ldw	r2,0(r3)
18005388:	10001126 	beq	r2,zero,180053d0 <_Balloc+0x7c>
1800538c:	11000017 	ldw	r4,0(r2)
18005390:	19000015 	stw	r4,0(r3)
18005394:	10000415 	stw	zero,16(r2)
18005398:	10000315 	stw	zero,12(r2)
1800539c:	dfc00317 	ldw	ra,12(sp)
180053a0:	dc800217 	ldw	r18,8(sp)
180053a4:	dc400117 	ldw	r17,4(sp)
180053a8:	dc000017 	ldw	r16,0(sp)
180053ac:	dec00404 	addi	sp,sp,16
180053b0:	f800283a 	ret
180053b4:	01800844 	movi	r6,33
180053b8:	01400104 	movi	r5,4
180053bc:	8007b200 	call	18007b20 <_calloc_r>
180053c0:	88801315 	stw	r2,76(r17)
180053c4:	103fec1e 	bne	r2,zero,18005378 <__alt_data_end+0xf8005378>
180053c8:	0005883a 	mov	r2,zero
180053cc:	003ff306 	br	1800539c <__alt_data_end+0xf800539c>
180053d0:	01400044 	movi	r5,1
180053d4:	2c24983a 	sll	r18,r5,r16
180053d8:	8809883a 	mov	r4,r17
180053dc:	91800144 	addi	r6,r18,5
180053e0:	318d883a 	add	r6,r6,r6
180053e4:	318d883a 	add	r6,r6,r6
180053e8:	8007b200 	call	18007b20 <_calloc_r>
180053ec:	103ff626 	beq	r2,zero,180053c8 <__alt_data_end+0xf80053c8>
180053f0:	14000115 	stw	r16,4(r2)
180053f4:	14800215 	stw	r18,8(r2)
180053f8:	003fe606 	br	18005394 <__alt_data_end+0xf8005394>

180053fc <_Bfree>:
180053fc:	28000826 	beq	r5,zero,18005420 <_Bfree+0x24>
18005400:	28c00117 	ldw	r3,4(r5)
18005404:	20801317 	ldw	r2,76(r4)
18005408:	18c7883a 	add	r3,r3,r3
1800540c:	18c7883a 	add	r3,r3,r3
18005410:	10c5883a 	add	r2,r2,r3
18005414:	10c00017 	ldw	r3,0(r2)
18005418:	28c00015 	stw	r3,0(r5)
1800541c:	11400015 	stw	r5,0(r2)
18005420:	f800283a 	ret

18005424 <__multadd>:
18005424:	defff704 	addi	sp,sp,-36
18005428:	dc800215 	stw	r18,8(sp)
1800542c:	2c800417 	ldw	r18,16(r5)
18005430:	dd800615 	stw	r22,24(sp)
18005434:	dd400515 	stw	r21,20(sp)
18005438:	dd000415 	stw	r20,16(sp)
1800543c:	dcc00315 	stw	r19,12(sp)
18005440:	dc400115 	stw	r17,4(sp)
18005444:	dc000015 	stw	r16,0(sp)
18005448:	dfc00815 	stw	ra,32(sp)
1800544c:	ddc00715 	stw	r23,28(sp)
18005450:	2827883a 	mov	r19,r5
18005454:	2029883a 	mov	r20,r4
18005458:	3023883a 	mov	r17,r6
1800545c:	3821883a 	mov	r16,r7
18005460:	2d400504 	addi	r21,r5,20
18005464:	002d883a 	mov	r22,zero
18005468:	adc00017 	ldw	r23,0(r21)
1800546c:	880b883a 	mov	r5,r17
18005470:	ad400104 	addi	r21,r21,4
18005474:	b93fffcc 	andi	r4,r23,65535
18005478:	8000ad40 	call	18000ad4 <__mulsi3>
1800547c:	b808d43a 	srli	r4,r23,16
18005480:	880b883a 	mov	r5,r17
18005484:	1421883a 	add	r16,r2,r16
18005488:	8000ad40 	call	18000ad4 <__mulsi3>
1800548c:	800ed43a 	srli	r7,r16,16
18005490:	80ffffcc 	andi	r3,r16,65535
18005494:	b5800044 	addi	r22,r22,1
18005498:	11c5883a 	add	r2,r2,r7
1800549c:	100e943a 	slli	r7,r2,16
180054a0:	1020d43a 	srli	r16,r2,16
180054a4:	38c7883a 	add	r3,r7,r3
180054a8:	a8ffff15 	stw	r3,-4(r21)
180054ac:	b4bfee16 	blt	r22,r18,18005468 <__alt_data_end+0xf8005468>
180054b0:	80000926 	beq	r16,zero,180054d8 <__multadd+0xb4>
180054b4:	98800217 	ldw	r2,8(r19)
180054b8:	9080130e 	bge	r18,r2,18005508 <__multadd+0xe4>
180054bc:	90800144 	addi	r2,r18,5
180054c0:	1085883a 	add	r2,r2,r2
180054c4:	1085883a 	add	r2,r2,r2
180054c8:	9885883a 	add	r2,r19,r2
180054cc:	14000015 	stw	r16,0(r2)
180054d0:	94800044 	addi	r18,r18,1
180054d4:	9c800415 	stw	r18,16(r19)
180054d8:	9805883a 	mov	r2,r19
180054dc:	dfc00817 	ldw	ra,32(sp)
180054e0:	ddc00717 	ldw	r23,28(sp)
180054e4:	dd800617 	ldw	r22,24(sp)
180054e8:	dd400517 	ldw	r21,20(sp)
180054ec:	dd000417 	ldw	r20,16(sp)
180054f0:	dcc00317 	ldw	r19,12(sp)
180054f4:	dc800217 	ldw	r18,8(sp)
180054f8:	dc400117 	ldw	r17,4(sp)
180054fc:	dc000017 	ldw	r16,0(sp)
18005500:	dec00904 	addi	sp,sp,36
18005504:	f800283a 	ret
18005508:	99400117 	ldw	r5,4(r19)
1800550c:	a009883a 	mov	r4,r20
18005510:	29400044 	addi	r5,r5,1
18005514:	80053540 	call	18005354 <_Balloc>
18005518:	99800417 	ldw	r6,16(r19)
1800551c:	99400304 	addi	r5,r19,12
18005520:	11000304 	addi	r4,r2,12
18005524:	31800084 	addi	r6,r6,2
18005528:	318d883a 	add	r6,r6,r6
1800552c:	318d883a 	add	r6,r6,r6
18005530:	1023883a 	mov	r17,r2
18005534:	800520c0 	call	1800520c <memcpy>
18005538:	98000a26 	beq	r19,zero,18005564 <__multadd+0x140>
1800553c:	98c00117 	ldw	r3,4(r19)
18005540:	a0801317 	ldw	r2,76(r20)
18005544:	18c7883a 	add	r3,r3,r3
18005548:	18c7883a 	add	r3,r3,r3
1800554c:	10c5883a 	add	r2,r2,r3
18005550:	10c00017 	ldw	r3,0(r2)
18005554:	98c00015 	stw	r3,0(r19)
18005558:	14c00015 	stw	r19,0(r2)
1800555c:	8827883a 	mov	r19,r17
18005560:	003fd606 	br	180054bc <__alt_data_end+0xf80054bc>
18005564:	8827883a 	mov	r19,r17
18005568:	003fd406 	br	180054bc <__alt_data_end+0xf80054bc>

1800556c <__s2b>:
1800556c:	defff904 	addi	sp,sp,-28
18005570:	dc400115 	stw	r17,4(sp)
18005574:	dc000015 	stw	r16,0(sp)
18005578:	2023883a 	mov	r17,r4
1800557c:	2821883a 	mov	r16,r5
18005580:	39000204 	addi	r4,r7,8
18005584:	01400244 	movi	r5,9
18005588:	dcc00315 	stw	r19,12(sp)
1800558c:	dc800215 	stw	r18,8(sp)
18005590:	dfc00615 	stw	ra,24(sp)
18005594:	dd400515 	stw	r21,20(sp)
18005598:	dd000415 	stw	r20,16(sp)
1800559c:	3825883a 	mov	r18,r7
180055a0:	3027883a 	mov	r19,r6
180055a4:	80009200 	call	18000920 <__divsi3>
180055a8:	00c00044 	movi	r3,1
180055ac:	000b883a 	mov	r5,zero
180055b0:	1880030e 	bge	r3,r2,180055c0 <__s2b+0x54>
180055b4:	18c7883a 	add	r3,r3,r3
180055b8:	29400044 	addi	r5,r5,1
180055bc:	18bffd16 	blt	r3,r2,180055b4 <__alt_data_end+0xf80055b4>
180055c0:	8809883a 	mov	r4,r17
180055c4:	80053540 	call	18005354 <_Balloc>
180055c8:	d8c00717 	ldw	r3,28(sp)
180055cc:	10c00515 	stw	r3,20(r2)
180055d0:	00c00044 	movi	r3,1
180055d4:	10c00415 	stw	r3,16(r2)
180055d8:	00c00244 	movi	r3,9
180055dc:	1cc0210e 	bge	r3,r19,18005664 <__s2b+0xf8>
180055e0:	80eb883a 	add	r21,r16,r3
180055e4:	a829883a 	mov	r20,r21
180055e8:	84e1883a 	add	r16,r16,r19
180055ec:	a1c00007 	ldb	r7,0(r20)
180055f0:	01800284 	movi	r6,10
180055f4:	a5000044 	addi	r20,r20,1
180055f8:	100b883a 	mov	r5,r2
180055fc:	39fff404 	addi	r7,r7,-48
18005600:	8809883a 	mov	r4,r17
18005604:	80054240 	call	18005424 <__multadd>
18005608:	a43ff81e 	bne	r20,r16,180055ec <__alt_data_end+0xf80055ec>
1800560c:	ace1883a 	add	r16,r21,r19
18005610:	843ffe04 	addi	r16,r16,-8
18005614:	9c800a0e 	bge	r19,r18,18005640 <__s2b+0xd4>
18005618:	94e5c83a 	sub	r18,r18,r19
1800561c:	84a5883a 	add	r18,r16,r18
18005620:	81c00007 	ldb	r7,0(r16)
18005624:	01800284 	movi	r6,10
18005628:	84000044 	addi	r16,r16,1
1800562c:	100b883a 	mov	r5,r2
18005630:	39fff404 	addi	r7,r7,-48
18005634:	8809883a 	mov	r4,r17
18005638:	80054240 	call	18005424 <__multadd>
1800563c:	84bff81e 	bne	r16,r18,18005620 <__alt_data_end+0xf8005620>
18005640:	dfc00617 	ldw	ra,24(sp)
18005644:	dd400517 	ldw	r21,20(sp)
18005648:	dd000417 	ldw	r20,16(sp)
1800564c:	dcc00317 	ldw	r19,12(sp)
18005650:	dc800217 	ldw	r18,8(sp)
18005654:	dc400117 	ldw	r17,4(sp)
18005658:	dc000017 	ldw	r16,0(sp)
1800565c:	dec00704 	addi	sp,sp,28
18005660:	f800283a 	ret
18005664:	84000284 	addi	r16,r16,10
18005668:	1827883a 	mov	r19,r3
1800566c:	003fe906 	br	18005614 <__alt_data_end+0xf8005614>

18005670 <__hi0bits>:
18005670:	20bfffec 	andhi	r2,r4,65535
18005674:	1000141e 	bne	r2,zero,180056c8 <__hi0bits+0x58>
18005678:	2008943a 	slli	r4,r4,16
1800567c:	00800404 	movi	r2,16
18005680:	20ffc02c 	andhi	r3,r4,65280
18005684:	1800021e 	bne	r3,zero,18005690 <__hi0bits+0x20>
18005688:	2008923a 	slli	r4,r4,8
1800568c:	10800204 	addi	r2,r2,8
18005690:	20fc002c 	andhi	r3,r4,61440
18005694:	1800021e 	bne	r3,zero,180056a0 <__hi0bits+0x30>
18005698:	2008913a 	slli	r4,r4,4
1800569c:	10800104 	addi	r2,r2,4
180056a0:	20f0002c 	andhi	r3,r4,49152
180056a4:	1800031e 	bne	r3,zero,180056b4 <__hi0bits+0x44>
180056a8:	2109883a 	add	r4,r4,r4
180056ac:	10800084 	addi	r2,r2,2
180056b0:	2109883a 	add	r4,r4,r4
180056b4:	20000316 	blt	r4,zero,180056c4 <__hi0bits+0x54>
180056b8:	2110002c 	andhi	r4,r4,16384
180056bc:	2000041e 	bne	r4,zero,180056d0 <__hi0bits+0x60>
180056c0:	00800804 	movi	r2,32
180056c4:	f800283a 	ret
180056c8:	0005883a 	mov	r2,zero
180056cc:	003fec06 	br	18005680 <__alt_data_end+0xf8005680>
180056d0:	10800044 	addi	r2,r2,1
180056d4:	f800283a 	ret

180056d8 <__lo0bits>:
180056d8:	20c00017 	ldw	r3,0(r4)
180056dc:	188001cc 	andi	r2,r3,7
180056e0:	10000826 	beq	r2,zero,18005704 <__lo0bits+0x2c>
180056e4:	1880004c 	andi	r2,r3,1
180056e8:	1000211e 	bne	r2,zero,18005770 <__lo0bits+0x98>
180056ec:	1880008c 	andi	r2,r3,2
180056f0:	1000211e 	bne	r2,zero,18005778 <__lo0bits+0xa0>
180056f4:	1806d0ba 	srli	r3,r3,2
180056f8:	00800084 	movi	r2,2
180056fc:	20c00015 	stw	r3,0(r4)
18005700:	f800283a 	ret
18005704:	18bfffcc 	andi	r2,r3,65535
18005708:	10001326 	beq	r2,zero,18005758 <__lo0bits+0x80>
1800570c:	0005883a 	mov	r2,zero
18005710:	19403fcc 	andi	r5,r3,255
18005714:	2800021e 	bne	r5,zero,18005720 <__lo0bits+0x48>
18005718:	1806d23a 	srli	r3,r3,8
1800571c:	10800204 	addi	r2,r2,8
18005720:	194003cc 	andi	r5,r3,15
18005724:	2800021e 	bne	r5,zero,18005730 <__lo0bits+0x58>
18005728:	1806d13a 	srli	r3,r3,4
1800572c:	10800104 	addi	r2,r2,4
18005730:	194000cc 	andi	r5,r3,3
18005734:	2800021e 	bne	r5,zero,18005740 <__lo0bits+0x68>
18005738:	1806d0ba 	srli	r3,r3,2
1800573c:	10800084 	addi	r2,r2,2
18005740:	1940004c 	andi	r5,r3,1
18005744:	2800081e 	bne	r5,zero,18005768 <__lo0bits+0x90>
18005748:	1806d07a 	srli	r3,r3,1
1800574c:	1800051e 	bne	r3,zero,18005764 <__lo0bits+0x8c>
18005750:	00800804 	movi	r2,32
18005754:	f800283a 	ret
18005758:	1806d43a 	srli	r3,r3,16
1800575c:	00800404 	movi	r2,16
18005760:	003feb06 	br	18005710 <__alt_data_end+0xf8005710>
18005764:	10800044 	addi	r2,r2,1
18005768:	20c00015 	stw	r3,0(r4)
1800576c:	f800283a 	ret
18005770:	0005883a 	mov	r2,zero
18005774:	f800283a 	ret
18005778:	1806d07a 	srli	r3,r3,1
1800577c:	00800044 	movi	r2,1
18005780:	20c00015 	stw	r3,0(r4)
18005784:	f800283a 	ret

18005788 <__i2b>:
18005788:	defffd04 	addi	sp,sp,-12
1800578c:	dc000015 	stw	r16,0(sp)
18005790:	04000044 	movi	r16,1
18005794:	dc400115 	stw	r17,4(sp)
18005798:	2823883a 	mov	r17,r5
1800579c:	800b883a 	mov	r5,r16
180057a0:	dfc00215 	stw	ra,8(sp)
180057a4:	80053540 	call	18005354 <_Balloc>
180057a8:	14400515 	stw	r17,20(r2)
180057ac:	14000415 	stw	r16,16(r2)
180057b0:	dfc00217 	ldw	ra,8(sp)
180057b4:	dc400117 	ldw	r17,4(sp)
180057b8:	dc000017 	ldw	r16,0(sp)
180057bc:	dec00304 	addi	sp,sp,12
180057c0:	f800283a 	ret

180057c4 <__multiply>:
180057c4:	deffef04 	addi	sp,sp,-68
180057c8:	dc400815 	stw	r17,32(sp)
180057cc:	dc000715 	stw	r16,28(sp)
180057d0:	34400417 	ldw	r17,16(r6)
180057d4:	2c000417 	ldw	r16,16(r5)
180057d8:	dd800d15 	stw	r22,52(sp)
180057dc:	dc800915 	stw	r18,36(sp)
180057e0:	dfc01015 	stw	ra,64(sp)
180057e4:	df000f15 	stw	fp,60(sp)
180057e8:	ddc00e15 	stw	r23,56(sp)
180057ec:	dd400c15 	stw	r21,48(sp)
180057f0:	dd000b15 	stw	r20,44(sp)
180057f4:	dcc00a15 	stw	r19,40(sp)
180057f8:	2825883a 	mov	r18,r5
180057fc:	302d883a 	mov	r22,r6
18005800:	8440050e 	bge	r16,r17,18005818 <__multiply+0x54>
18005804:	8007883a 	mov	r3,r16
18005808:	3025883a 	mov	r18,r6
1800580c:	8821883a 	mov	r16,r17
18005810:	282d883a 	mov	r22,r5
18005814:	1823883a 	mov	r17,r3
18005818:	90800217 	ldw	r2,8(r18)
1800581c:	8447883a 	add	r3,r16,r17
18005820:	d8c00215 	stw	r3,8(sp)
18005824:	91400117 	ldw	r5,4(r18)
18005828:	10c0010e 	bge	r2,r3,18005830 <__multiply+0x6c>
1800582c:	29400044 	addi	r5,r5,1
18005830:	80053540 	call	18005354 <_Balloc>
18005834:	d8c00217 	ldw	r3,8(sp)
18005838:	d8800615 	stw	r2,24(sp)
1800583c:	18eb883a 	add	r21,r3,r3
18005840:	ad6b883a 	add	r21,r21,r21
18005844:	10c00504 	addi	r3,r2,20
18005848:	1d6b883a 	add	r21,r3,r21
1800584c:	d8c00115 	stw	r3,4(sp)
18005850:	dd400315 	stw	r21,12(sp)
18005854:	1805883a 	mov	r2,r3
18005858:	1d40042e 	bgeu	r3,r21,1800586c <__multiply+0xa8>
1800585c:	d8c00317 	ldw	r3,12(sp)
18005860:	10000015 	stw	zero,0(r2)
18005864:	10800104 	addi	r2,r2,4
18005868:	10fffc36 	bltu	r2,r3,1800585c <__alt_data_end+0xf800585c>
1800586c:	8c63883a 	add	r17,r17,r17
18005870:	b5800504 	addi	r22,r22,20
18005874:	8c63883a 	add	r17,r17,r17
18005878:	94800504 	addi	r18,r18,20
1800587c:	8421883a 	add	r16,r16,r16
18005880:	b463883a 	add	r17,r22,r17
18005884:	8421883a 	add	r16,r16,r16
18005888:	dd800015 	stw	r22,0(sp)
1800588c:	dc800415 	stw	r18,16(sp)
18005890:	dc400515 	stw	r17,20(sp)
18005894:	9429883a 	add	r20,r18,r16
18005898:	b4404f2e 	bgeu	r22,r17,180059d8 <__multiply+0x214>
1800589c:	d8c00017 	ldw	r3,0(sp)
180058a0:	1c800017 	ldw	r18,0(r3)
180058a4:	947fffcc 	andi	r17,r18,65535
180058a8:	88001e26 	beq	r17,zero,18005924 <__multiply+0x160>
180058ac:	dd800117 	ldw	r22,4(sp)
180058b0:	dd400417 	ldw	r21,16(sp)
180058b4:	0027883a 	mov	r19,zero
180058b8:	ac800017 	ldw	r18,0(r21)
180058bc:	b4000017 	ldw	r16,0(r22)
180058c0:	880b883a 	mov	r5,r17
180058c4:	913fffcc 	andi	r4,r18,65535
180058c8:	8000ad40 	call	18000ad4 <__mulsi3>
180058cc:	9008d43a 	srli	r4,r18,16
180058d0:	84bfffcc 	andi	r18,r16,65535
180058d4:	1485883a 	add	r2,r2,r18
180058d8:	14e5883a 	add	r18,r2,r19
180058dc:	8020d43a 	srli	r16,r16,16
180058e0:	9026d43a 	srli	r19,r18,16
180058e4:	880b883a 	mov	r5,r17
180058e8:	8000ad40 	call	18000ad4 <__mulsi3>
180058ec:	1405883a 	add	r2,r2,r16
180058f0:	14e1883a 	add	r16,r2,r19
180058f4:	90ffffcc 	andi	r3,r18,65535
180058f8:	8024943a 	slli	r18,r16,16
180058fc:	ad400104 	addi	r21,r21,4
18005900:	b005883a 	mov	r2,r22
18005904:	90c6b03a 	or	r3,r18,r3
18005908:	b0c00015 	stw	r3,0(r22)
1800590c:	8026d43a 	srli	r19,r16,16
18005910:	b5800104 	addi	r22,r22,4
18005914:	ad3fe836 	bltu	r21,r20,180058b8 <__alt_data_end+0xf80058b8>
18005918:	d8c00017 	ldw	r3,0(sp)
1800591c:	14c00115 	stw	r19,4(r2)
18005920:	1c800017 	ldw	r18,0(r3)
18005924:	9024d43a 	srli	r18,r18,16
18005928:	90002226 	beq	r18,zero,180059b4 <__multiply+0x1f0>
1800592c:	d8c00117 	ldw	r3,4(sp)
18005930:	dd800417 	ldw	r22,16(sp)
18005934:	002f883a 	mov	r23,zero
18005938:	1f000017 	ldw	fp,0(r3)
1800593c:	1823883a 	mov	r17,r3
18005940:	182b883a 	mov	r21,r3
18005944:	e021883a 	mov	r16,fp
18005948:	00000106 	br	18005950 <__multiply+0x18c>
1800594c:	982b883a 	mov	r21,r19
18005950:	b100000b 	ldhu	r4,0(r22)
18005954:	8020d43a 	srli	r16,r16,16
18005958:	900b883a 	mov	r5,r18
1800595c:	8000ad40 	call	18000ad4 <__mulsi3>
18005960:	1405883a 	add	r2,r2,r16
18005964:	15ef883a 	add	r23,r2,r23
18005968:	b804943a 	slli	r2,r23,16
1800596c:	e0ffffcc 	andi	r3,fp,65535
18005970:	8c400104 	addi	r17,r17,4
18005974:	10c6b03a 	or	r3,r2,r3
18005978:	88ffff15 	stw	r3,-4(r17)
1800597c:	b5800104 	addi	r22,r22,4
18005980:	b13fff17 	ldw	r4,-4(r22)
18005984:	acc00104 	addi	r19,r21,4
18005988:	900b883a 	mov	r5,r18
1800598c:	2008d43a 	srli	r4,r4,16
18005990:	9c000017 	ldw	r16,0(r19)
18005994:	8000ad40 	call	18000ad4 <__mulsi3>
18005998:	b806d43a 	srli	r3,r23,16
1800599c:	813fffcc 	andi	r4,r16,65535
180059a0:	1105883a 	add	r2,r2,r4
180059a4:	10f9883a 	add	fp,r2,r3
180059a8:	e02ed43a 	srli	r23,fp,16
180059ac:	b53fe736 	bltu	r22,r20,1800594c <__alt_data_end+0xf800594c>
180059b0:	af000115 	stw	fp,4(r21)
180059b4:	d8c00017 	ldw	r3,0(sp)
180059b8:	d9000517 	ldw	r4,20(sp)
180059bc:	18c00104 	addi	r3,r3,4
180059c0:	d8c00015 	stw	r3,0(sp)
180059c4:	d8c00117 	ldw	r3,4(sp)
180059c8:	18c00104 	addi	r3,r3,4
180059cc:	d8c00115 	stw	r3,4(sp)
180059d0:	d8c00017 	ldw	r3,0(sp)
180059d4:	193fb136 	bltu	r3,r4,1800589c <__alt_data_end+0xf800589c>
180059d8:	d8c00217 	ldw	r3,8(sp)
180059dc:	00c00c0e 	bge	zero,r3,18005a10 <__multiply+0x24c>
180059e0:	d8c00317 	ldw	r3,12(sp)
180059e4:	18bfff17 	ldw	r2,-4(r3)
180059e8:	1d7fff04 	addi	r21,r3,-4
180059ec:	10000326 	beq	r2,zero,180059fc <__multiply+0x238>
180059f0:	00000706 	br	18005a10 <__multiply+0x24c>
180059f4:	a8800017 	ldw	r2,0(r21)
180059f8:	1000051e 	bne	r2,zero,18005a10 <__multiply+0x24c>
180059fc:	d8c00217 	ldw	r3,8(sp)
18005a00:	ad7fff04 	addi	r21,r21,-4
18005a04:	18ffffc4 	addi	r3,r3,-1
18005a08:	d8c00215 	stw	r3,8(sp)
18005a0c:	183ff91e 	bne	r3,zero,180059f4 <__alt_data_end+0xf80059f4>
18005a10:	d8c00617 	ldw	r3,24(sp)
18005a14:	d9000217 	ldw	r4,8(sp)
18005a18:	1805883a 	mov	r2,r3
18005a1c:	19000415 	stw	r4,16(r3)
18005a20:	dfc01017 	ldw	ra,64(sp)
18005a24:	df000f17 	ldw	fp,60(sp)
18005a28:	ddc00e17 	ldw	r23,56(sp)
18005a2c:	dd800d17 	ldw	r22,52(sp)
18005a30:	dd400c17 	ldw	r21,48(sp)
18005a34:	dd000b17 	ldw	r20,44(sp)
18005a38:	dcc00a17 	ldw	r19,40(sp)
18005a3c:	dc800917 	ldw	r18,36(sp)
18005a40:	dc400817 	ldw	r17,32(sp)
18005a44:	dc000717 	ldw	r16,28(sp)
18005a48:	dec01104 	addi	sp,sp,68
18005a4c:	f800283a 	ret

18005a50 <__pow5mult>:
18005a50:	defffa04 	addi	sp,sp,-24
18005a54:	dcc00315 	stw	r19,12(sp)
18005a58:	dc000015 	stw	r16,0(sp)
18005a5c:	dfc00515 	stw	ra,20(sp)
18005a60:	dd000415 	stw	r20,16(sp)
18005a64:	dc800215 	stw	r18,8(sp)
18005a68:	dc400115 	stw	r17,4(sp)
18005a6c:	308000cc 	andi	r2,r6,3
18005a70:	3021883a 	mov	r16,r6
18005a74:	2027883a 	mov	r19,r4
18005a78:	10002f1e 	bne	r2,zero,18005b38 <__pow5mult+0xe8>
18005a7c:	2825883a 	mov	r18,r5
18005a80:	8021d0ba 	srai	r16,r16,2
18005a84:	80001a26 	beq	r16,zero,18005af0 <__pow5mult+0xa0>
18005a88:	9c401217 	ldw	r17,72(r19)
18005a8c:	8800061e 	bne	r17,zero,18005aa8 <__pow5mult+0x58>
18005a90:	00003406 	br	18005b64 <__pow5mult+0x114>
18005a94:	8021d07a 	srai	r16,r16,1
18005a98:	80001526 	beq	r16,zero,18005af0 <__pow5mult+0xa0>
18005a9c:	88800017 	ldw	r2,0(r17)
18005aa0:	10001c26 	beq	r2,zero,18005b14 <__pow5mult+0xc4>
18005aa4:	1023883a 	mov	r17,r2
18005aa8:	8080004c 	andi	r2,r16,1
18005aac:	103ff926 	beq	r2,zero,18005a94 <__alt_data_end+0xf8005a94>
18005ab0:	880d883a 	mov	r6,r17
18005ab4:	900b883a 	mov	r5,r18
18005ab8:	9809883a 	mov	r4,r19
18005abc:	80057c40 	call	180057c4 <__multiply>
18005ac0:	90001b26 	beq	r18,zero,18005b30 <__pow5mult+0xe0>
18005ac4:	91000117 	ldw	r4,4(r18)
18005ac8:	98c01317 	ldw	r3,76(r19)
18005acc:	8021d07a 	srai	r16,r16,1
18005ad0:	2109883a 	add	r4,r4,r4
18005ad4:	2109883a 	add	r4,r4,r4
18005ad8:	1907883a 	add	r3,r3,r4
18005adc:	19000017 	ldw	r4,0(r3)
18005ae0:	91000015 	stw	r4,0(r18)
18005ae4:	1c800015 	stw	r18,0(r3)
18005ae8:	1025883a 	mov	r18,r2
18005aec:	803feb1e 	bne	r16,zero,18005a9c <__alt_data_end+0xf8005a9c>
18005af0:	9005883a 	mov	r2,r18
18005af4:	dfc00517 	ldw	ra,20(sp)
18005af8:	dd000417 	ldw	r20,16(sp)
18005afc:	dcc00317 	ldw	r19,12(sp)
18005b00:	dc800217 	ldw	r18,8(sp)
18005b04:	dc400117 	ldw	r17,4(sp)
18005b08:	dc000017 	ldw	r16,0(sp)
18005b0c:	dec00604 	addi	sp,sp,24
18005b10:	f800283a 	ret
18005b14:	880d883a 	mov	r6,r17
18005b18:	880b883a 	mov	r5,r17
18005b1c:	9809883a 	mov	r4,r19
18005b20:	80057c40 	call	180057c4 <__multiply>
18005b24:	88800015 	stw	r2,0(r17)
18005b28:	10000015 	stw	zero,0(r2)
18005b2c:	003fdd06 	br	18005aa4 <__alt_data_end+0xf8005aa4>
18005b30:	1025883a 	mov	r18,r2
18005b34:	003fd706 	br	18005a94 <__alt_data_end+0xf8005a94>
18005b38:	10bfffc4 	addi	r2,r2,-1
18005b3c:	1085883a 	add	r2,r2,r2
18005b40:	00c60074 	movhi	r3,6145
18005b44:	18f84404 	addi	r3,r3,-7920
18005b48:	1085883a 	add	r2,r2,r2
18005b4c:	1885883a 	add	r2,r3,r2
18005b50:	11800017 	ldw	r6,0(r2)
18005b54:	000f883a 	mov	r7,zero
18005b58:	80054240 	call	18005424 <__multadd>
18005b5c:	1025883a 	mov	r18,r2
18005b60:	003fc706 	br	18005a80 <__alt_data_end+0xf8005a80>
18005b64:	05000044 	movi	r20,1
18005b68:	a00b883a 	mov	r5,r20
18005b6c:	9809883a 	mov	r4,r19
18005b70:	80053540 	call	18005354 <_Balloc>
18005b74:	1023883a 	mov	r17,r2
18005b78:	00809c44 	movi	r2,625
18005b7c:	88800515 	stw	r2,20(r17)
18005b80:	8d000415 	stw	r20,16(r17)
18005b84:	9c401215 	stw	r17,72(r19)
18005b88:	88000015 	stw	zero,0(r17)
18005b8c:	003fc606 	br	18005aa8 <__alt_data_end+0xf8005aa8>

18005b90 <__lshift>:
18005b90:	defff904 	addi	sp,sp,-28
18005b94:	dd400515 	stw	r21,20(sp)
18005b98:	dcc00315 	stw	r19,12(sp)
18005b9c:	302bd17a 	srai	r21,r6,5
18005ba0:	2cc00417 	ldw	r19,16(r5)
18005ba4:	28800217 	ldw	r2,8(r5)
18005ba8:	dd000415 	stw	r20,16(sp)
18005bac:	ace7883a 	add	r19,r21,r19
18005bb0:	dc800215 	stw	r18,8(sp)
18005bb4:	dc400115 	stw	r17,4(sp)
18005bb8:	dc000015 	stw	r16,0(sp)
18005bbc:	dfc00615 	stw	ra,24(sp)
18005bc0:	9c000044 	addi	r16,r19,1
18005bc4:	2823883a 	mov	r17,r5
18005bc8:	3029883a 	mov	r20,r6
18005bcc:	2025883a 	mov	r18,r4
18005bd0:	29400117 	ldw	r5,4(r5)
18005bd4:	1400030e 	bge	r2,r16,18005be4 <__lshift+0x54>
18005bd8:	1085883a 	add	r2,r2,r2
18005bdc:	29400044 	addi	r5,r5,1
18005be0:	143ffd16 	blt	r2,r16,18005bd8 <__alt_data_end+0xf8005bd8>
18005be4:	9009883a 	mov	r4,r18
18005be8:	80053540 	call	18005354 <_Balloc>
18005bec:	10c00504 	addi	r3,r2,20
18005bf0:	0540070e 	bge	zero,r21,18005c10 <__lshift+0x80>
18005bf4:	ad6b883a 	add	r21,r21,r21
18005bf8:	ad6b883a 	add	r21,r21,r21
18005bfc:	1809883a 	mov	r4,r3
18005c00:	1d47883a 	add	r3,r3,r21
18005c04:	20000015 	stw	zero,0(r4)
18005c08:	21000104 	addi	r4,r4,4
18005c0c:	193ffd1e 	bne	r3,r4,18005c04 <__alt_data_end+0xf8005c04>
18005c10:	8a000417 	ldw	r8,16(r17)
18005c14:	89000504 	addi	r4,r17,20
18005c18:	a18007cc 	andi	r6,r20,31
18005c1c:	4211883a 	add	r8,r8,r8
18005c20:	4211883a 	add	r8,r8,r8
18005c24:	2211883a 	add	r8,r4,r8
18005c28:	30002326 	beq	r6,zero,18005cb8 <__lshift+0x128>
18005c2c:	02400804 	movi	r9,32
18005c30:	4993c83a 	sub	r9,r9,r6
18005c34:	000b883a 	mov	r5,zero
18005c38:	21c00017 	ldw	r7,0(r4)
18005c3c:	1815883a 	mov	r10,r3
18005c40:	18c00104 	addi	r3,r3,4
18005c44:	398e983a 	sll	r7,r7,r6
18005c48:	21000104 	addi	r4,r4,4
18005c4c:	394ab03a 	or	r5,r7,r5
18005c50:	197fff15 	stw	r5,-4(r3)
18005c54:	217fff17 	ldw	r5,-4(r4)
18005c58:	2a4ad83a 	srl	r5,r5,r9
18005c5c:	223ff636 	bltu	r4,r8,18005c38 <__alt_data_end+0xf8005c38>
18005c60:	51400115 	stw	r5,4(r10)
18005c64:	28001a1e 	bne	r5,zero,18005cd0 <__lshift+0x140>
18005c68:	843fffc4 	addi	r16,r16,-1
18005c6c:	14000415 	stw	r16,16(r2)
18005c70:	88000826 	beq	r17,zero,18005c94 <__lshift+0x104>
18005c74:	89000117 	ldw	r4,4(r17)
18005c78:	90c01317 	ldw	r3,76(r18)
18005c7c:	2109883a 	add	r4,r4,r4
18005c80:	2109883a 	add	r4,r4,r4
18005c84:	1907883a 	add	r3,r3,r4
18005c88:	19000017 	ldw	r4,0(r3)
18005c8c:	89000015 	stw	r4,0(r17)
18005c90:	1c400015 	stw	r17,0(r3)
18005c94:	dfc00617 	ldw	ra,24(sp)
18005c98:	dd400517 	ldw	r21,20(sp)
18005c9c:	dd000417 	ldw	r20,16(sp)
18005ca0:	dcc00317 	ldw	r19,12(sp)
18005ca4:	dc800217 	ldw	r18,8(sp)
18005ca8:	dc400117 	ldw	r17,4(sp)
18005cac:	dc000017 	ldw	r16,0(sp)
18005cb0:	dec00704 	addi	sp,sp,28
18005cb4:	f800283a 	ret
18005cb8:	21400017 	ldw	r5,0(r4)
18005cbc:	18c00104 	addi	r3,r3,4
18005cc0:	21000104 	addi	r4,r4,4
18005cc4:	197fff15 	stw	r5,-4(r3)
18005cc8:	223ffb36 	bltu	r4,r8,18005cb8 <__alt_data_end+0xf8005cb8>
18005ccc:	003fe606 	br	18005c68 <__alt_data_end+0xf8005c68>
18005cd0:	9c000084 	addi	r16,r19,2
18005cd4:	003fe406 	br	18005c68 <__alt_data_end+0xf8005c68>

18005cd8 <__mcmp>:
18005cd8:	20800417 	ldw	r2,16(r4)
18005cdc:	28c00417 	ldw	r3,16(r5)
18005ce0:	10c5c83a 	sub	r2,r2,r3
18005ce4:	1000111e 	bne	r2,zero,18005d2c <__mcmp+0x54>
18005ce8:	18c7883a 	add	r3,r3,r3
18005cec:	18c7883a 	add	r3,r3,r3
18005cf0:	21000504 	addi	r4,r4,20
18005cf4:	29400504 	addi	r5,r5,20
18005cf8:	20c5883a 	add	r2,r4,r3
18005cfc:	28cb883a 	add	r5,r5,r3
18005d00:	00000106 	br	18005d08 <__mcmp+0x30>
18005d04:	20800a2e 	bgeu	r4,r2,18005d30 <__mcmp+0x58>
18005d08:	10bfff04 	addi	r2,r2,-4
18005d0c:	297fff04 	addi	r5,r5,-4
18005d10:	11800017 	ldw	r6,0(r2)
18005d14:	28c00017 	ldw	r3,0(r5)
18005d18:	30fffa26 	beq	r6,r3,18005d04 <__alt_data_end+0xf8005d04>
18005d1c:	30c00236 	bltu	r6,r3,18005d28 <__mcmp+0x50>
18005d20:	00800044 	movi	r2,1
18005d24:	f800283a 	ret
18005d28:	00bfffc4 	movi	r2,-1
18005d2c:	f800283a 	ret
18005d30:	0005883a 	mov	r2,zero
18005d34:	f800283a 	ret

18005d38 <__mdiff>:
18005d38:	28c00417 	ldw	r3,16(r5)
18005d3c:	30800417 	ldw	r2,16(r6)
18005d40:	defffa04 	addi	sp,sp,-24
18005d44:	dcc00315 	stw	r19,12(sp)
18005d48:	dc800215 	stw	r18,8(sp)
18005d4c:	dfc00515 	stw	ra,20(sp)
18005d50:	dd000415 	stw	r20,16(sp)
18005d54:	dc400115 	stw	r17,4(sp)
18005d58:	dc000015 	stw	r16,0(sp)
18005d5c:	1887c83a 	sub	r3,r3,r2
18005d60:	2825883a 	mov	r18,r5
18005d64:	3027883a 	mov	r19,r6
18005d68:	1800141e 	bne	r3,zero,18005dbc <__mdiff+0x84>
18005d6c:	1085883a 	add	r2,r2,r2
18005d70:	1085883a 	add	r2,r2,r2
18005d74:	2a000504 	addi	r8,r5,20
18005d78:	34000504 	addi	r16,r6,20
18005d7c:	4087883a 	add	r3,r8,r2
18005d80:	8085883a 	add	r2,r16,r2
18005d84:	00000106 	br	18005d8c <__mdiff+0x54>
18005d88:	40c0592e 	bgeu	r8,r3,18005ef0 <__mdiff+0x1b8>
18005d8c:	18ffff04 	addi	r3,r3,-4
18005d90:	10bfff04 	addi	r2,r2,-4
18005d94:	19c00017 	ldw	r7,0(r3)
18005d98:	11400017 	ldw	r5,0(r2)
18005d9c:	397ffa26 	beq	r7,r5,18005d88 <__alt_data_end+0xf8005d88>
18005da0:	3940592e 	bgeu	r7,r5,18005f08 <__mdiff+0x1d0>
18005da4:	9005883a 	mov	r2,r18
18005da8:	4023883a 	mov	r17,r8
18005dac:	9825883a 	mov	r18,r19
18005db0:	05000044 	movi	r20,1
18005db4:	1027883a 	mov	r19,r2
18005db8:	00000406 	br	18005dcc <__mdiff+0x94>
18005dbc:	18005616 	blt	r3,zero,18005f18 <__mdiff+0x1e0>
18005dc0:	34400504 	addi	r17,r6,20
18005dc4:	2c000504 	addi	r16,r5,20
18005dc8:	0029883a 	mov	r20,zero
18005dcc:	91400117 	ldw	r5,4(r18)
18005dd0:	80053540 	call	18005354 <_Balloc>
18005dd4:	92400417 	ldw	r9,16(r18)
18005dd8:	9b000417 	ldw	r12,16(r19)
18005ddc:	12c00504 	addi	r11,r2,20
18005de0:	4a51883a 	add	r8,r9,r9
18005de4:	6319883a 	add	r12,r12,r12
18005de8:	4211883a 	add	r8,r8,r8
18005dec:	6319883a 	add	r12,r12,r12
18005df0:	15000315 	stw	r20,12(r2)
18005df4:	8211883a 	add	r8,r16,r8
18005df8:	8b19883a 	add	r12,r17,r12
18005dfc:	0007883a 	mov	r3,zero
18005e00:	81400017 	ldw	r5,0(r16)
18005e04:	89c00017 	ldw	r7,0(r17)
18005e08:	59800104 	addi	r6,r11,4
18005e0c:	293fffcc 	andi	r4,r5,65535
18005e10:	20c7883a 	add	r3,r4,r3
18005e14:	393fffcc 	andi	r4,r7,65535
18005e18:	1909c83a 	sub	r4,r3,r4
18005e1c:	280ad43a 	srli	r5,r5,16
18005e20:	380ed43a 	srli	r7,r7,16
18005e24:	2007d43a 	srai	r3,r4,16
18005e28:	213fffcc 	andi	r4,r4,65535
18005e2c:	29cbc83a 	sub	r5,r5,r7
18005e30:	28c7883a 	add	r3,r5,r3
18005e34:	180a943a 	slli	r5,r3,16
18005e38:	8c400104 	addi	r17,r17,4
18005e3c:	84000104 	addi	r16,r16,4
18005e40:	2908b03a 	or	r4,r5,r4
18005e44:	59000015 	stw	r4,0(r11)
18005e48:	1807d43a 	srai	r3,r3,16
18005e4c:	3015883a 	mov	r10,r6
18005e50:	3017883a 	mov	r11,r6
18005e54:	8b3fea36 	bltu	r17,r12,18005e00 <__alt_data_end+0xf8005e00>
18005e58:	8200162e 	bgeu	r16,r8,18005eb4 <__mdiff+0x17c>
18005e5c:	8017883a 	mov	r11,r16
18005e60:	59400017 	ldw	r5,0(r11)
18005e64:	31800104 	addi	r6,r6,4
18005e68:	5ac00104 	addi	r11,r11,4
18005e6c:	293fffcc 	andi	r4,r5,65535
18005e70:	20c7883a 	add	r3,r4,r3
18005e74:	280ed43a 	srli	r7,r5,16
18005e78:	180bd43a 	srai	r5,r3,16
18005e7c:	193fffcc 	andi	r4,r3,65535
18005e80:	3947883a 	add	r3,r7,r5
18005e84:	180a943a 	slli	r5,r3,16
18005e88:	1807d43a 	srai	r3,r3,16
18005e8c:	2908b03a 	or	r4,r5,r4
18005e90:	313fff15 	stw	r4,-4(r6)
18005e94:	5a3ff236 	bltu	r11,r8,18005e60 <__alt_data_end+0xf8005e60>
18005e98:	0406303a 	nor	r3,zero,r16
18005e9c:	1a07883a 	add	r3,r3,r8
18005ea0:	1806d0ba 	srli	r3,r3,2
18005ea4:	18c00044 	addi	r3,r3,1
18005ea8:	18c7883a 	add	r3,r3,r3
18005eac:	18c7883a 	add	r3,r3,r3
18005eb0:	50d5883a 	add	r10,r10,r3
18005eb4:	50ffff04 	addi	r3,r10,-4
18005eb8:	2000041e 	bne	r4,zero,18005ecc <__mdiff+0x194>
18005ebc:	18ffff04 	addi	r3,r3,-4
18005ec0:	19000017 	ldw	r4,0(r3)
18005ec4:	4a7fffc4 	addi	r9,r9,-1
18005ec8:	203ffc26 	beq	r4,zero,18005ebc <__alt_data_end+0xf8005ebc>
18005ecc:	12400415 	stw	r9,16(r2)
18005ed0:	dfc00517 	ldw	ra,20(sp)
18005ed4:	dd000417 	ldw	r20,16(sp)
18005ed8:	dcc00317 	ldw	r19,12(sp)
18005edc:	dc800217 	ldw	r18,8(sp)
18005ee0:	dc400117 	ldw	r17,4(sp)
18005ee4:	dc000017 	ldw	r16,0(sp)
18005ee8:	dec00604 	addi	sp,sp,24
18005eec:	f800283a 	ret
18005ef0:	000b883a 	mov	r5,zero
18005ef4:	80053540 	call	18005354 <_Balloc>
18005ef8:	00c00044 	movi	r3,1
18005efc:	10c00415 	stw	r3,16(r2)
18005f00:	10000515 	stw	zero,20(r2)
18005f04:	003ff206 	br	18005ed0 <__alt_data_end+0xf8005ed0>
18005f08:	8023883a 	mov	r17,r16
18005f0c:	0029883a 	mov	r20,zero
18005f10:	4021883a 	mov	r16,r8
18005f14:	003fad06 	br	18005dcc <__alt_data_end+0xf8005dcc>
18005f18:	9005883a 	mov	r2,r18
18005f1c:	94400504 	addi	r17,r18,20
18005f20:	9c000504 	addi	r16,r19,20
18005f24:	9825883a 	mov	r18,r19
18005f28:	05000044 	movi	r20,1
18005f2c:	1027883a 	mov	r19,r2
18005f30:	003fa606 	br	18005dcc <__alt_data_end+0xf8005dcc>

18005f34 <__ulp>:
18005f34:	295ffc2c 	andhi	r5,r5,32752
18005f38:	00bf3034 	movhi	r2,64704
18005f3c:	2887883a 	add	r3,r5,r2
18005f40:	00c0020e 	bge	zero,r3,18005f4c <__ulp+0x18>
18005f44:	0005883a 	mov	r2,zero
18005f48:	f800283a 	ret
18005f4c:	00c7c83a 	sub	r3,zero,r3
18005f50:	1807d53a 	srai	r3,r3,20
18005f54:	008004c4 	movi	r2,19
18005f58:	10c00b0e 	bge	r2,r3,18005f88 <__ulp+0x54>
18005f5c:	18bffb04 	addi	r2,r3,-20
18005f60:	01000784 	movi	r4,30
18005f64:	0007883a 	mov	r3,zero
18005f68:	20800516 	blt	r4,r2,18005f80 <__ulp+0x4c>
18005f6c:	010007c4 	movi	r4,31
18005f70:	2089c83a 	sub	r4,r4,r2
18005f74:	00800044 	movi	r2,1
18005f78:	1104983a 	sll	r2,r2,r4
18005f7c:	f800283a 	ret
18005f80:	00800044 	movi	r2,1
18005f84:	f800283a 	ret
18005f88:	01400234 	movhi	r5,8
18005f8c:	28c7d83a 	sra	r3,r5,r3
18005f90:	0005883a 	mov	r2,zero
18005f94:	f800283a 	ret

18005f98 <__b2d>:
18005f98:	defffa04 	addi	sp,sp,-24
18005f9c:	dc000015 	stw	r16,0(sp)
18005fa0:	24000417 	ldw	r16,16(r4)
18005fa4:	dc400115 	stw	r17,4(sp)
18005fa8:	24400504 	addi	r17,r4,20
18005fac:	8421883a 	add	r16,r16,r16
18005fb0:	8421883a 	add	r16,r16,r16
18005fb4:	8c21883a 	add	r16,r17,r16
18005fb8:	dc800215 	stw	r18,8(sp)
18005fbc:	84bfff17 	ldw	r18,-4(r16)
18005fc0:	dd000415 	stw	r20,16(sp)
18005fc4:	dcc00315 	stw	r19,12(sp)
18005fc8:	9009883a 	mov	r4,r18
18005fcc:	2829883a 	mov	r20,r5
18005fd0:	dfc00515 	stw	ra,20(sp)
18005fd4:	80056700 	call	18005670 <__hi0bits>
18005fd8:	00c00804 	movi	r3,32
18005fdc:	1889c83a 	sub	r4,r3,r2
18005fe0:	a1000015 	stw	r4,0(r20)
18005fe4:	01000284 	movi	r4,10
18005fe8:	84ffff04 	addi	r19,r16,-4
18005fec:	20801216 	blt	r4,r2,18006038 <__b2d+0xa0>
18005ff0:	018002c4 	movi	r6,11
18005ff4:	308dc83a 	sub	r6,r6,r2
18005ff8:	9186d83a 	srl	r3,r18,r6
18005ffc:	18cffc34 	orhi	r3,r3,16368
18006000:	8cc0212e 	bgeu	r17,r19,18006088 <__b2d+0xf0>
18006004:	813ffe17 	ldw	r4,-8(r16)
18006008:	218cd83a 	srl	r6,r4,r6
1800600c:	10800544 	addi	r2,r2,21
18006010:	9084983a 	sll	r2,r18,r2
18006014:	1184b03a 	or	r2,r2,r6
18006018:	dfc00517 	ldw	ra,20(sp)
1800601c:	dd000417 	ldw	r20,16(sp)
18006020:	dcc00317 	ldw	r19,12(sp)
18006024:	dc800217 	ldw	r18,8(sp)
18006028:	dc400117 	ldw	r17,4(sp)
1800602c:	dc000017 	ldw	r16,0(sp)
18006030:	dec00604 	addi	sp,sp,24
18006034:	f800283a 	ret
18006038:	8cc00f2e 	bgeu	r17,r19,18006078 <__b2d+0xe0>
1800603c:	117ffd44 	addi	r5,r2,-11
18006040:	80bffe17 	ldw	r2,-8(r16)
18006044:	28000e26 	beq	r5,zero,18006080 <__b2d+0xe8>
18006048:	1949c83a 	sub	r4,r3,r5
1800604c:	9164983a 	sll	r18,r18,r5
18006050:	1106d83a 	srl	r3,r2,r4
18006054:	81bffe04 	addi	r6,r16,-8
18006058:	948ffc34 	orhi	r18,r18,16368
1800605c:	90c6b03a 	or	r3,r18,r3
18006060:	89800e2e 	bgeu	r17,r6,1800609c <__b2d+0x104>
18006064:	81bffd17 	ldw	r6,-12(r16)
18006068:	1144983a 	sll	r2,r2,r5
1800606c:	310ad83a 	srl	r5,r6,r4
18006070:	2884b03a 	or	r2,r5,r2
18006074:	003fe806 	br	18006018 <__alt_data_end+0xf8006018>
18006078:	10bffd44 	addi	r2,r2,-11
1800607c:	1000041e 	bne	r2,zero,18006090 <__b2d+0xf8>
18006080:	90cffc34 	orhi	r3,r18,16368
18006084:	003fe406 	br	18006018 <__alt_data_end+0xf8006018>
18006088:	000d883a 	mov	r6,zero
1800608c:	003fdf06 	br	1800600c <__alt_data_end+0xf800600c>
18006090:	90a4983a 	sll	r18,r18,r2
18006094:	0005883a 	mov	r2,zero
18006098:	003ff906 	br	18006080 <__alt_data_end+0xf8006080>
1800609c:	1144983a 	sll	r2,r2,r5
180060a0:	003fdd06 	br	18006018 <__alt_data_end+0xf8006018>

180060a4 <__d2b>:
180060a4:	defff804 	addi	sp,sp,-32
180060a8:	dc000215 	stw	r16,8(sp)
180060ac:	3021883a 	mov	r16,r6
180060b0:	dc400315 	stw	r17,12(sp)
180060b4:	8022907a 	slli	r17,r16,1
180060b8:	dd000615 	stw	r20,24(sp)
180060bc:	2829883a 	mov	r20,r5
180060c0:	01400044 	movi	r5,1
180060c4:	dcc00515 	stw	r19,20(sp)
180060c8:	dc800415 	stw	r18,16(sp)
180060cc:	dfc00715 	stw	ra,28(sp)
180060d0:	3825883a 	mov	r18,r7
180060d4:	8822d57a 	srli	r17,r17,21
180060d8:	80053540 	call	18005354 <_Balloc>
180060dc:	1027883a 	mov	r19,r2
180060e0:	00800434 	movhi	r2,16
180060e4:	10bfffc4 	addi	r2,r2,-1
180060e8:	808c703a 	and	r6,r16,r2
180060ec:	88000126 	beq	r17,zero,180060f4 <__d2b+0x50>
180060f0:	31800434 	orhi	r6,r6,16
180060f4:	d9800015 	stw	r6,0(sp)
180060f8:	a0002426 	beq	r20,zero,1800618c <__d2b+0xe8>
180060fc:	d9000104 	addi	r4,sp,4
18006100:	dd000115 	stw	r20,4(sp)
18006104:	80056d80 	call	180056d8 <__lo0bits>
18006108:	d8c00017 	ldw	r3,0(sp)
1800610c:	10002f1e 	bne	r2,zero,180061cc <__d2b+0x128>
18006110:	d9000117 	ldw	r4,4(sp)
18006114:	99000515 	stw	r4,20(r19)
18006118:	1821003a 	cmpeq	r16,r3,zero
1800611c:	01000084 	movi	r4,2
18006120:	2421c83a 	sub	r16,r4,r16
18006124:	98c00615 	stw	r3,24(r19)
18006128:	9c000415 	stw	r16,16(r19)
1800612c:	88001f1e 	bne	r17,zero,180061ac <__d2b+0x108>
18006130:	10bef384 	addi	r2,r2,-1074
18006134:	90800015 	stw	r2,0(r18)
18006138:	00900034 	movhi	r2,16384
1800613c:	10bfffc4 	addi	r2,r2,-1
18006140:	8085883a 	add	r2,r16,r2
18006144:	1085883a 	add	r2,r2,r2
18006148:	1085883a 	add	r2,r2,r2
1800614c:	9885883a 	add	r2,r19,r2
18006150:	11000517 	ldw	r4,20(r2)
18006154:	8020917a 	slli	r16,r16,5
18006158:	80056700 	call	18005670 <__hi0bits>
1800615c:	d8c00817 	ldw	r3,32(sp)
18006160:	8085c83a 	sub	r2,r16,r2
18006164:	18800015 	stw	r2,0(r3)
18006168:	9805883a 	mov	r2,r19
1800616c:	dfc00717 	ldw	ra,28(sp)
18006170:	dd000617 	ldw	r20,24(sp)
18006174:	dcc00517 	ldw	r19,20(sp)
18006178:	dc800417 	ldw	r18,16(sp)
1800617c:	dc400317 	ldw	r17,12(sp)
18006180:	dc000217 	ldw	r16,8(sp)
18006184:	dec00804 	addi	sp,sp,32
18006188:	f800283a 	ret
1800618c:	d809883a 	mov	r4,sp
18006190:	80056d80 	call	180056d8 <__lo0bits>
18006194:	d8c00017 	ldw	r3,0(sp)
18006198:	04000044 	movi	r16,1
1800619c:	9c000415 	stw	r16,16(r19)
180061a0:	98c00515 	stw	r3,20(r19)
180061a4:	10800804 	addi	r2,r2,32
180061a8:	883fe126 	beq	r17,zero,18006130 <__alt_data_end+0xf8006130>
180061ac:	00c00d44 	movi	r3,53
180061b0:	8c7ef344 	addi	r17,r17,-1075
180061b4:	88a3883a 	add	r17,r17,r2
180061b8:	1885c83a 	sub	r2,r3,r2
180061bc:	d8c00817 	ldw	r3,32(sp)
180061c0:	94400015 	stw	r17,0(r18)
180061c4:	18800015 	stw	r2,0(r3)
180061c8:	003fe706 	br	18006168 <__alt_data_end+0xf8006168>
180061cc:	01000804 	movi	r4,32
180061d0:	2089c83a 	sub	r4,r4,r2
180061d4:	1908983a 	sll	r4,r3,r4
180061d8:	d9400117 	ldw	r5,4(sp)
180061dc:	1886d83a 	srl	r3,r3,r2
180061e0:	2148b03a 	or	r4,r4,r5
180061e4:	99000515 	stw	r4,20(r19)
180061e8:	d8c00015 	stw	r3,0(sp)
180061ec:	003fca06 	br	18006118 <__alt_data_end+0xf8006118>

180061f0 <__ratio>:
180061f0:	defff904 	addi	sp,sp,-28
180061f4:	dc400315 	stw	r17,12(sp)
180061f8:	2823883a 	mov	r17,r5
180061fc:	d9400104 	addi	r5,sp,4
18006200:	dfc00615 	stw	ra,24(sp)
18006204:	dcc00515 	stw	r19,20(sp)
18006208:	dc800415 	stw	r18,16(sp)
1800620c:	2027883a 	mov	r19,r4
18006210:	dc000215 	stw	r16,8(sp)
18006214:	8005f980 	call	18005f98 <__b2d>
18006218:	d80b883a 	mov	r5,sp
1800621c:	8809883a 	mov	r4,r17
18006220:	1025883a 	mov	r18,r2
18006224:	1821883a 	mov	r16,r3
18006228:	8005f980 	call	18005f98 <__b2d>
1800622c:	8a000417 	ldw	r8,16(r17)
18006230:	99000417 	ldw	r4,16(r19)
18006234:	d9400117 	ldw	r5,4(sp)
18006238:	2209c83a 	sub	r4,r4,r8
1800623c:	2010917a 	slli	r8,r4,5
18006240:	d9000017 	ldw	r4,0(sp)
18006244:	2909c83a 	sub	r4,r5,r4
18006248:	4109883a 	add	r4,r8,r4
1800624c:	01000e0e 	bge	zero,r4,18006288 <__ratio+0x98>
18006250:	2008953a 	slli	r4,r4,20
18006254:	2421883a 	add	r16,r4,r16
18006258:	100d883a 	mov	r6,r2
1800625c:	180f883a 	mov	r7,r3
18006260:	9009883a 	mov	r4,r18
18006264:	800b883a 	mov	r5,r16
18006268:	8009d900 	call	18009d90 <__divdf3>
1800626c:	dfc00617 	ldw	ra,24(sp)
18006270:	dcc00517 	ldw	r19,20(sp)
18006274:	dc800417 	ldw	r18,16(sp)
18006278:	dc400317 	ldw	r17,12(sp)
1800627c:	dc000217 	ldw	r16,8(sp)
18006280:	dec00704 	addi	sp,sp,28
18006284:	f800283a 	ret
18006288:	2008953a 	slli	r4,r4,20
1800628c:	1907c83a 	sub	r3,r3,r4
18006290:	003ff106 	br	18006258 <__alt_data_end+0xf8006258>

18006294 <_mprec_log10>:
18006294:	defffe04 	addi	sp,sp,-8
18006298:	dc000015 	stw	r16,0(sp)
1800629c:	dfc00115 	stw	ra,4(sp)
180062a0:	008005c4 	movi	r2,23
180062a4:	2021883a 	mov	r16,r4
180062a8:	11000d0e 	bge	r2,r4,180062e0 <_mprec_log10+0x4c>
180062ac:	0005883a 	mov	r2,zero
180062b0:	00cffc34 	movhi	r3,16368
180062b4:	843fffc4 	addi	r16,r16,-1
180062b8:	000d883a 	mov	r6,zero
180062bc:	01d00934 	movhi	r7,16420
180062c0:	1009883a 	mov	r4,r2
180062c4:	180b883a 	mov	r5,r3
180062c8:	800a9b80 	call	1800a9b8 <__muldf3>
180062cc:	803ff91e 	bne	r16,zero,180062b4 <__alt_data_end+0xf80062b4>
180062d0:	dfc00117 	ldw	ra,4(sp)
180062d4:	dc000017 	ldw	r16,0(sp)
180062d8:	dec00204 	addi	sp,sp,8
180062dc:	f800283a 	ret
180062e0:	202090fa 	slli	r16,r4,3
180062e4:	00860074 	movhi	r2,6145
180062e8:	10b85b04 	addi	r2,r2,-7828
180062ec:	1421883a 	add	r16,r2,r16
180062f0:	80800017 	ldw	r2,0(r16)
180062f4:	80c00117 	ldw	r3,4(r16)
180062f8:	dfc00117 	ldw	ra,4(sp)
180062fc:	dc000017 	ldw	r16,0(sp)
18006300:	dec00204 	addi	sp,sp,8
18006304:	f800283a 	ret

18006308 <__copybits>:
18006308:	297fffc4 	addi	r5,r5,-1
1800630c:	280fd17a 	srai	r7,r5,5
18006310:	30c00417 	ldw	r3,16(r6)
18006314:	30800504 	addi	r2,r6,20
18006318:	39c00044 	addi	r7,r7,1
1800631c:	18c7883a 	add	r3,r3,r3
18006320:	39cf883a 	add	r7,r7,r7
18006324:	18c7883a 	add	r3,r3,r3
18006328:	39cf883a 	add	r7,r7,r7
1800632c:	10c7883a 	add	r3,r2,r3
18006330:	21cf883a 	add	r7,r4,r7
18006334:	10c00d2e 	bgeu	r2,r3,1800636c <__copybits+0x64>
18006338:	200b883a 	mov	r5,r4
1800633c:	12000017 	ldw	r8,0(r2)
18006340:	29400104 	addi	r5,r5,4
18006344:	10800104 	addi	r2,r2,4
18006348:	2a3fff15 	stw	r8,-4(r5)
1800634c:	10fffb36 	bltu	r2,r3,1800633c <__alt_data_end+0xf800633c>
18006350:	1985c83a 	sub	r2,r3,r6
18006354:	10bffac4 	addi	r2,r2,-21
18006358:	1004d0ba 	srli	r2,r2,2
1800635c:	10800044 	addi	r2,r2,1
18006360:	1085883a 	add	r2,r2,r2
18006364:	1085883a 	add	r2,r2,r2
18006368:	2089883a 	add	r4,r4,r2
1800636c:	21c0032e 	bgeu	r4,r7,1800637c <__copybits+0x74>
18006370:	20000015 	stw	zero,0(r4)
18006374:	21000104 	addi	r4,r4,4
18006378:	21fffd36 	bltu	r4,r7,18006370 <__alt_data_end+0xf8006370>
1800637c:	f800283a 	ret

18006380 <__any_on>:
18006380:	20c00417 	ldw	r3,16(r4)
18006384:	2805d17a 	srai	r2,r5,5
18006388:	21000504 	addi	r4,r4,20
1800638c:	18800d0e 	bge	r3,r2,180063c4 <__any_on+0x44>
18006390:	18c7883a 	add	r3,r3,r3
18006394:	18c7883a 	add	r3,r3,r3
18006398:	20c7883a 	add	r3,r4,r3
1800639c:	20c0192e 	bgeu	r4,r3,18006404 <__any_on+0x84>
180063a0:	18bfff17 	ldw	r2,-4(r3)
180063a4:	18ffff04 	addi	r3,r3,-4
180063a8:	1000041e 	bne	r2,zero,180063bc <__any_on+0x3c>
180063ac:	20c0142e 	bgeu	r4,r3,18006400 <__any_on+0x80>
180063b0:	18ffff04 	addi	r3,r3,-4
180063b4:	19400017 	ldw	r5,0(r3)
180063b8:	283ffc26 	beq	r5,zero,180063ac <__alt_data_end+0xf80063ac>
180063bc:	00800044 	movi	r2,1
180063c0:	f800283a 	ret
180063c4:	10c00a0e 	bge	r2,r3,180063f0 <__any_on+0x70>
180063c8:	1085883a 	add	r2,r2,r2
180063cc:	1085883a 	add	r2,r2,r2
180063d0:	294007cc 	andi	r5,r5,31
180063d4:	2087883a 	add	r3,r4,r2
180063d8:	283ff026 	beq	r5,zero,1800639c <__alt_data_end+0xf800639c>
180063dc:	19800017 	ldw	r6,0(r3)
180063e0:	3144d83a 	srl	r2,r6,r5
180063e4:	114a983a 	sll	r5,r2,r5
180063e8:	317ff41e 	bne	r6,r5,180063bc <__alt_data_end+0xf80063bc>
180063ec:	003feb06 	br	1800639c <__alt_data_end+0xf800639c>
180063f0:	1085883a 	add	r2,r2,r2
180063f4:	1085883a 	add	r2,r2,r2
180063f8:	2087883a 	add	r3,r4,r2
180063fc:	003fe706 	br	1800639c <__alt_data_end+0xf800639c>
18006400:	f800283a 	ret
18006404:	0005883a 	mov	r2,zero
18006408:	f800283a 	ret

1800640c <__fpclassifyd>:
1800640c:	00a00034 	movhi	r2,32768
18006410:	10bfffc4 	addi	r2,r2,-1
18006414:	2884703a 	and	r2,r5,r2
18006418:	10000726 	beq	r2,zero,18006438 <__fpclassifyd+0x2c>
1800641c:	00fffc34 	movhi	r3,65520
18006420:	019ff834 	movhi	r6,32736
18006424:	28c7883a 	add	r3,r5,r3
18006428:	31bfffc4 	addi	r6,r6,-1
1800642c:	30c00536 	bltu	r6,r3,18006444 <__fpclassifyd+0x38>
18006430:	00800104 	movi	r2,4
18006434:	f800283a 	ret
18006438:	2000021e 	bne	r4,zero,18006444 <__fpclassifyd+0x38>
1800643c:	00800084 	movi	r2,2
18006440:	f800283a 	ret
18006444:	00dffc34 	movhi	r3,32752
18006448:	019ff834 	movhi	r6,32736
1800644c:	28cb883a 	add	r5,r5,r3
18006450:	31bfffc4 	addi	r6,r6,-1
18006454:	317ff62e 	bgeu	r6,r5,18006430 <__alt_data_end+0xf8006430>
18006458:	01400434 	movhi	r5,16
1800645c:	297fffc4 	addi	r5,r5,-1
18006460:	28800236 	bltu	r5,r2,1800646c <__fpclassifyd+0x60>
18006464:	008000c4 	movi	r2,3
18006468:	f800283a 	ret
1800646c:	10c00226 	beq	r2,r3,18006478 <__fpclassifyd+0x6c>
18006470:	0005883a 	mov	r2,zero
18006474:	f800283a 	ret
18006478:	2005003a 	cmpeq	r2,r4,zero
1800647c:	f800283a 	ret

18006480 <_sbrk_r>:
18006480:	defffd04 	addi	sp,sp,-12
18006484:	dc000015 	stw	r16,0(sp)
18006488:	04060074 	movhi	r16,6145
1800648c:	dc400115 	stw	r17,4(sp)
18006490:	84088a04 	addi	r16,r16,8744
18006494:	2023883a 	mov	r17,r4
18006498:	2809883a 	mov	r4,r5
1800649c:	dfc00215 	stw	ra,8(sp)
180064a0:	80000015 	stw	zero,0(r16)
180064a4:	800bf380 	call	1800bf38 <sbrk>
180064a8:	00ffffc4 	movi	r3,-1
180064ac:	10c00526 	beq	r2,r3,180064c4 <_sbrk_r+0x44>
180064b0:	dfc00217 	ldw	ra,8(sp)
180064b4:	dc400117 	ldw	r17,4(sp)
180064b8:	dc000017 	ldw	r16,0(sp)
180064bc:	dec00304 	addi	sp,sp,12
180064c0:	f800283a 	ret
180064c4:	80c00017 	ldw	r3,0(r16)
180064c8:	183ff926 	beq	r3,zero,180064b0 <__alt_data_end+0xf80064b0>
180064cc:	88c00015 	stw	r3,0(r17)
180064d0:	003ff706 	br	180064b0 <__alt_data_end+0xf80064b0>

180064d4 <strcmp>:
180064d4:	2144b03a 	or	r2,r4,r5
180064d8:	108000cc 	andi	r2,r2,3
180064dc:	1000171e 	bne	r2,zero,1800653c <strcmp+0x68>
180064e0:	20800017 	ldw	r2,0(r4)
180064e4:	28c00017 	ldw	r3,0(r5)
180064e8:	10c0141e 	bne	r2,r3,1800653c <strcmp+0x68>
180064ec:	027fbff4 	movhi	r9,65279
180064f0:	4a7fbfc4 	addi	r9,r9,-257
180064f4:	0086303a 	nor	r3,zero,r2
180064f8:	02202074 	movhi	r8,32897
180064fc:	1245883a 	add	r2,r2,r9
18006500:	42202004 	addi	r8,r8,-32640
18006504:	10c4703a 	and	r2,r2,r3
18006508:	1204703a 	and	r2,r2,r8
1800650c:	10000226 	beq	r2,zero,18006518 <strcmp+0x44>
18006510:	00002306 	br	180065a0 <strcmp+0xcc>
18006514:	1000221e 	bne	r2,zero,180065a0 <strcmp+0xcc>
18006518:	21000104 	addi	r4,r4,4
1800651c:	20c00017 	ldw	r3,0(r4)
18006520:	29400104 	addi	r5,r5,4
18006524:	29800017 	ldw	r6,0(r5)
18006528:	1a4f883a 	add	r7,r3,r9
1800652c:	00c4303a 	nor	r2,zero,r3
18006530:	3884703a 	and	r2,r7,r2
18006534:	1204703a 	and	r2,r2,r8
18006538:	19bff626 	beq	r3,r6,18006514 <__alt_data_end+0xf8006514>
1800653c:	20800003 	ldbu	r2,0(r4)
18006540:	10c03fcc 	andi	r3,r2,255
18006544:	18c0201c 	xori	r3,r3,128
18006548:	18ffe004 	addi	r3,r3,-128
1800654c:	18000c26 	beq	r3,zero,18006580 <strcmp+0xac>
18006550:	29800007 	ldb	r6,0(r5)
18006554:	19800326 	beq	r3,r6,18006564 <strcmp+0x90>
18006558:	00001306 	br	180065a8 <strcmp+0xd4>
1800655c:	29800007 	ldb	r6,0(r5)
18006560:	11800b1e 	bne	r2,r6,18006590 <strcmp+0xbc>
18006564:	21000044 	addi	r4,r4,1
18006568:	20c00003 	ldbu	r3,0(r4)
1800656c:	29400044 	addi	r5,r5,1
18006570:	18803fcc 	andi	r2,r3,255
18006574:	1080201c 	xori	r2,r2,128
18006578:	10bfe004 	addi	r2,r2,-128
1800657c:	103ff71e 	bne	r2,zero,1800655c <__alt_data_end+0xf800655c>
18006580:	0007883a 	mov	r3,zero
18006584:	28800003 	ldbu	r2,0(r5)
18006588:	1885c83a 	sub	r2,r3,r2
1800658c:	f800283a 	ret
18006590:	28800003 	ldbu	r2,0(r5)
18006594:	18c03fcc 	andi	r3,r3,255
18006598:	1885c83a 	sub	r2,r3,r2
1800659c:	f800283a 	ret
180065a0:	0005883a 	mov	r2,zero
180065a4:	f800283a 	ret
180065a8:	10c03fcc 	andi	r3,r2,255
180065ac:	003ff506 	br	18006584 <__alt_data_end+0xf8006584>

180065b0 <__ssprint_r>:
180065b0:	30800217 	ldw	r2,8(r6)
180065b4:	defff604 	addi	sp,sp,-40
180065b8:	dc800215 	stw	r18,8(sp)
180065bc:	dfc00915 	stw	ra,36(sp)
180065c0:	df000815 	stw	fp,32(sp)
180065c4:	ddc00715 	stw	r23,28(sp)
180065c8:	dd800615 	stw	r22,24(sp)
180065cc:	dd400515 	stw	r21,20(sp)
180065d0:	dd000415 	stw	r20,16(sp)
180065d4:	dcc00315 	stw	r19,12(sp)
180065d8:	dc400115 	stw	r17,4(sp)
180065dc:	dc000015 	stw	r16,0(sp)
180065e0:	3025883a 	mov	r18,r6
180065e4:	10005826 	beq	r2,zero,18006748 <__ssprint_r+0x198>
180065e8:	2027883a 	mov	r19,r4
180065ec:	35c00017 	ldw	r23,0(r6)
180065f0:	29000017 	ldw	r4,0(r5)
180065f4:	28800217 	ldw	r2,8(r5)
180065f8:	2823883a 	mov	r17,r5
180065fc:	0039883a 	mov	fp,zero
18006600:	0021883a 	mov	r16,zero
18006604:	80003926 	beq	r16,zero,180066ec <__ssprint_r+0x13c>
18006608:	102b883a 	mov	r21,r2
1800660c:	102d883a 	mov	r22,r2
18006610:	80803a36 	bltu	r16,r2,180066fc <__ssprint_r+0x14c>
18006614:	88c0030b 	ldhu	r3,12(r17)
18006618:	1881200c 	andi	r2,r3,1152
1800661c:	10002626 	beq	r2,zero,180066b8 <__ssprint_r+0x108>
18006620:	88800517 	ldw	r2,20(r17)
18006624:	89400417 	ldw	r5,16(r17)
18006628:	81800044 	addi	r6,r16,1
1800662c:	108f883a 	add	r7,r2,r2
18006630:	3885883a 	add	r2,r7,r2
18006634:	100ed7fa 	srli	r7,r2,31
18006638:	216dc83a 	sub	r22,r4,r5
1800663c:	3589883a 	add	r4,r6,r22
18006640:	3885883a 	add	r2,r7,r2
18006644:	102bd07a 	srai	r21,r2,1
18006648:	a80d883a 	mov	r6,r21
1800664c:	a900022e 	bgeu	r21,r4,18006658 <__ssprint_r+0xa8>
18006650:	202b883a 	mov	r21,r4
18006654:	200d883a 	mov	r6,r4
18006658:	18c1000c 	andi	r3,r3,1024
1800665c:	18002a26 	beq	r3,zero,18006708 <__ssprint_r+0x158>
18006660:	300b883a 	mov	r5,r6
18006664:	9809883a 	mov	r4,r19
18006668:	800491c0 	call	1800491c <_malloc_r>
1800666c:	1029883a 	mov	r20,r2
18006670:	10002c26 	beq	r2,zero,18006724 <__ssprint_r+0x174>
18006674:	89400417 	ldw	r5,16(r17)
18006678:	b00d883a 	mov	r6,r22
1800667c:	1009883a 	mov	r4,r2
18006680:	800520c0 	call	1800520c <memcpy>
18006684:	8880030b 	ldhu	r2,12(r17)
18006688:	00fedfc4 	movi	r3,-1153
1800668c:	10c4703a 	and	r2,r2,r3
18006690:	10802014 	ori	r2,r2,128
18006694:	8880030d 	sth	r2,12(r17)
18006698:	a589883a 	add	r4,r20,r22
1800669c:	adadc83a 	sub	r22,r21,r22
180066a0:	8d400515 	stw	r21,20(r17)
180066a4:	8d800215 	stw	r22,8(r17)
180066a8:	8d000415 	stw	r20,16(r17)
180066ac:	89000015 	stw	r4,0(r17)
180066b0:	802b883a 	mov	r21,r16
180066b4:	802d883a 	mov	r22,r16
180066b8:	b00d883a 	mov	r6,r22
180066bc:	e00b883a 	mov	r5,fp
180066c0:	80080300 	call	18008030 <memmove>
180066c4:	88800217 	ldw	r2,8(r17)
180066c8:	89000017 	ldw	r4,0(r17)
180066cc:	90c00217 	ldw	r3,8(r18)
180066d0:	1545c83a 	sub	r2,r2,r21
180066d4:	2589883a 	add	r4,r4,r22
180066d8:	88800215 	stw	r2,8(r17)
180066dc:	89000015 	stw	r4,0(r17)
180066e0:	1c21c83a 	sub	r16,r3,r16
180066e4:	94000215 	stw	r16,8(r18)
180066e8:	80001726 	beq	r16,zero,18006748 <__ssprint_r+0x198>
180066ec:	bf000017 	ldw	fp,0(r23)
180066f0:	bc000117 	ldw	r16,4(r23)
180066f4:	bdc00204 	addi	r23,r23,8
180066f8:	003fc206 	br	18006604 <__alt_data_end+0xf8006604>
180066fc:	802b883a 	mov	r21,r16
18006700:	802d883a 	mov	r22,r16
18006704:	003fec06 	br	180066b8 <__alt_data_end+0xf80066b8>
18006708:	9809883a 	mov	r4,r19
1800670c:	80082b40 	call	180082b4 <_realloc_r>
18006710:	1029883a 	mov	r20,r2
18006714:	103fe01e 	bne	r2,zero,18006698 <__alt_data_end+0xf8006698>
18006718:	89400417 	ldw	r5,16(r17)
1800671c:	9809883a 	mov	r4,r19
18006720:	8007d200 	call	18007d20 <_free_r>
18006724:	88c0030b 	ldhu	r3,12(r17)
18006728:	00800304 	movi	r2,12
1800672c:	98800015 	stw	r2,0(r19)
18006730:	18c01014 	ori	r3,r3,64
18006734:	88c0030d 	sth	r3,12(r17)
18006738:	00bfffc4 	movi	r2,-1
1800673c:	90000215 	stw	zero,8(r18)
18006740:	90000115 	stw	zero,4(r18)
18006744:	00000206 	br	18006750 <__ssprint_r+0x1a0>
18006748:	90000115 	stw	zero,4(r18)
1800674c:	0005883a 	mov	r2,zero
18006750:	dfc00917 	ldw	ra,36(sp)
18006754:	df000817 	ldw	fp,32(sp)
18006758:	ddc00717 	ldw	r23,28(sp)
1800675c:	dd800617 	ldw	r22,24(sp)
18006760:	dd400517 	ldw	r21,20(sp)
18006764:	dd000417 	ldw	r20,16(sp)
18006768:	dcc00317 	ldw	r19,12(sp)
1800676c:	dc800217 	ldw	r18,8(sp)
18006770:	dc400117 	ldw	r17,4(sp)
18006774:	dc000017 	ldw	r16,0(sp)
18006778:	dec00a04 	addi	sp,sp,40
1800677c:	f800283a 	ret

18006780 <___svfiprintf_internal_r>:
18006780:	2880030b 	ldhu	r2,12(r5)
18006784:	deffc804 	addi	sp,sp,-224
18006788:	dcc03115 	stw	r19,196(sp)
1800678c:	dfc03715 	stw	ra,220(sp)
18006790:	df003615 	stw	fp,216(sp)
18006794:	ddc03515 	stw	r23,212(sp)
18006798:	dd803415 	stw	r22,208(sp)
1800679c:	dd403315 	stw	r21,204(sp)
180067a0:	dd003215 	stw	r20,200(sp)
180067a4:	dc803015 	stw	r18,192(sp)
180067a8:	dc402f15 	stw	r17,188(sp)
180067ac:	dc002e15 	stw	r16,184(sp)
180067b0:	d9402315 	stw	r5,140(sp)
180067b4:	d9002715 	stw	r4,156(sp)
180067b8:	1080200c 	andi	r2,r2,128
180067bc:	d9c02415 	stw	r7,144(sp)
180067c0:	3027883a 	mov	r19,r6
180067c4:	10000226 	beq	r2,zero,180067d0 <___svfiprintf_internal_r+0x50>
180067c8:	28800417 	ldw	r2,16(r5)
180067cc:	10046d26 	beq	r2,zero,18007984 <___svfiprintf_internal_r+0x1204>
180067d0:	d8801a04 	addi	r2,sp,104
180067d4:	d8c019c4 	addi	r3,sp,103
180067d8:	05860074 	movhi	r22,6145
180067dc:	10c9c83a 	sub	r4,r2,r3
180067e0:	b5b88d04 	addi	r22,r22,-7628
180067e4:	d8801e15 	stw	r2,120(sp)
180067e8:	d8c01f15 	stw	r3,124(sp)
180067ec:	dec01a15 	stw	sp,104(sp)
180067f0:	d8001c15 	stw	zero,112(sp)
180067f4:	d8001b15 	stw	zero,108(sp)
180067f8:	d811883a 	mov	r8,sp
180067fc:	d8002915 	stw	zero,164(sp)
18006800:	d8002615 	stw	zero,152(sp)
18006804:	d9002c15 	stw	r4,176(sp)
18006808:	98800007 	ldb	r2,0(r19)
1800680c:	10031426 	beq	r2,zero,18007460 <___svfiprintf_internal_r+0xce0>
18006810:	00c00944 	movi	r3,37
18006814:	9825883a 	mov	r18,r19
18006818:	10c0021e 	bne	r2,r3,18006824 <___svfiprintf_internal_r+0xa4>
1800681c:	00001406 	br	18006870 <___svfiprintf_internal_r+0xf0>
18006820:	10c00326 	beq	r2,r3,18006830 <___svfiprintf_internal_r+0xb0>
18006824:	94800044 	addi	r18,r18,1
18006828:	90800007 	ldb	r2,0(r18)
1800682c:	103ffc1e 	bne	r2,zero,18006820 <__alt_data_end+0xf8006820>
18006830:	94e1c83a 	sub	r16,r18,r19
18006834:	80000e26 	beq	r16,zero,18006870 <___svfiprintf_internal_r+0xf0>
18006838:	d8c01c17 	ldw	r3,112(sp)
1800683c:	d8801b17 	ldw	r2,108(sp)
18006840:	44c00015 	stw	r19,0(r8)
18006844:	1c07883a 	add	r3,r3,r16
18006848:	10800044 	addi	r2,r2,1
1800684c:	d8c01c15 	stw	r3,112(sp)
18006850:	44000115 	stw	r16,4(r8)
18006854:	d8801b15 	stw	r2,108(sp)
18006858:	00c001c4 	movi	r3,7
1800685c:	18835c16 	blt	r3,r2,180075d0 <___svfiprintf_internal_r+0xe50>
18006860:	42000204 	addi	r8,r8,8
18006864:	d9402617 	ldw	r5,152(sp)
18006868:	2c0b883a 	add	r5,r5,r16
1800686c:	d9402615 	stw	r5,152(sp)
18006870:	90800007 	ldb	r2,0(r18)
18006874:	1002fc26 	beq	r2,zero,18007468 <___svfiprintf_internal_r+0xce8>
18006878:	0023883a 	mov	r17,zero
1800687c:	00bfffc4 	movi	r2,-1
18006880:	0021883a 	mov	r16,zero
18006884:	94c00044 	addi	r19,r18,1
18006888:	90c00047 	ldb	r3,1(r18)
1800688c:	dc402105 	stb	r17,132(sp)
18006890:	d8001d85 	stb	zero,118(sp)
18006894:	002b883a 	mov	r21,zero
18006898:	d8802015 	stw	r2,128(sp)
1800689c:	d8002515 	stw	zero,148(sp)
180068a0:	04801604 	movi	r18,88
180068a4:	05000244 	movi	r20,9
180068a8:	402f883a 	mov	r23,r8
180068ac:	8023883a 	mov	r17,r16
180068b0:	9cc00044 	addi	r19,r19,1
180068b4:	18bff804 	addi	r2,r3,-32
180068b8:	9081fb36 	bltu	r18,r2,180070a8 <___svfiprintf_internal_r+0x928>
180068bc:	100490ba 	slli	r2,r2,2
180068c0:	01060034 	movhi	r4,6144
180068c4:	211a3504 	addi	r4,r4,26836
180068c8:	1105883a 	add	r2,r2,r4
180068cc:	10800017 	ldw	r2,0(r2)
180068d0:	1000683a 	jmp	r2
180068d4:	18006ad4 	ori	zero,r3,427
180068d8:	180070a8 	cmpgeui	zero,r3,450
180068dc:	180070a8 	cmpgeui	zero,r3,450
180068e0:	18006ac8 	cmpgei	zero,r3,427
180068e4:	180070a8 	cmpgeui	zero,r3,450
180068e8:	180070a8 	cmpgeui	zero,r3,450
180068ec:	180070a8 	cmpgeui	zero,r3,450
180068f0:	180070a8 	cmpgeui	zero,r3,450
180068f4:	180070a8 	cmpgeui	zero,r3,450
180068f8:	180070a8 	cmpgeui	zero,r3,450
180068fc:	18006a38 	rdprs	zero,r3,424
18006900:	18006c34 	orhi	zero,r3,432
18006904:	180070a8 	cmpgeui	zero,r3,450
18006908:	18006a60 	cmpeqi	zero,r3,425
1800690c:	180070e4 	muli	zero,r3,451
18006910:	180070a8 	cmpgeui	zero,r3,450
18006914:	180070d8 	cmpnei	zero,r3,451
18006918:	1800706c 	andhi	zero,r3,449
1800691c:	1800706c 	andhi	zero,r3,449
18006920:	1800706c 	andhi	zero,r3,449
18006924:	1800706c 	andhi	zero,r3,449
18006928:	1800706c 	andhi	zero,r3,449
1800692c:	1800706c 	andhi	zero,r3,449
18006930:	1800706c 	andhi	zero,r3,449
18006934:	1800706c 	andhi	zero,r3,449
18006938:	1800706c 	andhi	zero,r3,449
1800693c:	180070a8 	cmpgeui	zero,r3,450
18006940:	180070a8 	cmpgeui	zero,r3,450
18006944:	180070a8 	cmpgeui	zero,r3,450
18006948:	180070a8 	cmpgeui	zero,r3,450
1800694c:	180070a8 	cmpgeui	zero,r3,450
18006950:	180070a8 	cmpgeui	zero,r3,450
18006954:	180070a8 	cmpgeui	zero,r3,450
18006958:	180070a8 	cmpgeui	zero,r3,450
1800695c:	180070a8 	cmpgeui	zero,r3,450
18006960:	180070a8 	cmpgeui	zero,r3,450
18006964:	18006ff0 	cmpltui	zero,r3,447
18006968:	180070a8 	cmpgeui	zero,r3,450
1800696c:	180070a8 	cmpgeui	zero,r3,450
18006970:	180070a8 	cmpgeui	zero,r3,450
18006974:	180070a8 	cmpgeui	zero,r3,450
18006978:	180070a8 	cmpgeui	zero,r3,450
1800697c:	180070a8 	cmpgeui	zero,r3,450
18006980:	180070a8 	cmpgeui	zero,r3,450
18006984:	180070a8 	cmpgeui	zero,r3,450
18006988:	180070a8 	cmpgeui	zero,r3,450
1800698c:	180070a8 	cmpgeui	zero,r3,450
18006990:	180071a0 	cmpeqi	zero,r3,454
18006994:	180070a8 	cmpgeui	zero,r3,450
18006998:	180070a8 	cmpgeui	zero,r3,450
1800699c:	180070a8 	cmpgeui	zero,r3,450
180069a0:	180070a8 	cmpgeui	zero,r3,450
180069a4:	180070a8 	cmpgeui	zero,r3,450
180069a8:	1800712c 	andhi	zero,r3,452
180069ac:	180070a8 	cmpgeui	zero,r3,450
180069b0:	180070a8 	cmpgeui	zero,r3,450
180069b4:	18006e2c 	andhi	zero,r3,440
180069b8:	180070a8 	cmpgeui	zero,r3,450
180069bc:	180070a8 	cmpgeui	zero,r3,450
180069c0:	180070a8 	cmpgeui	zero,r3,450
180069c4:	180070a8 	cmpgeui	zero,r3,450
180069c8:	180070a8 	cmpgeui	zero,r3,450
180069cc:	180070a8 	cmpgeui	zero,r3,450
180069d0:	180070a8 	cmpgeui	zero,r3,450
180069d4:	180070a8 	cmpgeui	zero,r3,450
180069d8:	180070a8 	cmpgeui	zero,r3,450
180069dc:	180070a8 	cmpgeui	zero,r3,450
180069e0:	18006cf8 	rdprs	zero,r3,435
180069e4:	18006edc 	xori	zero,r3,443
180069e8:	180070a8 	cmpgeui	zero,r3,450
180069ec:	180070a8 	cmpgeui	zero,r3,450
180069f0:	180070a8 	cmpgeui	zero,r3,450
180069f4:	18006ed0 	cmplti	zero,r3,443
180069f8:	18006edc 	xori	zero,r3,443
180069fc:	180070a8 	cmpgeui	zero,r3,450
18006a00:	180070a8 	cmpgeui	zero,r3,450
18006a04:	18006ebc 	xorhi	zero,r3,442
18006a08:	180070a8 	cmpgeui	zero,r3,450
18006a0c:	18006e7c 	xorhi	zero,r3,441
18006a10:	18006c48 	cmpgei	zero,r3,433
18006a14:	18006a6c 	andhi	zero,r3,425
18006a18:	18006fe4 	muli	zero,r3,447
18006a1c:	180070a8 	cmpgeui	zero,r3,450
18006a20:	18006f90 	cmplti	zero,r3,446
18006a24:	180070a8 	cmpgeui	zero,r3,450
18006a28:	18006bac 	andhi	zero,r3,430
18006a2c:	180070a8 	cmpgeui	zero,r3,450
18006a30:	180070a8 	cmpgeui	zero,r3,450
18006a34:	18006af8 	rdprs	zero,r3,427
18006a38:	d9002417 	ldw	r4,144(sp)
18006a3c:	d9402417 	ldw	r5,144(sp)
18006a40:	21000017 	ldw	r4,0(r4)
18006a44:	28800104 	addi	r2,r5,4
18006a48:	d9002515 	stw	r4,148(sp)
18006a4c:	20032b0e 	bge	r4,zero,180076fc <___svfiprintf_internal_r+0xf7c>
18006a50:	d8c02517 	ldw	r3,148(sp)
18006a54:	d8802415 	stw	r2,144(sp)
18006a58:	00c7c83a 	sub	r3,zero,r3
18006a5c:	d8c02515 	stw	r3,148(sp)
18006a60:	8c400114 	ori	r17,r17,4
18006a64:	98c00007 	ldb	r3,0(r19)
18006a68:	003f9106 	br	180068b0 <__alt_data_end+0xf80068b0>
18006a6c:	00800c04 	movi	r2,48
18006a70:	d9402417 	ldw	r5,144(sp)
18006a74:	d9002017 	ldw	r4,128(sp)
18006a78:	d8801d05 	stb	r2,116(sp)
18006a7c:	00801e04 	movi	r2,120
18006a80:	d8801d45 	stb	r2,117(sp)
18006a84:	d8001d85 	stb	zero,118(sp)
18006a88:	b811883a 	mov	r8,r23
18006a8c:	28c00104 	addi	r3,r5,4
18006a90:	2c800017 	ldw	r18,0(r5)
18006a94:	0029883a 	mov	r20,zero
18006a98:	88800094 	ori	r2,r17,2
18006a9c:	20036316 	blt	r4,zero,1800782c <___svfiprintf_internal_r+0x10ac>
18006aa0:	00bfdfc4 	movi	r2,-129
18006aa4:	88a0703a 	and	r16,r17,r2
18006aa8:	d8c02415 	stw	r3,144(sp)
18006aac:	84000094 	ori	r16,r16,2
18006ab0:	90031c26 	beq	r18,zero,18007724 <___svfiprintf_internal_r+0xfa4>
18006ab4:	01460074 	movhi	r5,6145
18006ab8:	29782c04 	addi	r5,r5,-8016
18006abc:	002b883a 	mov	r21,zero
18006ac0:	d9402915 	stw	r5,164(sp)
18006ac4:	00002906 	br	18006b6c <___svfiprintf_internal_r+0x3ec>
18006ac8:	8c400054 	ori	r17,r17,1
18006acc:	98c00007 	ldb	r3,0(r19)
18006ad0:	003f7706 	br	180068b0 <__alt_data_end+0xf80068b0>
18006ad4:	a8803fcc 	andi	r2,r21,255
18006ad8:	1080201c 	xori	r2,r2,128
18006adc:	10bfe004 	addi	r2,r2,-128
18006ae0:	10032a1e 	bne	r2,zero,1800778c <___svfiprintf_internal_r+0x100c>
18006ae4:	00c00044 	movi	r3,1
18006ae8:	d8c02105 	stb	r3,132(sp)
18006aec:	05400804 	movi	r21,32
18006af0:	98c00007 	ldb	r3,0(r19)
18006af4:	003f6e06 	br	180068b0 <__alt_data_end+0xf80068b0>
18006af8:	8821883a 	mov	r16,r17
18006afc:	dc402103 	ldbu	r17,132(sp)
18006b00:	b811883a 	mov	r8,r23
18006b04:	8c403fcc 	andi	r17,r17,255
18006b08:	8803f01e 	bne	r17,zero,18007acc <___svfiprintf_internal_r+0x134c>
18006b0c:	00860074 	movhi	r2,6145
18006b10:	10b82c04 	addi	r2,r2,-8016
18006b14:	d8802915 	stw	r2,164(sp)
18006b18:	8080080c 	andi	r2,r16,32
18006b1c:	1000cd26 	beq	r2,zero,18006e54 <___svfiprintf_internal_r+0x6d4>
18006b20:	d9002417 	ldw	r4,144(sp)
18006b24:	24800017 	ldw	r18,0(r4)
18006b28:	25000117 	ldw	r20,4(r4)
18006b2c:	21000204 	addi	r4,r4,8
18006b30:	d9002415 	stw	r4,144(sp)
18006b34:	8080004c 	andi	r2,r16,1
18006b38:	1002c726 	beq	r2,zero,18007658 <___svfiprintf_internal_r+0xed8>
18006b3c:	9504b03a 	or	r2,r18,r20
18006b40:	1003061e 	bne	r2,zero,1800775c <___svfiprintf_internal_r+0xfdc>
18006b44:	d9002017 	ldw	r4,128(sp)
18006b48:	d8001d85 	stb	zero,118(sp)
18006b4c:	20033e16 	blt	r4,zero,18007848 <___svfiprintf_internal_r+0x10c8>
18006b50:	00bfdfc4 	movi	r2,-129
18006b54:	80a0703a 	and	r16,r16,r2
18006b58:	d9402017 	ldw	r5,128(sp)
18006b5c:	002b883a 	mov	r21,zero
18006b60:	28002826 	beq	r5,zero,18006c04 <___svfiprintf_internal_r+0x484>
18006b64:	0025883a 	mov	r18,zero
18006b68:	0029883a 	mov	r20,zero
18006b6c:	d9002917 	ldw	r4,164(sp)
18006b70:	dc401a04 	addi	r17,sp,104
18006b74:	908003cc 	andi	r2,r18,15
18006b78:	a006973a 	slli	r3,r20,28
18006b7c:	2085883a 	add	r2,r4,r2
18006b80:	9024d13a 	srli	r18,r18,4
18006b84:	10800003 	ldbu	r2,0(r2)
18006b88:	a028d13a 	srli	r20,r20,4
18006b8c:	8c7fffc4 	addi	r17,r17,-1
18006b90:	1ca4b03a 	or	r18,r3,r18
18006b94:	88800005 	stb	r2,0(r17)
18006b98:	9504b03a 	or	r2,r18,r20
18006b9c:	103ff51e 	bne	r2,zero,18006b74 <__alt_data_end+0xf8006b74>
18006ba0:	d8801e17 	ldw	r2,120(sp)
18006ba4:	1469c83a 	sub	r20,r2,r17
18006ba8:	00001906 	br	18006c10 <___svfiprintf_internal_r+0x490>
18006bac:	8821883a 	mov	r16,r17
18006bb0:	dc402103 	ldbu	r17,132(sp)
18006bb4:	b811883a 	mov	r8,r23
18006bb8:	8c403fcc 	andi	r17,r17,255
18006bbc:	8803d01e 	bne	r17,zero,18007b00 <___svfiprintf_internal_r+0x1380>
18006bc0:	8080080c 	andi	r2,r16,32
18006bc4:	10016126 	beq	r2,zero,1800714c <___svfiprintf_internal_r+0x9cc>
18006bc8:	d9002417 	ldw	r4,144(sp)
18006bcc:	d9402017 	ldw	r5,128(sp)
18006bd0:	d8001d85 	stb	zero,118(sp)
18006bd4:	20c00204 	addi	r3,r4,8
18006bd8:	24800017 	ldw	r18,0(r4)
18006bdc:	25000117 	ldw	r20,4(r4)
18006be0:	28030f16 	blt	r5,zero,18007820 <___svfiprintf_internal_r+0x10a0>
18006be4:	013fdfc4 	movi	r4,-129
18006be8:	9504b03a 	or	r2,r18,r20
18006bec:	d8c02415 	stw	r3,144(sp)
18006bf0:	8120703a 	and	r16,r16,r4
18006bf4:	002b883a 	mov	r21,zero
18006bf8:	1000cd1e 	bne	r2,zero,18006f30 <___svfiprintf_internal_r+0x7b0>
18006bfc:	d8c02017 	ldw	r3,128(sp)
18006c00:	1803141e 	bne	r3,zero,18007854 <___svfiprintf_internal_r+0x10d4>
18006c04:	d8002015 	stw	zero,128(sp)
18006c08:	0029883a 	mov	r20,zero
18006c0c:	dc401a04 	addi	r17,sp,104
18006c10:	dc802017 	ldw	r18,128(sp)
18006c14:	9500010e 	bge	r18,r20,18006c1c <___svfiprintf_internal_r+0x49c>
18006c18:	a025883a 	mov	r18,r20
18006c1c:	ad403fcc 	andi	r21,r21,255
18006c20:	ad40201c 	xori	r21,r21,128
18006c24:	ad7fe004 	addi	r21,r21,-128
18006c28:	a8003f26 	beq	r21,zero,18006d28 <___svfiprintf_internal_r+0x5a8>
18006c2c:	94800044 	addi	r18,r18,1
18006c30:	00003d06 	br	18006d28 <___svfiprintf_internal_r+0x5a8>
18006c34:	00c00044 	movi	r3,1
18006c38:	d8c02105 	stb	r3,132(sp)
18006c3c:	05400ac4 	movi	r21,43
18006c40:	98c00007 	ldb	r3,0(r19)
18006c44:	003f1a06 	br	180068b0 <__alt_data_end+0xf80068b0>
18006c48:	8821883a 	mov	r16,r17
18006c4c:	dc402103 	ldbu	r17,132(sp)
18006c50:	b811883a 	mov	r8,r23
18006c54:	8c403fcc 	andi	r17,r17,255
18006c58:	8803a71e 	bne	r17,zero,18007af8 <___svfiprintf_internal_r+0x1378>
18006c5c:	8080080c 	andi	r2,r16,32
18006c60:	10015726 	beq	r2,zero,180071c0 <___svfiprintf_internal_r+0xa40>
18006c64:	d8c02417 	ldw	r3,144(sp)
18006c68:	d9002017 	ldw	r4,128(sp)
18006c6c:	d8001d85 	stb	zero,118(sp)
18006c70:	18800204 	addi	r2,r3,8
18006c74:	1c800017 	ldw	r18,0(r3)
18006c78:	1d000117 	ldw	r20,4(r3)
18006c7c:	2002db16 	blt	r4,zero,180077ec <___svfiprintf_internal_r+0x106c>
18006c80:	013fdfc4 	movi	r4,-129
18006c84:	9506b03a 	or	r3,r18,r20
18006c88:	d8802415 	stw	r2,144(sp)
18006c8c:	8120703a 	and	r16,r16,r4
18006c90:	18015826 	beq	r3,zero,180071f4 <___svfiprintf_internal_r+0xa74>
18006c94:	002b883a 	mov	r21,zero
18006c98:	dc401a04 	addi	r17,sp,104
18006c9c:	9006d0fa 	srli	r3,r18,3
18006ca0:	a008977a 	slli	r4,r20,29
18006ca4:	a028d0fa 	srli	r20,r20,3
18006ca8:	948001cc 	andi	r18,r18,7
18006cac:	90800c04 	addi	r2,r18,48
18006cb0:	8c7fffc4 	addi	r17,r17,-1
18006cb4:	20e4b03a 	or	r18,r4,r3
18006cb8:	88800005 	stb	r2,0(r17)
18006cbc:	9506b03a 	or	r3,r18,r20
18006cc0:	183ff61e 	bne	r3,zero,18006c9c <__alt_data_end+0xf8006c9c>
18006cc4:	80c0004c 	andi	r3,r16,1
18006cc8:	18028926 	beq	r3,zero,180076f0 <___svfiprintf_internal_r+0xf70>
18006ccc:	10803fcc 	andi	r2,r2,255
18006cd0:	1080201c 	xori	r2,r2,128
18006cd4:	10bfe004 	addi	r2,r2,-128
18006cd8:	00c00c04 	movi	r3,48
18006cdc:	10ffb026 	beq	r2,r3,18006ba0 <__alt_data_end+0xf8006ba0>
18006ce0:	88ffffc5 	stb	r3,-1(r17)
18006ce4:	d8c01e17 	ldw	r3,120(sp)
18006ce8:	88bfffc4 	addi	r2,r17,-1
18006cec:	1023883a 	mov	r17,r2
18006cf0:	18a9c83a 	sub	r20,r3,r2
18006cf4:	003fc606 	br	18006c10 <__alt_data_end+0xf8006c10>
18006cf8:	d8c02417 	ldw	r3,144(sp)
18006cfc:	04800044 	movi	r18,1
18006d00:	8821883a 	mov	r16,r17
18006d04:	18800017 	ldw	r2,0(r3)
18006d08:	18c00104 	addi	r3,r3,4
18006d0c:	b811883a 	mov	r8,r23
18006d10:	d8001d85 	stb	zero,118(sp)
18006d14:	d8801005 	stb	r2,64(sp)
18006d18:	d8c02415 	stw	r3,144(sp)
18006d1c:	9029883a 	mov	r20,r18
18006d20:	dc401004 	addi	r17,sp,64
18006d24:	d8002015 	stw	zero,128(sp)
18006d28:	80c0008c 	andi	r3,r16,2
18006d2c:	d8c02115 	stw	r3,132(sp)
18006d30:	18000126 	beq	r3,zero,18006d38 <___svfiprintf_internal_r+0x5b8>
18006d34:	94800084 	addi	r18,r18,2
18006d38:	80c0210c 	andi	r3,r16,132
18006d3c:	d8c02215 	stw	r3,136(sp)
18006d40:	1801321e 	bne	r3,zero,1800720c <___svfiprintf_internal_r+0xa8c>
18006d44:	d9002517 	ldw	r4,148(sp)
18006d48:	24b9c83a 	sub	fp,r4,r18
18006d4c:	07012f0e 	bge	zero,fp,1800720c <___svfiprintf_internal_r+0xa8c>
18006d50:	02400404 	movi	r9,16
18006d54:	d8c01c17 	ldw	r3,112(sp)
18006d58:	d8801b17 	ldw	r2,108(sp)
18006d5c:	4f03250e 	bge	r9,fp,180079f4 <___svfiprintf_internal_r+0x1274>
18006d60:	01060074 	movhi	r4,6145
18006d64:	21389104 	addi	r4,r4,-7612
18006d68:	dc002a15 	stw	r16,168(sp)
18006d6c:	dc402b15 	stw	r17,172(sp)
18006d70:	d9002815 	stw	r4,160(sp)
18006d74:	e023883a 	mov	r17,fp
18006d78:	482f883a 	mov	r23,r9
18006d7c:	9839883a 	mov	fp,r19
18006d80:	054001c4 	movi	r21,7
18006d84:	9027883a 	mov	r19,r18
18006d88:	dc002717 	ldw	r16,156(sp)
18006d8c:	dc802317 	ldw	r18,140(sp)
18006d90:	00000306 	br	18006da0 <___svfiprintf_internal_r+0x620>
18006d94:	8c7ffc04 	addi	r17,r17,-16
18006d98:	42000204 	addi	r8,r8,8
18006d9c:	bc40130e 	bge	r23,r17,18006dec <___svfiprintf_internal_r+0x66c>
18006da0:	01460074 	movhi	r5,6145
18006da4:	18c00404 	addi	r3,r3,16
18006da8:	10800044 	addi	r2,r2,1
18006dac:	29789104 	addi	r5,r5,-7612
18006db0:	41400015 	stw	r5,0(r8)
18006db4:	45c00115 	stw	r23,4(r8)
18006db8:	d8c01c15 	stw	r3,112(sp)
18006dbc:	d8801b15 	stw	r2,108(sp)
18006dc0:	a8bff40e 	bge	r21,r2,18006d94 <__alt_data_end+0xf8006d94>
18006dc4:	d9801a04 	addi	r6,sp,104
18006dc8:	900b883a 	mov	r5,r18
18006dcc:	8009883a 	mov	r4,r16
18006dd0:	80065b00 	call	180065b0 <__ssprint_r>
18006dd4:	1001aa1e 	bne	r2,zero,18007480 <___svfiprintf_internal_r+0xd00>
18006dd8:	8c7ffc04 	addi	r17,r17,-16
18006ddc:	d8c01c17 	ldw	r3,112(sp)
18006de0:	d8801b17 	ldw	r2,108(sp)
18006de4:	d811883a 	mov	r8,sp
18006de8:	bc7fed16 	blt	r23,r17,18006da0 <__alt_data_end+0xf8006da0>
18006dec:	9825883a 	mov	r18,r19
18006df0:	dc002a17 	ldw	r16,168(sp)
18006df4:	e027883a 	mov	r19,fp
18006df8:	8839883a 	mov	fp,r17
18006dfc:	dc402b17 	ldw	r17,172(sp)
18006e00:	d9002817 	ldw	r4,160(sp)
18006e04:	e0c7883a 	add	r3,fp,r3
18006e08:	10800044 	addi	r2,r2,1
18006e0c:	41000015 	stw	r4,0(r8)
18006e10:	47000115 	stw	fp,4(r8)
18006e14:	d8c01c15 	stw	r3,112(sp)
18006e18:	d8801b15 	stw	r2,108(sp)
18006e1c:	010001c4 	movi	r4,7
18006e20:	20821616 	blt	r4,r2,1800767c <___svfiprintf_internal_r+0xefc>
18006e24:	42000204 	addi	r8,r8,8
18006e28:	0000fa06 	br	18007214 <___svfiprintf_internal_r+0xa94>
18006e2c:	8821883a 	mov	r16,r17
18006e30:	dc402103 	ldbu	r17,132(sp)
18006e34:	b811883a 	mov	r8,r23
18006e38:	8c403fcc 	andi	r17,r17,255
18006e3c:	8803361e 	bne	r17,zero,18007b18 <___svfiprintf_internal_r+0x1398>
18006e40:	01460074 	movhi	r5,6145
18006e44:	29782704 	addi	r5,r5,-8036
18006e48:	d9402915 	stw	r5,164(sp)
18006e4c:	8080080c 	andi	r2,r16,32
18006e50:	103f331e 	bne	r2,zero,18006b20 <__alt_data_end+0xf8006b20>
18006e54:	8080040c 	andi	r2,r16,16
18006e58:	1002551e 	bne	r2,zero,180077b0 <___svfiprintf_internal_r+0x1030>
18006e5c:	8080100c 	andi	r2,r16,64
18006e60:	1002a626 	beq	r2,zero,180078fc <___svfiprintf_internal_r+0x117c>
18006e64:	d8802417 	ldw	r2,144(sp)
18006e68:	0029883a 	mov	r20,zero
18006e6c:	1480000b 	ldhu	r18,0(r2)
18006e70:	10800104 	addi	r2,r2,4
18006e74:	d8802415 	stw	r2,144(sp)
18006e78:	003f2e06 	br	18006b34 <__alt_data_end+0xf8006b34>
18006e7c:	8821883a 	mov	r16,r17
18006e80:	dc402103 	ldbu	r17,132(sp)
18006e84:	b811883a 	mov	r8,r23
18006e88:	8c403fcc 	andi	r17,r17,255
18006e8c:	88030b1e 	bne	r17,zero,18007abc <___svfiprintf_internal_r+0x133c>
18006e90:	8080080c 	andi	r2,r16,32
18006e94:	1002271e 	bne	r2,zero,18007734 <___svfiprintf_internal_r+0xfb4>
18006e98:	8080040c 	andi	r2,r16,16
18006e9c:	10028e26 	beq	r2,zero,180078d8 <___svfiprintf_internal_r+0x1158>
18006ea0:	d8c02417 	ldw	r3,144(sp)
18006ea4:	d9002617 	ldw	r4,152(sp)
18006ea8:	18800017 	ldw	r2,0(r3)
18006eac:	18c00104 	addi	r3,r3,4
18006eb0:	d8c02415 	stw	r3,144(sp)
18006eb4:	11000015 	stw	r4,0(r2)
18006eb8:	003e5306 	br	18006808 <__alt_data_end+0xf8006808>
18006ebc:	98c00007 	ldb	r3,0(r19)
18006ec0:	01401b04 	movi	r5,108
18006ec4:	19424f26 	beq	r3,r5,18007804 <___svfiprintf_internal_r+0x1084>
18006ec8:	8c400414 	ori	r17,r17,16
18006ecc:	003e7806 	br	180068b0 <__alt_data_end+0xf80068b0>
18006ed0:	8c401014 	ori	r17,r17,64
18006ed4:	98c00007 	ldb	r3,0(r19)
18006ed8:	003e7506 	br	180068b0 <__alt_data_end+0xf80068b0>
18006edc:	8821883a 	mov	r16,r17
18006ee0:	dc402103 	ldbu	r17,132(sp)
18006ee4:	b811883a 	mov	r8,r23
18006ee8:	8c403fcc 	andi	r17,r17,255
18006eec:	8802fe1e 	bne	r17,zero,18007ae8 <___svfiprintf_internal_r+0x1368>
18006ef0:	8080080c 	andi	r2,r16,32
18006ef4:	10004626 	beq	r2,zero,18007010 <___svfiprintf_internal_r+0x890>
18006ef8:	d9002417 	ldw	r4,144(sp)
18006efc:	20800117 	ldw	r2,4(r4)
18006f00:	24800017 	ldw	r18,0(r4)
18006f04:	21000204 	addi	r4,r4,8
18006f08:	d9002415 	stw	r4,144(sp)
18006f0c:	1029883a 	mov	r20,r2
18006f10:	10004a16 	blt	r2,zero,1800703c <___svfiprintf_internal_r+0x8bc>
18006f14:	d9002017 	ldw	r4,128(sp)
18006f18:	dd401d83 	ldbu	r21,118(sp)
18006f1c:	2001eb16 	blt	r4,zero,180076cc <___svfiprintf_internal_r+0xf4c>
18006f20:	00ffdfc4 	movi	r3,-129
18006f24:	9504b03a 	or	r2,r18,r20
18006f28:	80e0703a 	and	r16,r16,r3
18006f2c:	103f3326 	beq	r2,zero,18006bfc <__alt_data_end+0xf8006bfc>
18006f30:	a0009426 	beq	r20,zero,18007184 <___svfiprintf_internal_r+0xa04>
18006f34:	dc401a04 	addi	r17,sp,104
18006f38:	402f883a 	mov	r23,r8
18006f3c:	9009883a 	mov	r4,r18
18006f40:	a00b883a 	mov	r5,r20
18006f44:	01800284 	movi	r6,10
18006f48:	000f883a 	mov	r7,zero
18006f4c:	8008f200 	call	18008f20 <__umoddi3>
18006f50:	10800c04 	addi	r2,r2,48
18006f54:	8c7fffc4 	addi	r17,r17,-1
18006f58:	9009883a 	mov	r4,r18
18006f5c:	a00b883a 	mov	r5,r20
18006f60:	88800005 	stb	r2,0(r17)
18006f64:	01800284 	movi	r6,10
18006f68:	000f883a 	mov	r7,zero
18006f6c:	80089240 	call	18008924 <__udivdi3>
18006f70:	1025883a 	mov	r18,r2
18006f74:	10c4b03a 	or	r2,r2,r3
18006f78:	1829883a 	mov	r20,r3
18006f7c:	103fef1e 	bne	r2,zero,18006f3c <__alt_data_end+0xf8006f3c>
18006f80:	d9001e17 	ldw	r4,120(sp)
18006f84:	b811883a 	mov	r8,r23
18006f88:	2469c83a 	sub	r20,r4,r17
18006f8c:	003f2006 	br	18006c10 <__alt_data_end+0xf8006c10>
18006f90:	d8802417 	ldw	r2,144(sp)
18006f94:	8821883a 	mov	r16,r17
18006f98:	d8001d85 	stb	zero,118(sp)
18006f9c:	14400017 	ldw	r17,0(r2)
18006fa0:	b811883a 	mov	r8,r23
18006fa4:	15c00104 	addi	r23,r2,4
18006fa8:	88026c26 	beq	r17,zero,1800795c <___svfiprintf_internal_r+0x11dc>
18006fac:	d8c02017 	ldw	r3,128(sp)
18006fb0:	18025f16 	blt	r3,zero,18007930 <___svfiprintf_internal_r+0x11b0>
18006fb4:	180d883a 	mov	r6,r3
18006fb8:	000b883a 	mov	r5,zero
18006fbc:	8809883a 	mov	r4,r17
18006fc0:	da002d15 	stw	r8,180(sp)
18006fc4:	80051280 	call	18005128 <memchr>
18006fc8:	da002d17 	ldw	r8,180(sp)
18006fcc:	1002a526 	beq	r2,zero,18007a64 <___svfiprintf_internal_r+0x12e4>
18006fd0:	1469c83a 	sub	r20,r2,r17
18006fd4:	dd401d83 	ldbu	r21,118(sp)
18006fd8:	ddc02415 	stw	r23,144(sp)
18006fdc:	d8002015 	stw	zero,128(sp)
18006fe0:	003f0b06 	br	18006c10 <__alt_data_end+0xf8006c10>
18006fe4:	8c400814 	ori	r17,r17,32
18006fe8:	98c00007 	ldb	r3,0(r19)
18006fec:	003e3006 	br	180068b0 <__alt_data_end+0xf80068b0>
18006ff0:	8821883a 	mov	r16,r17
18006ff4:	dc402103 	ldbu	r17,132(sp)
18006ff8:	b811883a 	mov	r8,r23
18006ffc:	8c403fcc 	andi	r17,r17,255
18007000:	8802b01e 	bne	r17,zero,18007ac4 <___svfiprintf_internal_r+0x1344>
18007004:	84000414 	ori	r16,r16,16
18007008:	8080080c 	andi	r2,r16,32
1800700c:	103fba1e 	bne	r2,zero,18006ef8 <__alt_data_end+0xf8006ef8>
18007010:	8080040c 	andi	r2,r16,16
18007014:	1001df1e 	bne	r2,zero,18007794 <___svfiprintf_internal_r+0x1014>
18007018:	8080100c 	andi	r2,r16,64
1800701c:	10023d26 	beq	r2,zero,18007914 <___svfiprintf_internal_r+0x1194>
18007020:	d8802417 	ldw	r2,144(sp)
18007024:	1480000f 	ldh	r18,0(r2)
18007028:	10800104 	addi	r2,r2,4
1800702c:	d8802415 	stw	r2,144(sp)
18007030:	9029d7fa 	srai	r20,r18,31
18007034:	a005883a 	mov	r2,r20
18007038:	103fb60e 	bge	r2,zero,18006f14 <__alt_data_end+0xf8006f14>
1800703c:	d9402017 	ldw	r5,128(sp)
18007040:	04a5c83a 	sub	r18,zero,r18
18007044:	05400b44 	movi	r21,45
18007048:	9004c03a 	cmpne	r2,r18,zero
1800704c:	0529c83a 	sub	r20,zero,r20
18007050:	dd401d85 	stb	r21,118(sp)
18007054:	a0a9c83a 	sub	r20,r20,r2
18007058:	28026c16 	blt	r5,zero,18007a0c <___svfiprintf_internal_r+0x128c>
1800705c:	00bfdfc4 	movi	r2,-129
18007060:	80a0703a 	and	r16,r16,r2
18007064:	a03fb31e 	bne	r20,zero,18006f34 <__alt_data_end+0xf8006f34>
18007068:	00004606 	br	18007184 <___svfiprintf_internal_r+0xa04>
1800706c:	9839883a 	mov	fp,r19
18007070:	d8002515 	stw	zero,148(sp)
18007074:	1c3ff404 	addi	r16,r3,-48
18007078:	0009883a 	mov	r4,zero
1800707c:	01400284 	movi	r5,10
18007080:	8000ad40 	call	18000ad4 <__mulsi3>
18007084:	e0c00007 	ldb	r3,0(fp)
18007088:	8089883a 	add	r4,r16,r2
1800708c:	9cc00044 	addi	r19,r19,1
18007090:	1c3ff404 	addi	r16,r3,-48
18007094:	9839883a 	mov	fp,r19
18007098:	a43ff82e 	bgeu	r20,r16,1800707c <__alt_data_end+0xf800707c>
1800709c:	d9002515 	stw	r4,148(sp)
180070a0:	18bff804 	addi	r2,r3,-32
180070a4:	90be052e 	bgeu	r18,r2,180068bc <__alt_data_end+0xf80068bc>
180070a8:	8821883a 	mov	r16,r17
180070ac:	dc402103 	ldbu	r17,132(sp)
180070b0:	b811883a 	mov	r8,r23
180070b4:	8c403fcc 	andi	r17,r17,255
180070b8:	88028d1e 	bne	r17,zero,18007af0 <___svfiprintf_internal_r+0x1370>
180070bc:	1800ea26 	beq	r3,zero,18007468 <___svfiprintf_internal_r+0xce8>
180070c0:	04800044 	movi	r18,1
180070c4:	d8c01005 	stb	r3,64(sp)
180070c8:	d8001d85 	stb	zero,118(sp)
180070cc:	9029883a 	mov	r20,r18
180070d0:	dc401004 	addi	r17,sp,64
180070d4:	003f1306 	br	18006d24 <__alt_data_end+0xf8006d24>
180070d8:	8c402014 	ori	r17,r17,128
180070dc:	98c00007 	ldb	r3,0(r19)
180070e0:	003df306 	br	180068b0 <__alt_data_end+0xf80068b0>
180070e4:	98c00007 	ldb	r3,0(r19)
180070e8:	01000a84 	movi	r4,42
180070ec:	9f000044 	addi	fp,r19,1
180070f0:	19026326 	beq	r3,r4,18007a80 <___svfiprintf_internal_r+0x1300>
180070f4:	1c3ff404 	addi	r16,r3,-48
180070f8:	0009883a 	mov	r4,zero
180070fc:	a4025636 	bltu	r20,r16,18007a58 <___svfiprintf_internal_r+0x12d8>
18007100:	01400284 	movi	r5,10
18007104:	8000ad40 	call	18000ad4 <__mulsi3>
18007108:	e0c00007 	ldb	r3,0(fp)
1800710c:	1409883a 	add	r4,r2,r16
18007110:	e4c00044 	addi	r19,fp,1
18007114:	1c3ff404 	addi	r16,r3,-48
18007118:	9839883a 	mov	fp,r19
1800711c:	a43ff82e 	bgeu	r20,r16,18007100 <__alt_data_end+0xf8007100>
18007120:	20020c16 	blt	r4,zero,18007954 <___svfiprintf_internal_r+0x11d4>
18007124:	d9002015 	stw	r4,128(sp)
18007128:	003de206 	br	180068b4 <__alt_data_end+0xf80068b4>
1800712c:	8821883a 	mov	r16,r17
18007130:	dc402103 	ldbu	r17,132(sp)
18007134:	b811883a 	mov	r8,r23
18007138:	8c403fcc 	andi	r17,r17,255
1800713c:	8802721e 	bne	r17,zero,18007b08 <___svfiprintf_internal_r+0x1388>
18007140:	84000414 	ori	r16,r16,16
18007144:	8080080c 	andi	r2,r16,32
18007148:	103e9f1e 	bne	r2,zero,18006bc8 <__alt_data_end+0xf8006bc8>
1800714c:	8080040c 	andi	r2,r16,16
18007150:	10015326 	beq	r2,zero,180076a0 <___svfiprintf_internal_r+0xf20>
18007154:	d8c02417 	ldw	r3,144(sp)
18007158:	d9002017 	ldw	r4,128(sp)
1800715c:	d8001d85 	stb	zero,118(sp)
18007160:	18800104 	addi	r2,r3,4
18007164:	1c800017 	ldw	r18,0(r3)
18007168:	0029883a 	mov	r20,zero
1800716c:	20015516 	blt	r4,zero,180076c4 <___svfiprintf_internal_r+0xf44>
18007170:	00ffdfc4 	movi	r3,-129
18007174:	d8802415 	stw	r2,144(sp)
18007178:	80e0703a 	and	r16,r16,r3
1800717c:	002b883a 	mov	r21,zero
18007180:	903e9e26 	beq	r18,zero,18006bfc <__alt_data_end+0xf8006bfc>
18007184:	00800244 	movi	r2,9
18007188:	14bf6a36 	bltu	r2,r18,18006f34 <__alt_data_end+0xf8006f34>
1800718c:	94800c04 	addi	r18,r18,48
18007190:	dc8019c5 	stb	r18,103(sp)
18007194:	dd002c17 	ldw	r20,176(sp)
18007198:	dc4019c4 	addi	r17,sp,103
1800719c:	003e9c06 	br	18006c10 <__alt_data_end+0xf8006c10>
180071a0:	8821883a 	mov	r16,r17
180071a4:	dc402103 	ldbu	r17,132(sp)
180071a8:	b811883a 	mov	r8,r23
180071ac:	8c403fcc 	andi	r17,r17,255
180071b0:	8802571e 	bne	r17,zero,18007b10 <___svfiprintf_internal_r+0x1390>
180071b4:	84000414 	ori	r16,r16,16
180071b8:	8080080c 	andi	r2,r16,32
180071bc:	103ea91e 	bne	r2,zero,18006c64 <__alt_data_end+0xf8006c64>
180071c0:	8080040c 	andi	r2,r16,16
180071c4:	10018026 	beq	r2,zero,180077c8 <___svfiprintf_internal_r+0x1048>
180071c8:	d9402417 	ldw	r5,144(sp)
180071cc:	d8c02017 	ldw	r3,128(sp)
180071d0:	d8001d85 	stb	zero,118(sp)
180071d4:	28800104 	addi	r2,r5,4
180071d8:	2c800017 	ldw	r18,0(r5)
180071dc:	0029883a 	mov	r20,zero
180071e0:	18018216 	blt	r3,zero,180077ec <___svfiprintf_internal_r+0x106c>
180071e4:	00ffdfc4 	movi	r3,-129
180071e8:	d8802415 	stw	r2,144(sp)
180071ec:	80e0703a 	and	r16,r16,r3
180071f0:	903ea81e 	bne	r18,zero,18006c94 <__alt_data_end+0xf8006c94>
180071f4:	d8802017 	ldw	r2,128(sp)
180071f8:	002b883a 	mov	r21,zero
180071fc:	1001f226 	beq	r2,zero,180079c8 <___svfiprintf_internal_r+0x1248>
18007200:	0025883a 	mov	r18,zero
18007204:	0029883a 	mov	r20,zero
18007208:	003ea306 	br	18006c98 <__alt_data_end+0xf8006c98>
1800720c:	d8c01c17 	ldw	r3,112(sp)
18007210:	d8801b17 	ldw	r2,108(sp)
18007214:	d9001d87 	ldb	r4,118(sp)
18007218:	20000b26 	beq	r4,zero,18007248 <___svfiprintf_internal_r+0xac8>
1800721c:	d9001d84 	addi	r4,sp,118
18007220:	18c00044 	addi	r3,r3,1
18007224:	10800044 	addi	r2,r2,1
18007228:	41000015 	stw	r4,0(r8)
1800722c:	01000044 	movi	r4,1
18007230:	41000115 	stw	r4,4(r8)
18007234:	d8c01c15 	stw	r3,112(sp)
18007238:	d8801b15 	stw	r2,108(sp)
1800723c:	010001c4 	movi	r4,7
18007240:	2080f316 	blt	r4,r2,18007610 <___svfiprintf_internal_r+0xe90>
18007244:	42000204 	addi	r8,r8,8
18007248:	d9402117 	ldw	r5,132(sp)
1800724c:	28000b26 	beq	r5,zero,1800727c <___svfiprintf_internal_r+0xafc>
18007250:	d9001d04 	addi	r4,sp,116
18007254:	18c00084 	addi	r3,r3,2
18007258:	10800044 	addi	r2,r2,1
1800725c:	41000015 	stw	r4,0(r8)
18007260:	01000084 	movi	r4,2
18007264:	41000115 	stw	r4,4(r8)
18007268:	d8c01c15 	stw	r3,112(sp)
1800726c:	d8801b15 	stw	r2,108(sp)
18007270:	010001c4 	movi	r4,7
18007274:	2080ef16 	blt	r4,r2,18007634 <___svfiprintf_internal_r+0xeb4>
18007278:	42000204 	addi	r8,r8,8
1800727c:	d9402217 	ldw	r5,136(sp)
18007280:	01002004 	movi	r4,128
18007284:	29008f26 	beq	r5,r4,180074c4 <___svfiprintf_internal_r+0xd44>
18007288:	d9002017 	ldw	r4,128(sp)
1800728c:	252fc83a 	sub	r23,r4,r20
18007290:	05c0310e 	bge	zero,r23,18007358 <___svfiprintf_internal_r+0xbd8>
18007294:	07000404 	movi	fp,16
18007298:	e5c17d0e 	bge	fp,r23,18007890 <___svfiprintf_internal_r+0x1110>
1800729c:	01060074 	movhi	r4,6145
180072a0:	21388d04 	addi	r4,r4,-7628
180072a4:	dc002015 	stw	r16,128(sp)
180072a8:	dc402215 	stw	r17,136(sp)
180072ac:	d9002115 	stw	r4,132(sp)
180072b0:	b823883a 	mov	r17,r23
180072b4:	054001c4 	movi	r21,7
180072b8:	982f883a 	mov	r23,r19
180072bc:	dc002717 	ldw	r16,156(sp)
180072c0:	9027883a 	mov	r19,r18
180072c4:	dc802317 	ldw	r18,140(sp)
180072c8:	00000306 	br	180072d8 <___svfiprintf_internal_r+0xb58>
180072cc:	8c7ffc04 	addi	r17,r17,-16
180072d0:	42000204 	addi	r8,r8,8
180072d4:	e440110e 	bge	fp,r17,1800731c <___svfiprintf_internal_r+0xb9c>
180072d8:	18c00404 	addi	r3,r3,16
180072dc:	10800044 	addi	r2,r2,1
180072e0:	45800015 	stw	r22,0(r8)
180072e4:	47000115 	stw	fp,4(r8)
180072e8:	d8c01c15 	stw	r3,112(sp)
180072ec:	d8801b15 	stw	r2,108(sp)
180072f0:	a8bff60e 	bge	r21,r2,180072cc <__alt_data_end+0xf80072cc>
180072f4:	d9801a04 	addi	r6,sp,104
180072f8:	900b883a 	mov	r5,r18
180072fc:	8009883a 	mov	r4,r16
18007300:	80065b00 	call	180065b0 <__ssprint_r>
18007304:	10005e1e 	bne	r2,zero,18007480 <___svfiprintf_internal_r+0xd00>
18007308:	8c7ffc04 	addi	r17,r17,-16
1800730c:	d8c01c17 	ldw	r3,112(sp)
18007310:	d8801b17 	ldw	r2,108(sp)
18007314:	d811883a 	mov	r8,sp
18007318:	e47fef16 	blt	fp,r17,180072d8 <__alt_data_end+0xf80072d8>
1800731c:	9825883a 	mov	r18,r19
18007320:	dc002017 	ldw	r16,128(sp)
18007324:	b827883a 	mov	r19,r23
18007328:	882f883a 	mov	r23,r17
1800732c:	dc402217 	ldw	r17,136(sp)
18007330:	d9402117 	ldw	r5,132(sp)
18007334:	1dc7883a 	add	r3,r3,r23
18007338:	10800044 	addi	r2,r2,1
1800733c:	41400015 	stw	r5,0(r8)
18007340:	45c00115 	stw	r23,4(r8)
18007344:	d8c01c15 	stw	r3,112(sp)
18007348:	d8801b15 	stw	r2,108(sp)
1800734c:	010001c4 	movi	r4,7
18007350:	2080a616 	blt	r4,r2,180075ec <___svfiprintf_internal_r+0xe6c>
18007354:	42000204 	addi	r8,r8,8
18007358:	a0c7883a 	add	r3,r20,r3
1800735c:	10800044 	addi	r2,r2,1
18007360:	44400015 	stw	r17,0(r8)
18007364:	45000115 	stw	r20,4(r8)
18007368:	d8c01c15 	stw	r3,112(sp)
1800736c:	d8801b15 	stw	r2,108(sp)
18007370:	010001c4 	movi	r4,7
18007374:	20808816 	blt	r4,r2,18007598 <___svfiprintf_internal_r+0xe18>
18007378:	42000204 	addi	r8,r8,8
1800737c:	8400010c 	andi	r16,r16,4
18007380:	80002c26 	beq	r16,zero,18007434 <___svfiprintf_internal_r+0xcb4>
18007384:	d8802517 	ldw	r2,148(sp)
18007388:	14a1c83a 	sub	r16,r2,r18
1800738c:	0400290e 	bge	zero,r16,18007434 <___svfiprintf_internal_r+0xcb4>
18007390:	04400404 	movi	r17,16
18007394:	d8801b17 	ldw	r2,108(sp)
18007398:	8c01a70e 	bge	r17,r16,18007a38 <___svfiprintf_internal_r+0x12b8>
1800739c:	01460074 	movhi	r5,6145
180073a0:	29789104 	addi	r5,r5,-7612
180073a4:	d9402815 	stw	r5,160(sp)
180073a8:	050001c4 	movi	r20,7
180073ac:	dd402717 	ldw	r21,156(sp)
180073b0:	ddc02317 	ldw	r23,140(sp)
180073b4:	00000306 	br	180073c4 <___svfiprintf_internal_r+0xc44>
180073b8:	843ffc04 	addi	r16,r16,-16
180073bc:	42000204 	addi	r8,r8,8
180073c0:	8c00130e 	bge	r17,r16,18007410 <___svfiprintf_internal_r+0xc90>
180073c4:	01060074 	movhi	r4,6145
180073c8:	18c00404 	addi	r3,r3,16
180073cc:	10800044 	addi	r2,r2,1
180073d0:	21389104 	addi	r4,r4,-7612
180073d4:	41000015 	stw	r4,0(r8)
180073d8:	44400115 	stw	r17,4(r8)
180073dc:	d8c01c15 	stw	r3,112(sp)
180073e0:	d8801b15 	stw	r2,108(sp)
180073e4:	a0bff40e 	bge	r20,r2,180073b8 <__alt_data_end+0xf80073b8>
180073e8:	d9801a04 	addi	r6,sp,104
180073ec:	b80b883a 	mov	r5,r23
180073f0:	a809883a 	mov	r4,r21
180073f4:	80065b00 	call	180065b0 <__ssprint_r>
180073f8:	1000211e 	bne	r2,zero,18007480 <___svfiprintf_internal_r+0xd00>
180073fc:	843ffc04 	addi	r16,r16,-16
18007400:	d8c01c17 	ldw	r3,112(sp)
18007404:	d8801b17 	ldw	r2,108(sp)
18007408:	d811883a 	mov	r8,sp
1800740c:	8c3fed16 	blt	r17,r16,180073c4 <__alt_data_end+0xf80073c4>
18007410:	d9402817 	ldw	r5,160(sp)
18007414:	1c07883a 	add	r3,r3,r16
18007418:	10800044 	addi	r2,r2,1
1800741c:	41400015 	stw	r5,0(r8)
18007420:	44000115 	stw	r16,4(r8)
18007424:	d8c01c15 	stw	r3,112(sp)
18007428:	d8801b15 	stw	r2,108(sp)
1800742c:	010001c4 	movi	r4,7
18007430:	2080b516 	blt	r4,r2,18007708 <___svfiprintf_internal_r+0xf88>
18007434:	d8802517 	ldw	r2,148(sp)
18007438:	1480010e 	bge	r2,r18,18007440 <___svfiprintf_internal_r+0xcc0>
1800743c:	9005883a 	mov	r2,r18
18007440:	d9002617 	ldw	r4,152(sp)
18007444:	2089883a 	add	r4,r4,r2
18007448:	d9002615 	stw	r4,152(sp)
1800744c:	18005a1e 	bne	r3,zero,180075b8 <___svfiprintf_internal_r+0xe38>
18007450:	98800007 	ldb	r2,0(r19)
18007454:	d8001b15 	stw	zero,108(sp)
18007458:	d811883a 	mov	r8,sp
1800745c:	103cec1e 	bne	r2,zero,18006810 <__alt_data_end+0xf8006810>
18007460:	9825883a 	mov	r18,r19
18007464:	003d0206 	br	18006870 <__alt_data_end+0xf8006870>
18007468:	d8801c17 	ldw	r2,112(sp)
1800746c:	10000426 	beq	r2,zero,18007480 <___svfiprintf_internal_r+0xd00>
18007470:	d9402317 	ldw	r5,140(sp)
18007474:	d9002717 	ldw	r4,156(sp)
18007478:	d9801a04 	addi	r6,sp,104
1800747c:	80065b00 	call	180065b0 <__ssprint_r>
18007480:	d9402317 	ldw	r5,140(sp)
18007484:	d8802617 	ldw	r2,152(sp)
18007488:	28c0030b 	ldhu	r3,12(r5)
1800748c:	18c0100c 	andi	r3,r3,64
18007490:	18015c1e 	bne	r3,zero,18007a04 <___svfiprintf_internal_r+0x1284>
18007494:	dfc03717 	ldw	ra,220(sp)
18007498:	df003617 	ldw	fp,216(sp)
1800749c:	ddc03517 	ldw	r23,212(sp)
180074a0:	dd803417 	ldw	r22,208(sp)
180074a4:	dd403317 	ldw	r21,204(sp)
180074a8:	dd003217 	ldw	r20,200(sp)
180074ac:	dcc03117 	ldw	r19,196(sp)
180074b0:	dc803017 	ldw	r18,192(sp)
180074b4:	dc402f17 	ldw	r17,188(sp)
180074b8:	dc002e17 	ldw	r16,184(sp)
180074bc:	dec03804 	addi	sp,sp,224
180074c0:	f800283a 	ret
180074c4:	d9002517 	ldw	r4,148(sp)
180074c8:	24afc83a 	sub	r23,r4,r18
180074cc:	05ff6e0e 	bge	zero,r23,18007288 <__alt_data_end+0xf8007288>
180074d0:	07000404 	movi	fp,16
180074d4:	e5c15c0e 	bge	fp,r23,18007a48 <___svfiprintf_internal_r+0x12c8>
180074d8:	01060074 	movhi	r4,6145
180074dc:	21388d04 	addi	r4,r4,-7628
180074e0:	dc002215 	stw	r16,136(sp)
180074e4:	dc402815 	stw	r17,160(sp)
180074e8:	d9002115 	stw	r4,132(sp)
180074ec:	b823883a 	mov	r17,r23
180074f0:	054001c4 	movi	r21,7
180074f4:	982f883a 	mov	r23,r19
180074f8:	dc002717 	ldw	r16,156(sp)
180074fc:	9027883a 	mov	r19,r18
18007500:	dc802317 	ldw	r18,140(sp)
18007504:	00000306 	br	18007514 <___svfiprintf_internal_r+0xd94>
18007508:	8c7ffc04 	addi	r17,r17,-16
1800750c:	42000204 	addi	r8,r8,8
18007510:	e440110e 	bge	fp,r17,18007558 <___svfiprintf_internal_r+0xdd8>
18007514:	18c00404 	addi	r3,r3,16
18007518:	10800044 	addi	r2,r2,1
1800751c:	45800015 	stw	r22,0(r8)
18007520:	47000115 	stw	fp,4(r8)
18007524:	d8c01c15 	stw	r3,112(sp)
18007528:	d8801b15 	stw	r2,108(sp)
1800752c:	a8bff60e 	bge	r21,r2,18007508 <__alt_data_end+0xf8007508>
18007530:	d9801a04 	addi	r6,sp,104
18007534:	900b883a 	mov	r5,r18
18007538:	8009883a 	mov	r4,r16
1800753c:	80065b00 	call	180065b0 <__ssprint_r>
18007540:	103fcf1e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
18007544:	8c7ffc04 	addi	r17,r17,-16
18007548:	d8c01c17 	ldw	r3,112(sp)
1800754c:	d8801b17 	ldw	r2,108(sp)
18007550:	d811883a 	mov	r8,sp
18007554:	e47fef16 	blt	fp,r17,18007514 <__alt_data_end+0xf8007514>
18007558:	9825883a 	mov	r18,r19
1800755c:	dc002217 	ldw	r16,136(sp)
18007560:	b827883a 	mov	r19,r23
18007564:	882f883a 	mov	r23,r17
18007568:	dc402817 	ldw	r17,160(sp)
1800756c:	d9402117 	ldw	r5,132(sp)
18007570:	1dc7883a 	add	r3,r3,r23
18007574:	10800044 	addi	r2,r2,1
18007578:	41400015 	stw	r5,0(r8)
1800757c:	45c00115 	stw	r23,4(r8)
18007580:	d8c01c15 	stw	r3,112(sp)
18007584:	d8801b15 	stw	r2,108(sp)
18007588:	010001c4 	movi	r4,7
1800758c:	2080b716 	blt	r4,r2,1800786c <___svfiprintf_internal_r+0x10ec>
18007590:	42000204 	addi	r8,r8,8
18007594:	003f3c06 	br	18007288 <__alt_data_end+0xf8007288>
18007598:	d9402317 	ldw	r5,140(sp)
1800759c:	d9002717 	ldw	r4,156(sp)
180075a0:	d9801a04 	addi	r6,sp,104
180075a4:	80065b00 	call	180065b0 <__ssprint_r>
180075a8:	103fb51e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
180075ac:	d8c01c17 	ldw	r3,112(sp)
180075b0:	d811883a 	mov	r8,sp
180075b4:	003f7106 	br	1800737c <__alt_data_end+0xf800737c>
180075b8:	d9402317 	ldw	r5,140(sp)
180075bc:	d9002717 	ldw	r4,156(sp)
180075c0:	d9801a04 	addi	r6,sp,104
180075c4:	80065b00 	call	180065b0 <__ssprint_r>
180075c8:	103fa126 	beq	r2,zero,18007450 <__alt_data_end+0xf8007450>
180075cc:	003fac06 	br	18007480 <__alt_data_end+0xf8007480>
180075d0:	d9402317 	ldw	r5,140(sp)
180075d4:	d9002717 	ldw	r4,156(sp)
180075d8:	d9801a04 	addi	r6,sp,104
180075dc:	80065b00 	call	180065b0 <__ssprint_r>
180075e0:	103fa71e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
180075e4:	d811883a 	mov	r8,sp
180075e8:	003c9e06 	br	18006864 <__alt_data_end+0xf8006864>
180075ec:	d9402317 	ldw	r5,140(sp)
180075f0:	d9002717 	ldw	r4,156(sp)
180075f4:	d9801a04 	addi	r6,sp,104
180075f8:	80065b00 	call	180065b0 <__ssprint_r>
180075fc:	103fa01e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
18007600:	d8c01c17 	ldw	r3,112(sp)
18007604:	d8801b17 	ldw	r2,108(sp)
18007608:	d811883a 	mov	r8,sp
1800760c:	003f5206 	br	18007358 <__alt_data_end+0xf8007358>
18007610:	d9402317 	ldw	r5,140(sp)
18007614:	d9002717 	ldw	r4,156(sp)
18007618:	d9801a04 	addi	r6,sp,104
1800761c:	80065b00 	call	180065b0 <__ssprint_r>
18007620:	103f971e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
18007624:	d8c01c17 	ldw	r3,112(sp)
18007628:	d8801b17 	ldw	r2,108(sp)
1800762c:	d811883a 	mov	r8,sp
18007630:	003f0506 	br	18007248 <__alt_data_end+0xf8007248>
18007634:	d9402317 	ldw	r5,140(sp)
18007638:	d9002717 	ldw	r4,156(sp)
1800763c:	d9801a04 	addi	r6,sp,104
18007640:	80065b00 	call	180065b0 <__ssprint_r>
18007644:	103f8e1e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
18007648:	d8c01c17 	ldw	r3,112(sp)
1800764c:	d8801b17 	ldw	r2,108(sp)
18007650:	d811883a 	mov	r8,sp
18007654:	003f0906 	br	1800727c <__alt_data_end+0xf800727c>
18007658:	d9402017 	ldw	r5,128(sp)
1800765c:	d8001d85 	stb	zero,118(sp)
18007660:	28007716 	blt	r5,zero,18007840 <___svfiprintf_internal_r+0x10c0>
18007664:	00ffdfc4 	movi	r3,-129
18007668:	9504b03a 	or	r2,r18,r20
1800766c:	80e0703a 	and	r16,r16,r3
18007670:	103d3926 	beq	r2,zero,18006b58 <__alt_data_end+0xf8006b58>
18007674:	002b883a 	mov	r21,zero
18007678:	003d3c06 	br	18006b6c <__alt_data_end+0xf8006b6c>
1800767c:	d9402317 	ldw	r5,140(sp)
18007680:	d9002717 	ldw	r4,156(sp)
18007684:	d9801a04 	addi	r6,sp,104
18007688:	80065b00 	call	180065b0 <__ssprint_r>
1800768c:	103f7c1e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
18007690:	d8c01c17 	ldw	r3,112(sp)
18007694:	d8801b17 	ldw	r2,108(sp)
18007698:	d811883a 	mov	r8,sp
1800769c:	003edd06 	br	18007214 <__alt_data_end+0xf8007214>
180076a0:	8080100c 	andi	r2,r16,64
180076a4:	d8001d85 	stb	zero,118(sp)
180076a8:	10008426 	beq	r2,zero,180078bc <___svfiprintf_internal_r+0x113c>
180076ac:	d9402417 	ldw	r5,144(sp)
180076b0:	d8c02017 	ldw	r3,128(sp)
180076b4:	0029883a 	mov	r20,zero
180076b8:	28800104 	addi	r2,r5,4
180076bc:	2c80000b 	ldhu	r18,0(r5)
180076c0:	183eab0e 	bge	r3,zero,18007170 <__alt_data_end+0xf8007170>
180076c4:	d8802415 	stw	r2,144(sp)
180076c8:	002b883a 	mov	r21,zero
180076cc:	9504b03a 	or	r2,r18,r20
180076d0:	103e171e 	bne	r2,zero,18006f30 <__alt_data_end+0xf8006f30>
180076d4:	00800044 	movi	r2,1
180076d8:	10803fcc 	andi	r2,r2,255
180076dc:	00c00044 	movi	r3,1
180076e0:	10c05c26 	beq	r2,r3,18007854 <___svfiprintf_internal_r+0x10d4>
180076e4:	00c00084 	movi	r3,2
180076e8:	10fd1e26 	beq	r2,r3,18006b64 <__alt_data_end+0xf8006b64>
180076ec:	003ec406 	br	18007200 <__alt_data_end+0xf8007200>
180076f0:	d9401e17 	ldw	r5,120(sp)
180076f4:	2c69c83a 	sub	r20,r5,r17
180076f8:	003d4506 	br	18006c10 <__alt_data_end+0xf8006c10>
180076fc:	d8802415 	stw	r2,144(sp)
18007700:	98c00007 	ldb	r3,0(r19)
18007704:	003c6a06 	br	180068b0 <__alt_data_end+0xf80068b0>
18007708:	d9402317 	ldw	r5,140(sp)
1800770c:	d9002717 	ldw	r4,156(sp)
18007710:	d9801a04 	addi	r6,sp,104
18007714:	80065b00 	call	180065b0 <__ssprint_r>
18007718:	103f591e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
1800771c:	d8c01c17 	ldw	r3,112(sp)
18007720:	003f4406 	br	18007434 <__alt_data_end+0xf8007434>
18007724:	01460074 	movhi	r5,6145
18007728:	29782c04 	addi	r5,r5,-8016
1800772c:	d9402915 	stw	r5,164(sp)
18007730:	003d0906 	br	18006b58 <__alt_data_end+0xf8006b58>
18007734:	d8c02417 	ldw	r3,144(sp)
18007738:	d9002617 	ldw	r4,152(sp)
1800773c:	d9402417 	ldw	r5,144(sp)
18007740:	18800017 	ldw	r2,0(r3)
18007744:	2007d7fa 	srai	r3,r4,31
18007748:	29400104 	addi	r5,r5,4
1800774c:	d9402415 	stw	r5,144(sp)
18007750:	11000015 	stw	r4,0(r2)
18007754:	10c00115 	stw	r3,4(r2)
18007758:	003c2b06 	br	18006808 <__alt_data_end+0xf8006808>
1800775c:	d8c01d45 	stb	r3,117(sp)
18007760:	d8c02017 	ldw	r3,128(sp)
18007764:	00800c04 	movi	r2,48
18007768:	d8801d05 	stb	r2,116(sp)
1800776c:	d8001d85 	stb	zero,118(sp)
18007770:	80800094 	ori	r2,r16,2
18007774:	1800ac16 	blt	r3,zero,18007a28 <___svfiprintf_internal_r+0x12a8>
18007778:	00bfdfc4 	movi	r2,-129
1800777c:	80a0703a 	and	r16,r16,r2
18007780:	84000094 	ori	r16,r16,2
18007784:	002b883a 	mov	r21,zero
18007788:	003cf806 	br	18006b6c <__alt_data_end+0xf8006b6c>
1800778c:	98c00007 	ldb	r3,0(r19)
18007790:	003c4706 	br	180068b0 <__alt_data_end+0xf80068b0>
18007794:	d9402417 	ldw	r5,144(sp)
18007798:	2c800017 	ldw	r18,0(r5)
1800779c:	29400104 	addi	r5,r5,4
180077a0:	d9402415 	stw	r5,144(sp)
180077a4:	9029d7fa 	srai	r20,r18,31
180077a8:	a005883a 	mov	r2,r20
180077ac:	003dd806 	br	18006f10 <__alt_data_end+0xf8006f10>
180077b0:	d9402417 	ldw	r5,144(sp)
180077b4:	0029883a 	mov	r20,zero
180077b8:	2c800017 	ldw	r18,0(r5)
180077bc:	29400104 	addi	r5,r5,4
180077c0:	d9402415 	stw	r5,144(sp)
180077c4:	003cdb06 	br	18006b34 <__alt_data_end+0xf8006b34>
180077c8:	8080100c 	andi	r2,r16,64
180077cc:	d8001d85 	stb	zero,118(sp)
180077d0:	10003326 	beq	r2,zero,180078a0 <___svfiprintf_internal_r+0x1120>
180077d4:	d9002417 	ldw	r4,144(sp)
180077d8:	d9402017 	ldw	r5,128(sp)
180077dc:	0029883a 	mov	r20,zero
180077e0:	20800104 	addi	r2,r4,4
180077e4:	2480000b 	ldhu	r18,0(r4)
180077e8:	283e7e0e 	bge	r5,zero,180071e4 <__alt_data_end+0xf80071e4>
180077ec:	9506b03a 	or	r3,r18,r20
180077f0:	d8802415 	stw	r2,144(sp)
180077f4:	183d271e 	bne	r3,zero,18006c94 <__alt_data_end+0xf8006c94>
180077f8:	002b883a 	mov	r21,zero
180077fc:	0005883a 	mov	r2,zero
18007800:	003fb506 	br	180076d8 <__alt_data_end+0xf80076d8>
18007804:	98c00043 	ldbu	r3,1(r19)
18007808:	8c400814 	ori	r17,r17,32
1800780c:	9cc00044 	addi	r19,r19,1
18007810:	18c03fcc 	andi	r3,r3,255
18007814:	18c0201c 	xori	r3,r3,128
18007818:	18ffe004 	addi	r3,r3,-128
1800781c:	003c2406 	br	180068b0 <__alt_data_end+0xf80068b0>
18007820:	d8c02415 	stw	r3,144(sp)
18007824:	002b883a 	mov	r21,zero
18007828:	003fa806 	br	180076cc <__alt_data_end+0xf80076cc>
1800782c:	01060074 	movhi	r4,6145
18007830:	21382c04 	addi	r4,r4,-8016
18007834:	d9002915 	stw	r4,164(sp)
18007838:	d8c02415 	stw	r3,144(sp)
1800783c:	1021883a 	mov	r16,r2
18007840:	9504b03a 	or	r2,r18,r20
18007844:	103f8b1e 	bne	r2,zero,18007674 <__alt_data_end+0xf8007674>
18007848:	002b883a 	mov	r21,zero
1800784c:	00800084 	movi	r2,2
18007850:	003fa106 	br	180076d8 <__alt_data_end+0xf80076d8>
18007854:	0025883a 	mov	r18,zero
18007858:	94800c04 	addi	r18,r18,48
1800785c:	dc8019c5 	stb	r18,103(sp)
18007860:	dd002c17 	ldw	r20,176(sp)
18007864:	dc4019c4 	addi	r17,sp,103
18007868:	003ce906 	br	18006c10 <__alt_data_end+0xf8006c10>
1800786c:	d9402317 	ldw	r5,140(sp)
18007870:	d9002717 	ldw	r4,156(sp)
18007874:	d9801a04 	addi	r6,sp,104
18007878:	80065b00 	call	180065b0 <__ssprint_r>
1800787c:	103f001e 	bne	r2,zero,18007480 <__alt_data_end+0xf8007480>
18007880:	d8c01c17 	ldw	r3,112(sp)
18007884:	d8801b17 	ldw	r2,108(sp)
18007888:	d811883a 	mov	r8,sp
1800788c:	003e7e06 	br	18007288 <__alt_data_end+0xf8007288>
18007890:	01460074 	movhi	r5,6145
18007894:	29788d04 	addi	r5,r5,-7628
18007898:	d9402115 	stw	r5,132(sp)
1800789c:	003ea406 	br	18007330 <__alt_data_end+0xf8007330>
180078a0:	d8c02417 	ldw	r3,144(sp)
180078a4:	d9002017 	ldw	r4,128(sp)
180078a8:	0029883a 	mov	r20,zero
180078ac:	18800104 	addi	r2,r3,4
180078b0:	1c800017 	ldw	r18,0(r3)
180078b4:	203e4b0e 	bge	r4,zero,180071e4 <__alt_data_end+0xf80071e4>
180078b8:	003fcc06 	br	180077ec <__alt_data_end+0xf80077ec>
180078bc:	d9002417 	ldw	r4,144(sp)
180078c0:	d9402017 	ldw	r5,128(sp)
180078c4:	0029883a 	mov	r20,zero
180078c8:	20800104 	addi	r2,r4,4
180078cc:	24800017 	ldw	r18,0(r4)
180078d0:	283e270e 	bge	r5,zero,18007170 <__alt_data_end+0xf8007170>
180078d4:	003f7b06 	br	180076c4 <__alt_data_end+0xf80076c4>
180078d8:	8400100c 	andi	r16,r16,64
180078dc:	80003326 	beq	r16,zero,180079ac <___svfiprintf_internal_r+0x122c>
180078e0:	d9402417 	ldw	r5,144(sp)
180078e4:	d8c02617 	ldw	r3,152(sp)
180078e8:	28800017 	ldw	r2,0(r5)
180078ec:	29400104 	addi	r5,r5,4
180078f0:	d9402415 	stw	r5,144(sp)
180078f4:	10c0000d 	sth	r3,0(r2)
180078f8:	003bc306 	br	18006808 <__alt_data_end+0xf8006808>
180078fc:	d9002417 	ldw	r4,144(sp)
18007900:	0029883a 	mov	r20,zero
18007904:	24800017 	ldw	r18,0(r4)
18007908:	21000104 	addi	r4,r4,4
1800790c:	d9002415 	stw	r4,144(sp)
18007910:	003c8806 	br	18006b34 <__alt_data_end+0xf8006b34>
18007914:	d8c02417 	ldw	r3,144(sp)
18007918:	1c800017 	ldw	r18,0(r3)
1800791c:	18c00104 	addi	r3,r3,4
18007920:	d8c02415 	stw	r3,144(sp)
18007924:	9029d7fa 	srai	r20,r18,31
18007928:	a005883a 	mov	r2,r20
1800792c:	003d7806 	br	18006f10 <__alt_data_end+0xf8006f10>
18007930:	8809883a 	mov	r4,r17
18007934:	da002d15 	stw	r8,180(sp)
18007938:	8000c3c0 	call	18000c3c <strlen>
1800793c:	1029883a 	mov	r20,r2
18007940:	dd401d83 	ldbu	r21,118(sp)
18007944:	ddc02415 	stw	r23,144(sp)
18007948:	d8002015 	stw	zero,128(sp)
1800794c:	da002d17 	ldw	r8,180(sp)
18007950:	003caf06 	br	18006c10 <__alt_data_end+0xf8006c10>
18007954:	013fffc4 	movi	r4,-1
18007958:	003df206 	br	18007124 <__alt_data_end+0xf8007124>
1800795c:	dd002017 	ldw	r20,128(sp)
18007960:	00800184 	movi	r2,6
18007964:	1500012e 	bgeu	r2,r20,1800796c <___svfiprintf_internal_r+0x11ec>
18007968:	1029883a 	mov	r20,r2
1800796c:	a025883a 	mov	r18,r20
18007970:	a0004116 	blt	r20,zero,18007a78 <___svfiprintf_internal_r+0x12f8>
18007974:	04460074 	movhi	r17,6145
18007978:	ddc02415 	stw	r23,144(sp)
1800797c:	8c783104 	addi	r17,r17,-7996
18007980:	003ce806 	br	18006d24 <__alt_data_end+0xf8006d24>
18007984:	04001004 	movi	r16,64
18007988:	800b883a 	mov	r5,r16
1800798c:	800491c0 	call	1800491c <_malloc_r>
18007990:	d8c02317 	ldw	r3,140(sp)
18007994:	18800015 	stw	r2,0(r3)
18007998:	18800415 	stw	r2,16(r3)
1800799c:	10004d26 	beq	r2,zero,18007ad4 <___svfiprintf_internal_r+0x1354>
180079a0:	d9402317 	ldw	r5,140(sp)
180079a4:	2c000515 	stw	r16,20(r5)
180079a8:	003b8906 	br	180067d0 <__alt_data_end+0xf80067d0>
180079ac:	d9002417 	ldw	r4,144(sp)
180079b0:	d9402617 	ldw	r5,152(sp)
180079b4:	20800017 	ldw	r2,0(r4)
180079b8:	21000104 	addi	r4,r4,4
180079bc:	d9002415 	stw	r4,144(sp)
180079c0:	11400015 	stw	r5,0(r2)
180079c4:	003b9006 	br	18006808 <__alt_data_end+0xf8006808>
180079c8:	8080004c 	andi	r2,r16,1
180079cc:	002b883a 	mov	r21,zero
180079d0:	10000526 	beq	r2,zero,180079e8 <___svfiprintf_internal_r+0x1268>
180079d4:	00800c04 	movi	r2,48
180079d8:	d88019c5 	stb	r2,103(sp)
180079dc:	dd002c17 	ldw	r20,176(sp)
180079e0:	dc4019c4 	addi	r17,sp,103
180079e4:	003c8a06 	br	18006c10 <__alt_data_end+0xf8006c10>
180079e8:	0029883a 	mov	r20,zero
180079ec:	dc401a04 	addi	r17,sp,104
180079f0:	003c8706 	br	18006c10 <__alt_data_end+0xf8006c10>
180079f4:	01460074 	movhi	r5,6145
180079f8:	29789104 	addi	r5,r5,-7612
180079fc:	d9402815 	stw	r5,160(sp)
18007a00:	003cff06 	br	18006e00 <__alt_data_end+0xf8006e00>
18007a04:	00bfffc4 	movi	r2,-1
18007a08:	003ea206 	br	18007494 <__alt_data_end+0xf8007494>
18007a0c:	00800044 	movi	r2,1
18007a10:	10803fcc 	andi	r2,r2,255
18007a14:	00c00044 	movi	r3,1
18007a18:	10fd4526 	beq	r2,r3,18006f30 <__alt_data_end+0xf8006f30>
18007a1c:	00c00084 	movi	r3,2
18007a20:	10fc5226 	beq	r2,r3,18006b6c <__alt_data_end+0xf8006b6c>
18007a24:	003c9c06 	br	18006c98 <__alt_data_end+0xf8006c98>
18007a28:	1021883a 	mov	r16,r2
18007a2c:	002b883a 	mov	r21,zero
18007a30:	00800084 	movi	r2,2
18007a34:	003ff606 	br	18007a10 <__alt_data_end+0xf8007a10>
18007a38:	01060074 	movhi	r4,6145
18007a3c:	21389104 	addi	r4,r4,-7612
18007a40:	d9002815 	stw	r4,160(sp)
18007a44:	003e7206 	br	18007410 <__alt_data_end+0xf8007410>
18007a48:	01460074 	movhi	r5,6145
18007a4c:	29788d04 	addi	r5,r5,-7628
18007a50:	d9402115 	stw	r5,132(sp)
18007a54:	003ec506 	br	1800756c <__alt_data_end+0xf800756c>
18007a58:	e027883a 	mov	r19,fp
18007a5c:	d8002015 	stw	zero,128(sp)
18007a60:	003b9406 	br	180068b4 <__alt_data_end+0xf80068b4>
18007a64:	dd002017 	ldw	r20,128(sp)
18007a68:	dd401d83 	ldbu	r21,118(sp)
18007a6c:	ddc02415 	stw	r23,144(sp)
18007a70:	d8002015 	stw	zero,128(sp)
18007a74:	003c6606 	br	18006c10 <__alt_data_end+0xf8006c10>
18007a78:	0025883a 	mov	r18,zero
18007a7c:	003fbd06 	br	18007974 <__alt_data_end+0xf8007974>
18007a80:	d9402417 	ldw	r5,144(sp)
18007a84:	d8c02417 	ldw	r3,144(sp)
18007a88:	29400017 	ldw	r5,0(r5)
18007a8c:	19000104 	addi	r4,r3,4
18007a90:	d9002415 	stw	r4,144(sp)
18007a94:	d9402015 	stw	r5,128(sp)
18007a98:	98c00043 	ldbu	r3,1(r19)
18007a9c:	e027883a 	mov	r19,fp
18007aa0:	283f5b0e 	bge	r5,zero,18007810 <__alt_data_end+0xf8007810>
18007aa4:	18c03fcc 	andi	r3,r3,255
18007aa8:	013fffc4 	movi	r4,-1
18007aac:	18c0201c 	xori	r3,r3,128
18007ab0:	d9002015 	stw	r4,128(sp)
18007ab4:	18ffe004 	addi	r3,r3,-128
18007ab8:	003b7d06 	br	180068b0 <__alt_data_end+0xf80068b0>
18007abc:	dd401d85 	stb	r21,118(sp)
18007ac0:	003cf306 	br	18006e90 <__alt_data_end+0xf8006e90>
18007ac4:	dd401d85 	stb	r21,118(sp)
18007ac8:	003d4e06 	br	18007004 <__alt_data_end+0xf8007004>
18007acc:	dd401d85 	stb	r21,118(sp)
18007ad0:	003c0e06 	br	18006b0c <__alt_data_end+0xf8006b0c>
18007ad4:	d9002717 	ldw	r4,156(sp)
18007ad8:	00800304 	movi	r2,12
18007adc:	20800015 	stw	r2,0(r4)
18007ae0:	00bfffc4 	movi	r2,-1
18007ae4:	003e6b06 	br	18007494 <__alt_data_end+0xf8007494>
18007ae8:	dd401d85 	stb	r21,118(sp)
18007aec:	003d0006 	br	18006ef0 <__alt_data_end+0xf8006ef0>
18007af0:	dd401d85 	stb	r21,118(sp)
18007af4:	003d7106 	br	180070bc <__alt_data_end+0xf80070bc>
18007af8:	dd401d85 	stb	r21,118(sp)
18007afc:	003c5706 	br	18006c5c <__alt_data_end+0xf8006c5c>
18007b00:	dd401d85 	stb	r21,118(sp)
18007b04:	003c2e06 	br	18006bc0 <__alt_data_end+0xf8006bc0>
18007b08:	dd401d85 	stb	r21,118(sp)
18007b0c:	003d8c06 	br	18007140 <__alt_data_end+0xf8007140>
18007b10:	dd401d85 	stb	r21,118(sp)
18007b14:	003da706 	br	180071b4 <__alt_data_end+0xf80071b4>
18007b18:	dd401d85 	stb	r21,118(sp)
18007b1c:	003cc806 	br	18006e40 <__alt_data_end+0xf8006e40>

18007b20 <_calloc_r>:
18007b20:	defffe04 	addi	sp,sp,-8
18007b24:	2805883a 	mov	r2,r5
18007b28:	dc000015 	stw	r16,0(sp)
18007b2c:	300b883a 	mov	r5,r6
18007b30:	2021883a 	mov	r16,r4
18007b34:	1009883a 	mov	r4,r2
18007b38:	dfc00115 	stw	ra,4(sp)
18007b3c:	8000ad40 	call	18000ad4 <__mulsi3>
18007b40:	100b883a 	mov	r5,r2
18007b44:	8009883a 	mov	r4,r16
18007b48:	800491c0 	call	1800491c <_malloc_r>
18007b4c:	10002926 	beq	r2,zero,18007bf4 <_calloc_r+0xd4>
18007b50:	11bfff17 	ldw	r6,-4(r2)
18007b54:	1021883a 	mov	r16,r2
18007b58:	00bfff04 	movi	r2,-4
18007b5c:	308c703a 	and	r6,r6,r2
18007b60:	00c00904 	movi	r3,36
18007b64:	308d883a 	add	r6,r6,r2
18007b68:	19801636 	bltu	r3,r6,18007bc4 <_calloc_r+0xa4>
18007b6c:	008004c4 	movi	r2,19
18007b70:	11800b2e 	bgeu	r2,r6,18007ba0 <_calloc_r+0x80>
18007b74:	80000015 	stw	zero,0(r16)
18007b78:	80000115 	stw	zero,4(r16)
18007b7c:	008006c4 	movi	r2,27
18007b80:	11801a2e 	bgeu	r2,r6,18007bec <_calloc_r+0xcc>
18007b84:	80000215 	stw	zero,8(r16)
18007b88:	80000315 	stw	zero,12(r16)
18007b8c:	30c0151e 	bne	r6,r3,18007be4 <_calloc_r+0xc4>
18007b90:	80000415 	stw	zero,16(r16)
18007b94:	80800604 	addi	r2,r16,24
18007b98:	80000515 	stw	zero,20(r16)
18007b9c:	00000106 	br	18007ba4 <_calloc_r+0x84>
18007ba0:	8005883a 	mov	r2,r16
18007ba4:	10000015 	stw	zero,0(r2)
18007ba8:	10000115 	stw	zero,4(r2)
18007bac:	10000215 	stw	zero,8(r2)
18007bb0:	8005883a 	mov	r2,r16
18007bb4:	dfc00117 	ldw	ra,4(sp)
18007bb8:	dc000017 	ldw	r16,0(sp)
18007bbc:	dec00204 	addi	sp,sp,8
18007bc0:	f800283a 	ret
18007bc4:	000b883a 	mov	r5,zero
18007bc8:	8009883a 	mov	r4,r16
18007bcc:	800818c0 	call	1800818c <memset>
18007bd0:	8005883a 	mov	r2,r16
18007bd4:	dfc00117 	ldw	ra,4(sp)
18007bd8:	dc000017 	ldw	r16,0(sp)
18007bdc:	dec00204 	addi	sp,sp,8
18007be0:	f800283a 	ret
18007be4:	80800404 	addi	r2,r16,16
18007be8:	003fee06 	br	18007ba4 <__alt_data_end+0xf8007ba4>
18007bec:	80800204 	addi	r2,r16,8
18007bf0:	003fec06 	br	18007ba4 <__alt_data_end+0xf8007ba4>
18007bf4:	0005883a 	mov	r2,zero
18007bf8:	003fee06 	br	18007bb4 <__alt_data_end+0xf8007bb4>

18007bfc <_malloc_trim_r>:
18007bfc:	defffb04 	addi	sp,sp,-20
18007c00:	dcc00315 	stw	r19,12(sp)
18007c04:	04c60074 	movhi	r19,6145
18007c08:	dc800215 	stw	r18,8(sp)
18007c0c:	dc400115 	stw	r17,4(sp)
18007c10:	dc000015 	stw	r16,0(sp)
18007c14:	dfc00415 	stw	ra,16(sp)
18007c18:	2821883a 	mov	r16,r5
18007c1c:	9cfb1d04 	addi	r19,r19,-5004
18007c20:	2025883a 	mov	r18,r4
18007c24:	800bef00 	call	1800bef0 <__malloc_lock>
18007c28:	98800217 	ldw	r2,8(r19)
18007c2c:	14400117 	ldw	r17,4(r2)
18007c30:	00bfff04 	movi	r2,-4
18007c34:	88a2703a 	and	r17,r17,r2
18007c38:	8c21c83a 	sub	r16,r17,r16
18007c3c:	8403fbc4 	addi	r16,r16,4079
18007c40:	8020d33a 	srli	r16,r16,12
18007c44:	0083ffc4 	movi	r2,4095
18007c48:	843fffc4 	addi	r16,r16,-1
18007c4c:	8020933a 	slli	r16,r16,12
18007c50:	1400060e 	bge	r2,r16,18007c6c <_malloc_trim_r+0x70>
18007c54:	000b883a 	mov	r5,zero
18007c58:	9009883a 	mov	r4,r18
18007c5c:	80064800 	call	18006480 <_sbrk_r>
18007c60:	98c00217 	ldw	r3,8(r19)
18007c64:	1c47883a 	add	r3,r3,r17
18007c68:	10c00a26 	beq	r2,r3,18007c94 <_malloc_trim_r+0x98>
18007c6c:	9009883a 	mov	r4,r18
18007c70:	800bf140 	call	1800bf14 <__malloc_unlock>
18007c74:	0005883a 	mov	r2,zero
18007c78:	dfc00417 	ldw	ra,16(sp)
18007c7c:	dcc00317 	ldw	r19,12(sp)
18007c80:	dc800217 	ldw	r18,8(sp)
18007c84:	dc400117 	ldw	r17,4(sp)
18007c88:	dc000017 	ldw	r16,0(sp)
18007c8c:	dec00504 	addi	sp,sp,20
18007c90:	f800283a 	ret
18007c94:	040bc83a 	sub	r5,zero,r16
18007c98:	9009883a 	mov	r4,r18
18007c9c:	80064800 	call	18006480 <_sbrk_r>
18007ca0:	00ffffc4 	movi	r3,-1
18007ca4:	10c00d26 	beq	r2,r3,18007cdc <_malloc_trim_r+0xe0>
18007ca8:	00c60074 	movhi	r3,6145
18007cac:	18c89204 	addi	r3,r3,8776
18007cb0:	18800017 	ldw	r2,0(r3)
18007cb4:	99000217 	ldw	r4,8(r19)
18007cb8:	8c23c83a 	sub	r17,r17,r16
18007cbc:	8c400054 	ori	r17,r17,1
18007cc0:	1421c83a 	sub	r16,r2,r16
18007cc4:	24400115 	stw	r17,4(r4)
18007cc8:	9009883a 	mov	r4,r18
18007ccc:	1c000015 	stw	r16,0(r3)
18007cd0:	800bf140 	call	1800bf14 <__malloc_unlock>
18007cd4:	00800044 	movi	r2,1
18007cd8:	003fe706 	br	18007c78 <__alt_data_end+0xf8007c78>
18007cdc:	000b883a 	mov	r5,zero
18007ce0:	9009883a 	mov	r4,r18
18007ce4:	80064800 	call	18006480 <_sbrk_r>
18007ce8:	99000217 	ldw	r4,8(r19)
18007cec:	014003c4 	movi	r5,15
18007cf0:	1107c83a 	sub	r3,r2,r4
18007cf4:	28ffdd0e 	bge	r5,r3,18007c6c <__alt_data_end+0xf8007c6c>
18007cf8:	01460074 	movhi	r5,6145
18007cfc:	2940a704 	addi	r5,r5,668
18007d00:	29400017 	ldw	r5,0(r5)
18007d04:	18c00054 	ori	r3,r3,1
18007d08:	20c00115 	stw	r3,4(r4)
18007d0c:	00c60074 	movhi	r3,6145
18007d10:	1145c83a 	sub	r2,r2,r5
18007d14:	18c89204 	addi	r3,r3,8776
18007d18:	18800015 	stw	r2,0(r3)
18007d1c:	003fd306 	br	18007c6c <__alt_data_end+0xf8007c6c>

18007d20 <_free_r>:
18007d20:	28004126 	beq	r5,zero,18007e28 <_free_r+0x108>
18007d24:	defffd04 	addi	sp,sp,-12
18007d28:	dc400115 	stw	r17,4(sp)
18007d2c:	dc000015 	stw	r16,0(sp)
18007d30:	2023883a 	mov	r17,r4
18007d34:	2821883a 	mov	r16,r5
18007d38:	dfc00215 	stw	ra,8(sp)
18007d3c:	800bef00 	call	1800bef0 <__malloc_lock>
18007d40:	81ffff17 	ldw	r7,-4(r16)
18007d44:	00bfff84 	movi	r2,-2
18007d48:	01060074 	movhi	r4,6145
18007d4c:	81bffe04 	addi	r6,r16,-8
18007d50:	3884703a 	and	r2,r7,r2
18007d54:	213b1d04 	addi	r4,r4,-5004
18007d58:	308b883a 	add	r5,r6,r2
18007d5c:	2a400117 	ldw	r9,4(r5)
18007d60:	22000217 	ldw	r8,8(r4)
18007d64:	00ffff04 	movi	r3,-4
18007d68:	48c6703a 	and	r3,r9,r3
18007d6c:	2a005726 	beq	r5,r8,18007ecc <_free_r+0x1ac>
18007d70:	28c00115 	stw	r3,4(r5)
18007d74:	39c0004c 	andi	r7,r7,1
18007d78:	3800091e 	bne	r7,zero,18007da0 <_free_r+0x80>
18007d7c:	823ffe17 	ldw	r8,-8(r16)
18007d80:	22400204 	addi	r9,r4,8
18007d84:	320dc83a 	sub	r6,r6,r8
18007d88:	31c00217 	ldw	r7,8(r6)
18007d8c:	1205883a 	add	r2,r2,r8
18007d90:	3a406526 	beq	r7,r9,18007f28 <_free_r+0x208>
18007d94:	32000317 	ldw	r8,12(r6)
18007d98:	3a000315 	stw	r8,12(r7)
18007d9c:	41c00215 	stw	r7,8(r8)
18007da0:	28cf883a 	add	r7,r5,r3
18007da4:	39c00117 	ldw	r7,4(r7)
18007da8:	39c0004c 	andi	r7,r7,1
18007dac:	38003a26 	beq	r7,zero,18007e98 <_free_r+0x178>
18007db0:	10c00054 	ori	r3,r2,1
18007db4:	30c00115 	stw	r3,4(r6)
18007db8:	3087883a 	add	r3,r6,r2
18007dbc:	18800015 	stw	r2,0(r3)
18007dc0:	00c07fc4 	movi	r3,511
18007dc4:	18801936 	bltu	r3,r2,18007e2c <_free_r+0x10c>
18007dc8:	1004d0fa 	srli	r2,r2,3
18007dcc:	01c00044 	movi	r7,1
18007dd0:	21400117 	ldw	r5,4(r4)
18007dd4:	10c00044 	addi	r3,r2,1
18007dd8:	18c7883a 	add	r3,r3,r3
18007ddc:	1005d0ba 	srai	r2,r2,2
18007de0:	18c7883a 	add	r3,r3,r3
18007de4:	18c7883a 	add	r3,r3,r3
18007de8:	1907883a 	add	r3,r3,r4
18007dec:	3884983a 	sll	r2,r7,r2
18007df0:	19c00017 	ldw	r7,0(r3)
18007df4:	1a3ffe04 	addi	r8,r3,-8
18007df8:	1144b03a 	or	r2,r2,r5
18007dfc:	32000315 	stw	r8,12(r6)
18007e00:	31c00215 	stw	r7,8(r6)
18007e04:	20800115 	stw	r2,4(r4)
18007e08:	19800015 	stw	r6,0(r3)
18007e0c:	39800315 	stw	r6,12(r7)
18007e10:	8809883a 	mov	r4,r17
18007e14:	dfc00217 	ldw	ra,8(sp)
18007e18:	dc400117 	ldw	r17,4(sp)
18007e1c:	dc000017 	ldw	r16,0(sp)
18007e20:	dec00304 	addi	sp,sp,12
18007e24:	800bf141 	jmpi	1800bf14 <__malloc_unlock>
18007e28:	f800283a 	ret
18007e2c:	100ad27a 	srli	r5,r2,9
18007e30:	00c00104 	movi	r3,4
18007e34:	19404a36 	bltu	r3,r5,18007f60 <_free_r+0x240>
18007e38:	100ad1ba 	srli	r5,r2,6
18007e3c:	28c00e44 	addi	r3,r5,57
18007e40:	18c7883a 	add	r3,r3,r3
18007e44:	29400e04 	addi	r5,r5,56
18007e48:	18c7883a 	add	r3,r3,r3
18007e4c:	18c7883a 	add	r3,r3,r3
18007e50:	1909883a 	add	r4,r3,r4
18007e54:	20c00017 	ldw	r3,0(r4)
18007e58:	01c60074 	movhi	r7,6145
18007e5c:	213ffe04 	addi	r4,r4,-8
18007e60:	39fb1d04 	addi	r7,r7,-5004
18007e64:	20c04426 	beq	r4,r3,18007f78 <_free_r+0x258>
18007e68:	01ffff04 	movi	r7,-4
18007e6c:	19400117 	ldw	r5,4(r3)
18007e70:	29ca703a 	and	r5,r5,r7
18007e74:	1140022e 	bgeu	r2,r5,18007e80 <_free_r+0x160>
18007e78:	18c00217 	ldw	r3,8(r3)
18007e7c:	20fffb1e 	bne	r4,r3,18007e6c <__alt_data_end+0xf8007e6c>
18007e80:	19000317 	ldw	r4,12(r3)
18007e84:	31000315 	stw	r4,12(r6)
18007e88:	30c00215 	stw	r3,8(r6)
18007e8c:	21800215 	stw	r6,8(r4)
18007e90:	19800315 	stw	r6,12(r3)
18007e94:	003fde06 	br	18007e10 <__alt_data_end+0xf8007e10>
18007e98:	29c00217 	ldw	r7,8(r5)
18007e9c:	10c5883a 	add	r2,r2,r3
18007ea0:	00c60074 	movhi	r3,6145
18007ea4:	18fb1f04 	addi	r3,r3,-4996
18007ea8:	38c03b26 	beq	r7,r3,18007f98 <_free_r+0x278>
18007eac:	2a000317 	ldw	r8,12(r5)
18007eb0:	11400054 	ori	r5,r2,1
18007eb4:	3087883a 	add	r3,r6,r2
18007eb8:	3a000315 	stw	r8,12(r7)
18007ebc:	41c00215 	stw	r7,8(r8)
18007ec0:	31400115 	stw	r5,4(r6)
18007ec4:	18800015 	stw	r2,0(r3)
18007ec8:	003fbd06 	br	18007dc0 <__alt_data_end+0xf8007dc0>
18007ecc:	39c0004c 	andi	r7,r7,1
18007ed0:	10c5883a 	add	r2,r2,r3
18007ed4:	3800071e 	bne	r7,zero,18007ef4 <_free_r+0x1d4>
18007ed8:	81fffe17 	ldw	r7,-8(r16)
18007edc:	31cdc83a 	sub	r6,r6,r7
18007ee0:	30c00317 	ldw	r3,12(r6)
18007ee4:	31400217 	ldw	r5,8(r6)
18007ee8:	11c5883a 	add	r2,r2,r7
18007eec:	28c00315 	stw	r3,12(r5)
18007ef0:	19400215 	stw	r5,8(r3)
18007ef4:	10c00054 	ori	r3,r2,1
18007ef8:	30c00115 	stw	r3,4(r6)
18007efc:	00c60074 	movhi	r3,6145
18007f00:	18c0a804 	addi	r3,r3,672
18007f04:	18c00017 	ldw	r3,0(r3)
18007f08:	21800215 	stw	r6,8(r4)
18007f0c:	10ffc036 	bltu	r2,r3,18007e10 <__alt_data_end+0xf8007e10>
18007f10:	00860074 	movhi	r2,6145
18007f14:	10888904 	addi	r2,r2,8740
18007f18:	11400017 	ldw	r5,0(r2)
18007f1c:	8809883a 	mov	r4,r17
18007f20:	8007bfc0 	call	18007bfc <_malloc_trim_r>
18007f24:	003fba06 	br	18007e10 <__alt_data_end+0xf8007e10>
18007f28:	28c9883a 	add	r4,r5,r3
18007f2c:	21000117 	ldw	r4,4(r4)
18007f30:	2100004c 	andi	r4,r4,1
18007f34:	2000391e 	bne	r4,zero,1800801c <_free_r+0x2fc>
18007f38:	29c00217 	ldw	r7,8(r5)
18007f3c:	29000317 	ldw	r4,12(r5)
18007f40:	1885883a 	add	r2,r3,r2
18007f44:	10c00054 	ori	r3,r2,1
18007f48:	39000315 	stw	r4,12(r7)
18007f4c:	21c00215 	stw	r7,8(r4)
18007f50:	30c00115 	stw	r3,4(r6)
18007f54:	308d883a 	add	r6,r6,r2
18007f58:	30800015 	stw	r2,0(r6)
18007f5c:	003fac06 	br	18007e10 <__alt_data_end+0xf8007e10>
18007f60:	00c00504 	movi	r3,20
18007f64:	19401536 	bltu	r3,r5,18007fbc <_free_r+0x29c>
18007f68:	28c01704 	addi	r3,r5,92
18007f6c:	18c7883a 	add	r3,r3,r3
18007f70:	294016c4 	addi	r5,r5,91
18007f74:	003fb406 	br	18007e48 <__alt_data_end+0xf8007e48>
18007f78:	280bd0ba 	srai	r5,r5,2
18007f7c:	00c00044 	movi	r3,1
18007f80:	38800117 	ldw	r2,4(r7)
18007f84:	194a983a 	sll	r5,r3,r5
18007f88:	2007883a 	mov	r3,r4
18007f8c:	2884b03a 	or	r2,r5,r2
18007f90:	38800115 	stw	r2,4(r7)
18007f94:	003fbb06 	br	18007e84 <__alt_data_end+0xf8007e84>
18007f98:	21800515 	stw	r6,20(r4)
18007f9c:	21800415 	stw	r6,16(r4)
18007fa0:	10c00054 	ori	r3,r2,1
18007fa4:	31c00315 	stw	r7,12(r6)
18007fa8:	31c00215 	stw	r7,8(r6)
18007fac:	30c00115 	stw	r3,4(r6)
18007fb0:	308d883a 	add	r6,r6,r2
18007fb4:	30800015 	stw	r2,0(r6)
18007fb8:	003f9506 	br	18007e10 <__alt_data_end+0xf8007e10>
18007fbc:	00c01504 	movi	r3,84
18007fc0:	19400536 	bltu	r3,r5,18007fd8 <_free_r+0x2b8>
18007fc4:	100ad33a 	srli	r5,r2,12
18007fc8:	28c01bc4 	addi	r3,r5,111
18007fcc:	18c7883a 	add	r3,r3,r3
18007fd0:	29401b84 	addi	r5,r5,110
18007fd4:	003f9c06 	br	18007e48 <__alt_data_end+0xf8007e48>
18007fd8:	00c05504 	movi	r3,340
18007fdc:	19400536 	bltu	r3,r5,18007ff4 <_free_r+0x2d4>
18007fe0:	100ad3fa 	srli	r5,r2,15
18007fe4:	28c01e04 	addi	r3,r5,120
18007fe8:	18c7883a 	add	r3,r3,r3
18007fec:	29401dc4 	addi	r5,r5,119
18007ff0:	003f9506 	br	18007e48 <__alt_data_end+0xf8007e48>
18007ff4:	00c15504 	movi	r3,1364
18007ff8:	19400536 	bltu	r3,r5,18008010 <_free_r+0x2f0>
18007ffc:	100ad4ba 	srli	r5,r2,18
18008000:	28c01f44 	addi	r3,r5,125
18008004:	18c7883a 	add	r3,r3,r3
18008008:	29401f04 	addi	r5,r5,124
1800800c:	003f8e06 	br	18007e48 <__alt_data_end+0xf8007e48>
18008010:	00c03f84 	movi	r3,254
18008014:	01401f84 	movi	r5,126
18008018:	003f8b06 	br	18007e48 <__alt_data_end+0xf8007e48>
1800801c:	10c00054 	ori	r3,r2,1
18008020:	30c00115 	stw	r3,4(r6)
18008024:	308d883a 	add	r6,r6,r2
18008028:	30800015 	stw	r2,0(r6)
1800802c:	003f7806 	br	18007e10 <__alt_data_end+0xf8007e10>

18008030 <memmove>:
18008030:	2005883a 	mov	r2,r4
18008034:	29000b2e 	bgeu	r5,r4,18008064 <memmove+0x34>
18008038:	298f883a 	add	r7,r5,r6
1800803c:	21c0092e 	bgeu	r4,r7,18008064 <memmove+0x34>
18008040:	2187883a 	add	r3,r4,r6
18008044:	198bc83a 	sub	r5,r3,r6
18008048:	30004826 	beq	r6,zero,1800816c <memmove+0x13c>
1800804c:	39ffffc4 	addi	r7,r7,-1
18008050:	39000003 	ldbu	r4,0(r7)
18008054:	18ffffc4 	addi	r3,r3,-1
18008058:	19000005 	stb	r4,0(r3)
1800805c:	28fffb1e 	bne	r5,r3,1800804c <__alt_data_end+0xf800804c>
18008060:	f800283a 	ret
18008064:	00c003c4 	movi	r3,15
18008068:	1980412e 	bgeu	r3,r6,18008170 <memmove+0x140>
1800806c:	2886b03a 	or	r3,r5,r2
18008070:	18c000cc 	andi	r3,r3,3
18008074:	1800401e 	bne	r3,zero,18008178 <memmove+0x148>
18008078:	33fffc04 	addi	r15,r6,-16
1800807c:	781ed13a 	srli	r15,r15,4
18008080:	28c00104 	addi	r3,r5,4
18008084:	13400104 	addi	r13,r2,4
18008088:	781c913a 	slli	r14,r15,4
1800808c:	2b000204 	addi	r12,r5,8
18008090:	12c00204 	addi	r11,r2,8
18008094:	73800504 	addi	r14,r14,20
18008098:	2a800304 	addi	r10,r5,12
1800809c:	12400304 	addi	r9,r2,12
180080a0:	2b9d883a 	add	r14,r5,r14
180080a4:	2811883a 	mov	r8,r5
180080a8:	100f883a 	mov	r7,r2
180080ac:	41000017 	ldw	r4,0(r8)
180080b0:	39c00404 	addi	r7,r7,16
180080b4:	18c00404 	addi	r3,r3,16
180080b8:	393ffc15 	stw	r4,-16(r7)
180080bc:	193ffc17 	ldw	r4,-16(r3)
180080c0:	6b400404 	addi	r13,r13,16
180080c4:	5ac00404 	addi	r11,r11,16
180080c8:	693ffc15 	stw	r4,-16(r13)
180080cc:	61000017 	ldw	r4,0(r12)
180080d0:	4a400404 	addi	r9,r9,16
180080d4:	42000404 	addi	r8,r8,16
180080d8:	593ffc15 	stw	r4,-16(r11)
180080dc:	51000017 	ldw	r4,0(r10)
180080e0:	63000404 	addi	r12,r12,16
180080e4:	52800404 	addi	r10,r10,16
180080e8:	493ffc15 	stw	r4,-16(r9)
180080ec:	1bbfef1e 	bne	r3,r14,180080ac <__alt_data_end+0xf80080ac>
180080f0:	79000044 	addi	r4,r15,1
180080f4:	2008913a 	slli	r4,r4,4
180080f8:	328003cc 	andi	r10,r6,15
180080fc:	02c000c4 	movi	r11,3
18008100:	1107883a 	add	r3,r2,r4
18008104:	290b883a 	add	r5,r5,r4
18008108:	5a801e2e 	bgeu	r11,r10,18008184 <memmove+0x154>
1800810c:	1813883a 	mov	r9,r3
18008110:	2811883a 	mov	r8,r5
18008114:	500f883a 	mov	r7,r10
18008118:	41000017 	ldw	r4,0(r8)
1800811c:	4a400104 	addi	r9,r9,4
18008120:	39ffff04 	addi	r7,r7,-4
18008124:	493fff15 	stw	r4,-4(r9)
18008128:	42000104 	addi	r8,r8,4
1800812c:	59fffa36 	bltu	r11,r7,18008118 <__alt_data_end+0xf8008118>
18008130:	513fff04 	addi	r4,r10,-4
18008134:	2008d0ba 	srli	r4,r4,2
18008138:	318000cc 	andi	r6,r6,3
1800813c:	21000044 	addi	r4,r4,1
18008140:	2109883a 	add	r4,r4,r4
18008144:	2109883a 	add	r4,r4,r4
18008148:	1907883a 	add	r3,r3,r4
1800814c:	290b883a 	add	r5,r5,r4
18008150:	30000b26 	beq	r6,zero,18008180 <memmove+0x150>
18008154:	198d883a 	add	r6,r3,r6
18008158:	29c00003 	ldbu	r7,0(r5)
1800815c:	18c00044 	addi	r3,r3,1
18008160:	29400044 	addi	r5,r5,1
18008164:	19ffffc5 	stb	r7,-1(r3)
18008168:	19bffb1e 	bne	r3,r6,18008158 <__alt_data_end+0xf8008158>
1800816c:	f800283a 	ret
18008170:	1007883a 	mov	r3,r2
18008174:	003ff606 	br	18008150 <__alt_data_end+0xf8008150>
18008178:	1007883a 	mov	r3,r2
1800817c:	003ff506 	br	18008154 <__alt_data_end+0xf8008154>
18008180:	f800283a 	ret
18008184:	500d883a 	mov	r6,r10
18008188:	003ff106 	br	18008150 <__alt_data_end+0xf8008150>

1800818c <memset>:
1800818c:	20c000cc 	andi	r3,r4,3
18008190:	2005883a 	mov	r2,r4
18008194:	18004426 	beq	r3,zero,180082a8 <memset+0x11c>
18008198:	31ffffc4 	addi	r7,r6,-1
1800819c:	30004026 	beq	r6,zero,180082a0 <memset+0x114>
180081a0:	2813883a 	mov	r9,r5
180081a4:	200d883a 	mov	r6,r4
180081a8:	2007883a 	mov	r3,r4
180081ac:	00000406 	br	180081c0 <memset+0x34>
180081b0:	3a3fffc4 	addi	r8,r7,-1
180081b4:	31800044 	addi	r6,r6,1
180081b8:	38003926 	beq	r7,zero,180082a0 <memset+0x114>
180081bc:	400f883a 	mov	r7,r8
180081c0:	18c00044 	addi	r3,r3,1
180081c4:	32400005 	stb	r9,0(r6)
180081c8:	1a0000cc 	andi	r8,r3,3
180081cc:	403ff81e 	bne	r8,zero,180081b0 <__alt_data_end+0xf80081b0>
180081d0:	010000c4 	movi	r4,3
180081d4:	21c02d2e 	bgeu	r4,r7,1800828c <memset+0x100>
180081d8:	29003fcc 	andi	r4,r5,255
180081dc:	200c923a 	slli	r6,r4,8
180081e0:	3108b03a 	or	r4,r6,r4
180081e4:	200c943a 	slli	r6,r4,16
180081e8:	218cb03a 	or	r6,r4,r6
180081ec:	010003c4 	movi	r4,15
180081f0:	21c0182e 	bgeu	r4,r7,18008254 <memset+0xc8>
180081f4:	3b3ffc04 	addi	r12,r7,-16
180081f8:	6018d13a 	srli	r12,r12,4
180081fc:	1a000104 	addi	r8,r3,4
18008200:	1ac00204 	addi	r11,r3,8
18008204:	6008913a 	slli	r4,r12,4
18008208:	1a800304 	addi	r10,r3,12
1800820c:	1813883a 	mov	r9,r3
18008210:	21000504 	addi	r4,r4,20
18008214:	1909883a 	add	r4,r3,r4
18008218:	49800015 	stw	r6,0(r9)
1800821c:	41800015 	stw	r6,0(r8)
18008220:	59800015 	stw	r6,0(r11)
18008224:	51800015 	stw	r6,0(r10)
18008228:	42000404 	addi	r8,r8,16
1800822c:	4a400404 	addi	r9,r9,16
18008230:	5ac00404 	addi	r11,r11,16
18008234:	52800404 	addi	r10,r10,16
18008238:	413ff71e 	bne	r8,r4,18008218 <__alt_data_end+0xf8008218>
1800823c:	63000044 	addi	r12,r12,1
18008240:	6018913a 	slli	r12,r12,4
18008244:	39c003cc 	andi	r7,r7,15
18008248:	010000c4 	movi	r4,3
1800824c:	1b07883a 	add	r3,r3,r12
18008250:	21c00e2e 	bgeu	r4,r7,1800828c <memset+0x100>
18008254:	1813883a 	mov	r9,r3
18008258:	3811883a 	mov	r8,r7
1800825c:	010000c4 	movi	r4,3
18008260:	49800015 	stw	r6,0(r9)
18008264:	423fff04 	addi	r8,r8,-4
18008268:	4a400104 	addi	r9,r9,4
1800826c:	223ffc36 	bltu	r4,r8,18008260 <__alt_data_end+0xf8008260>
18008270:	393fff04 	addi	r4,r7,-4
18008274:	2008d0ba 	srli	r4,r4,2
18008278:	39c000cc 	andi	r7,r7,3
1800827c:	21000044 	addi	r4,r4,1
18008280:	2109883a 	add	r4,r4,r4
18008284:	2109883a 	add	r4,r4,r4
18008288:	1907883a 	add	r3,r3,r4
1800828c:	38000526 	beq	r7,zero,180082a4 <memset+0x118>
18008290:	19cf883a 	add	r7,r3,r7
18008294:	19400005 	stb	r5,0(r3)
18008298:	18c00044 	addi	r3,r3,1
1800829c:	38fffd1e 	bne	r7,r3,18008294 <__alt_data_end+0xf8008294>
180082a0:	f800283a 	ret
180082a4:	f800283a 	ret
180082a8:	2007883a 	mov	r3,r4
180082ac:	300f883a 	mov	r7,r6
180082b0:	003fc706 	br	180081d0 <__alt_data_end+0xf80081d0>

180082b4 <_realloc_r>:
180082b4:	defff604 	addi	sp,sp,-40
180082b8:	dc800215 	stw	r18,8(sp)
180082bc:	dfc00915 	stw	ra,36(sp)
180082c0:	df000815 	stw	fp,32(sp)
180082c4:	ddc00715 	stw	r23,28(sp)
180082c8:	dd800615 	stw	r22,24(sp)
180082cc:	dd400515 	stw	r21,20(sp)
180082d0:	dd000415 	stw	r20,16(sp)
180082d4:	dcc00315 	stw	r19,12(sp)
180082d8:	dc400115 	stw	r17,4(sp)
180082dc:	dc000015 	stw	r16,0(sp)
180082e0:	3025883a 	mov	r18,r6
180082e4:	2800b726 	beq	r5,zero,180085c4 <_realloc_r+0x310>
180082e8:	282b883a 	mov	r21,r5
180082ec:	2029883a 	mov	r20,r4
180082f0:	800bef00 	call	1800bef0 <__malloc_lock>
180082f4:	a8bfff17 	ldw	r2,-4(r21)
180082f8:	043fff04 	movi	r16,-4
180082fc:	90c002c4 	addi	r3,r18,11
18008300:	01000584 	movi	r4,22
18008304:	acfffe04 	addi	r19,r21,-8
18008308:	1420703a 	and	r16,r2,r16
1800830c:	20c0332e 	bgeu	r4,r3,180083dc <_realloc_r+0x128>
18008310:	047ffe04 	movi	r17,-8
18008314:	1c62703a 	and	r17,r3,r17
18008318:	8807883a 	mov	r3,r17
1800831c:	88005816 	blt	r17,zero,18008480 <_realloc_r+0x1cc>
18008320:	8c805736 	bltu	r17,r18,18008480 <_realloc_r+0x1cc>
18008324:	80c0300e 	bge	r16,r3,180083e8 <_realloc_r+0x134>
18008328:	07060074 	movhi	fp,6145
1800832c:	e73b1d04 	addi	fp,fp,-5004
18008330:	e1c00217 	ldw	r7,8(fp)
18008334:	9c09883a 	add	r4,r19,r16
18008338:	22000117 	ldw	r8,4(r4)
1800833c:	21c06326 	beq	r4,r7,180084cc <_realloc_r+0x218>
18008340:	017fff84 	movi	r5,-2
18008344:	414a703a 	and	r5,r8,r5
18008348:	214b883a 	add	r5,r4,r5
1800834c:	29800117 	ldw	r6,4(r5)
18008350:	3180004c 	andi	r6,r6,1
18008354:	30003f26 	beq	r6,zero,18008454 <_realloc_r+0x1a0>
18008358:	1080004c 	andi	r2,r2,1
1800835c:	10008326 	beq	r2,zero,1800856c <_realloc_r+0x2b8>
18008360:	900b883a 	mov	r5,r18
18008364:	a009883a 	mov	r4,r20
18008368:	800491c0 	call	1800491c <_malloc_r>
1800836c:	1025883a 	mov	r18,r2
18008370:	10011e26 	beq	r2,zero,180087ec <_realloc_r+0x538>
18008374:	a93fff17 	ldw	r4,-4(r21)
18008378:	10fffe04 	addi	r3,r2,-8
1800837c:	00bfff84 	movi	r2,-2
18008380:	2084703a 	and	r2,r4,r2
18008384:	9885883a 	add	r2,r19,r2
18008388:	1880ee26 	beq	r3,r2,18008744 <_realloc_r+0x490>
1800838c:	81bfff04 	addi	r6,r16,-4
18008390:	00800904 	movi	r2,36
18008394:	1180b836 	bltu	r2,r6,18008678 <_realloc_r+0x3c4>
18008398:	00c004c4 	movi	r3,19
1800839c:	19809636 	bltu	r3,r6,180085f8 <_realloc_r+0x344>
180083a0:	9005883a 	mov	r2,r18
180083a4:	a807883a 	mov	r3,r21
180083a8:	19000017 	ldw	r4,0(r3)
180083ac:	11000015 	stw	r4,0(r2)
180083b0:	19000117 	ldw	r4,4(r3)
180083b4:	11000115 	stw	r4,4(r2)
180083b8:	18c00217 	ldw	r3,8(r3)
180083bc:	10c00215 	stw	r3,8(r2)
180083c0:	a80b883a 	mov	r5,r21
180083c4:	a009883a 	mov	r4,r20
180083c8:	8007d200 	call	18007d20 <_free_r>
180083cc:	a009883a 	mov	r4,r20
180083d0:	800bf140 	call	1800bf14 <__malloc_unlock>
180083d4:	9005883a 	mov	r2,r18
180083d8:	00001206 	br	18008424 <_realloc_r+0x170>
180083dc:	00c00404 	movi	r3,16
180083e0:	1823883a 	mov	r17,r3
180083e4:	003fce06 	br	18008320 <__alt_data_end+0xf8008320>
180083e8:	a825883a 	mov	r18,r21
180083ec:	8445c83a 	sub	r2,r16,r17
180083f0:	00c003c4 	movi	r3,15
180083f4:	18802636 	bltu	r3,r2,18008490 <_realloc_r+0x1dc>
180083f8:	99800117 	ldw	r6,4(r19)
180083fc:	9c07883a 	add	r3,r19,r16
18008400:	3180004c 	andi	r6,r6,1
18008404:	3420b03a 	or	r16,r6,r16
18008408:	9c000115 	stw	r16,4(r19)
1800840c:	18800117 	ldw	r2,4(r3)
18008410:	10800054 	ori	r2,r2,1
18008414:	18800115 	stw	r2,4(r3)
18008418:	a009883a 	mov	r4,r20
1800841c:	800bf140 	call	1800bf14 <__malloc_unlock>
18008420:	9005883a 	mov	r2,r18
18008424:	dfc00917 	ldw	ra,36(sp)
18008428:	df000817 	ldw	fp,32(sp)
1800842c:	ddc00717 	ldw	r23,28(sp)
18008430:	dd800617 	ldw	r22,24(sp)
18008434:	dd400517 	ldw	r21,20(sp)
18008438:	dd000417 	ldw	r20,16(sp)
1800843c:	dcc00317 	ldw	r19,12(sp)
18008440:	dc800217 	ldw	r18,8(sp)
18008444:	dc400117 	ldw	r17,4(sp)
18008448:	dc000017 	ldw	r16,0(sp)
1800844c:	dec00a04 	addi	sp,sp,40
18008450:	f800283a 	ret
18008454:	017fff04 	movi	r5,-4
18008458:	414a703a 	and	r5,r8,r5
1800845c:	814d883a 	add	r6,r16,r5
18008460:	30c01f16 	blt	r6,r3,180084e0 <_realloc_r+0x22c>
18008464:	20800317 	ldw	r2,12(r4)
18008468:	20c00217 	ldw	r3,8(r4)
1800846c:	a825883a 	mov	r18,r21
18008470:	3021883a 	mov	r16,r6
18008474:	18800315 	stw	r2,12(r3)
18008478:	10c00215 	stw	r3,8(r2)
1800847c:	003fdb06 	br	180083ec <__alt_data_end+0xf80083ec>
18008480:	00800304 	movi	r2,12
18008484:	a0800015 	stw	r2,0(r20)
18008488:	0005883a 	mov	r2,zero
1800848c:	003fe506 	br	18008424 <__alt_data_end+0xf8008424>
18008490:	98c00117 	ldw	r3,4(r19)
18008494:	9c4b883a 	add	r5,r19,r17
18008498:	11000054 	ori	r4,r2,1
1800849c:	18c0004c 	andi	r3,r3,1
180084a0:	1c62b03a 	or	r17,r3,r17
180084a4:	9c400115 	stw	r17,4(r19)
180084a8:	29000115 	stw	r4,4(r5)
180084ac:	2885883a 	add	r2,r5,r2
180084b0:	10c00117 	ldw	r3,4(r2)
180084b4:	29400204 	addi	r5,r5,8
180084b8:	a009883a 	mov	r4,r20
180084bc:	18c00054 	ori	r3,r3,1
180084c0:	10c00115 	stw	r3,4(r2)
180084c4:	8007d200 	call	18007d20 <_free_r>
180084c8:	003fd306 	br	18008418 <__alt_data_end+0xf8008418>
180084cc:	017fff04 	movi	r5,-4
180084d0:	414a703a 	and	r5,r8,r5
180084d4:	89800404 	addi	r6,r17,16
180084d8:	8151883a 	add	r8,r16,r5
180084dc:	4180590e 	bge	r8,r6,18008644 <_realloc_r+0x390>
180084e0:	1080004c 	andi	r2,r2,1
180084e4:	103f9e1e 	bne	r2,zero,18008360 <__alt_data_end+0xf8008360>
180084e8:	adbffe17 	ldw	r22,-8(r21)
180084ec:	00bfff04 	movi	r2,-4
180084f0:	9dadc83a 	sub	r22,r19,r22
180084f4:	b1800117 	ldw	r6,4(r22)
180084f8:	3084703a 	and	r2,r6,r2
180084fc:	20002026 	beq	r4,zero,18008580 <_realloc_r+0x2cc>
18008500:	80af883a 	add	r23,r16,r2
18008504:	b96f883a 	add	r23,r23,r5
18008508:	21c05f26 	beq	r4,r7,18008688 <_realloc_r+0x3d4>
1800850c:	b8c01c16 	blt	r23,r3,18008580 <_realloc_r+0x2cc>
18008510:	20800317 	ldw	r2,12(r4)
18008514:	20c00217 	ldw	r3,8(r4)
18008518:	81bfff04 	addi	r6,r16,-4
1800851c:	01000904 	movi	r4,36
18008520:	18800315 	stw	r2,12(r3)
18008524:	10c00215 	stw	r3,8(r2)
18008528:	b0c00217 	ldw	r3,8(r22)
1800852c:	b0800317 	ldw	r2,12(r22)
18008530:	b4800204 	addi	r18,r22,8
18008534:	18800315 	stw	r2,12(r3)
18008538:	10c00215 	stw	r3,8(r2)
1800853c:	21801b36 	bltu	r4,r6,180085ac <_realloc_r+0x2f8>
18008540:	008004c4 	movi	r2,19
18008544:	1180352e 	bgeu	r2,r6,1800861c <_realloc_r+0x368>
18008548:	a8800017 	ldw	r2,0(r21)
1800854c:	b0800215 	stw	r2,8(r22)
18008550:	a8800117 	ldw	r2,4(r21)
18008554:	b0800315 	stw	r2,12(r22)
18008558:	008006c4 	movi	r2,27
1800855c:	11807f36 	bltu	r2,r6,1800875c <_realloc_r+0x4a8>
18008560:	b0800404 	addi	r2,r22,16
18008564:	ad400204 	addi	r21,r21,8
18008568:	00002d06 	br	18008620 <_realloc_r+0x36c>
1800856c:	adbffe17 	ldw	r22,-8(r21)
18008570:	00bfff04 	movi	r2,-4
18008574:	9dadc83a 	sub	r22,r19,r22
18008578:	b1000117 	ldw	r4,4(r22)
1800857c:	2084703a 	and	r2,r4,r2
18008580:	b03f7726 	beq	r22,zero,18008360 <__alt_data_end+0xf8008360>
18008584:	80af883a 	add	r23,r16,r2
18008588:	b8ff7516 	blt	r23,r3,18008360 <__alt_data_end+0xf8008360>
1800858c:	b0800317 	ldw	r2,12(r22)
18008590:	b0c00217 	ldw	r3,8(r22)
18008594:	81bfff04 	addi	r6,r16,-4
18008598:	01000904 	movi	r4,36
1800859c:	18800315 	stw	r2,12(r3)
180085a0:	10c00215 	stw	r3,8(r2)
180085a4:	b4800204 	addi	r18,r22,8
180085a8:	21bfe52e 	bgeu	r4,r6,18008540 <__alt_data_end+0xf8008540>
180085ac:	a80b883a 	mov	r5,r21
180085b0:	9009883a 	mov	r4,r18
180085b4:	80080300 	call	18008030 <memmove>
180085b8:	b821883a 	mov	r16,r23
180085bc:	b027883a 	mov	r19,r22
180085c0:	003f8a06 	br	180083ec <__alt_data_end+0xf80083ec>
180085c4:	300b883a 	mov	r5,r6
180085c8:	dfc00917 	ldw	ra,36(sp)
180085cc:	df000817 	ldw	fp,32(sp)
180085d0:	ddc00717 	ldw	r23,28(sp)
180085d4:	dd800617 	ldw	r22,24(sp)
180085d8:	dd400517 	ldw	r21,20(sp)
180085dc:	dd000417 	ldw	r20,16(sp)
180085e0:	dcc00317 	ldw	r19,12(sp)
180085e4:	dc800217 	ldw	r18,8(sp)
180085e8:	dc400117 	ldw	r17,4(sp)
180085ec:	dc000017 	ldw	r16,0(sp)
180085f0:	dec00a04 	addi	sp,sp,40
180085f4:	800491c1 	jmpi	1800491c <_malloc_r>
180085f8:	a8c00017 	ldw	r3,0(r21)
180085fc:	90c00015 	stw	r3,0(r18)
18008600:	a8c00117 	ldw	r3,4(r21)
18008604:	90c00115 	stw	r3,4(r18)
18008608:	00c006c4 	movi	r3,27
1800860c:	19804536 	bltu	r3,r6,18008724 <_realloc_r+0x470>
18008610:	90800204 	addi	r2,r18,8
18008614:	a8c00204 	addi	r3,r21,8
18008618:	003f6306 	br	180083a8 <__alt_data_end+0xf80083a8>
1800861c:	9005883a 	mov	r2,r18
18008620:	a8c00017 	ldw	r3,0(r21)
18008624:	b821883a 	mov	r16,r23
18008628:	b027883a 	mov	r19,r22
1800862c:	10c00015 	stw	r3,0(r2)
18008630:	a8c00117 	ldw	r3,4(r21)
18008634:	10c00115 	stw	r3,4(r2)
18008638:	a8c00217 	ldw	r3,8(r21)
1800863c:	10c00215 	stw	r3,8(r2)
18008640:	003f6a06 	br	180083ec <__alt_data_end+0xf80083ec>
18008644:	9c67883a 	add	r19,r19,r17
18008648:	4445c83a 	sub	r2,r8,r17
1800864c:	e4c00215 	stw	r19,8(fp)
18008650:	10800054 	ori	r2,r2,1
18008654:	98800115 	stw	r2,4(r19)
18008658:	a8bfff17 	ldw	r2,-4(r21)
1800865c:	a009883a 	mov	r4,r20
18008660:	1080004c 	andi	r2,r2,1
18008664:	1462b03a 	or	r17,r2,r17
18008668:	ac7fff15 	stw	r17,-4(r21)
1800866c:	800bf140 	call	1800bf14 <__malloc_unlock>
18008670:	a805883a 	mov	r2,r21
18008674:	003f6b06 	br	18008424 <__alt_data_end+0xf8008424>
18008678:	a80b883a 	mov	r5,r21
1800867c:	9009883a 	mov	r4,r18
18008680:	80080300 	call	18008030 <memmove>
18008684:	003f4e06 	br	180083c0 <__alt_data_end+0xf80083c0>
18008688:	89000404 	addi	r4,r17,16
1800868c:	b93fbc16 	blt	r23,r4,18008580 <__alt_data_end+0xf8008580>
18008690:	b0800317 	ldw	r2,12(r22)
18008694:	b0c00217 	ldw	r3,8(r22)
18008698:	81bfff04 	addi	r6,r16,-4
1800869c:	01000904 	movi	r4,36
180086a0:	18800315 	stw	r2,12(r3)
180086a4:	10c00215 	stw	r3,8(r2)
180086a8:	b4800204 	addi	r18,r22,8
180086ac:	21804336 	bltu	r4,r6,180087bc <_realloc_r+0x508>
180086b0:	008004c4 	movi	r2,19
180086b4:	11803f2e 	bgeu	r2,r6,180087b4 <_realloc_r+0x500>
180086b8:	a8800017 	ldw	r2,0(r21)
180086bc:	b0800215 	stw	r2,8(r22)
180086c0:	a8800117 	ldw	r2,4(r21)
180086c4:	b0800315 	stw	r2,12(r22)
180086c8:	008006c4 	movi	r2,27
180086cc:	11803f36 	bltu	r2,r6,180087cc <_realloc_r+0x518>
180086d0:	b0800404 	addi	r2,r22,16
180086d4:	ad400204 	addi	r21,r21,8
180086d8:	a8c00017 	ldw	r3,0(r21)
180086dc:	10c00015 	stw	r3,0(r2)
180086e0:	a8c00117 	ldw	r3,4(r21)
180086e4:	10c00115 	stw	r3,4(r2)
180086e8:	a8c00217 	ldw	r3,8(r21)
180086ec:	10c00215 	stw	r3,8(r2)
180086f0:	b447883a 	add	r3,r22,r17
180086f4:	bc45c83a 	sub	r2,r23,r17
180086f8:	e0c00215 	stw	r3,8(fp)
180086fc:	10800054 	ori	r2,r2,1
18008700:	18800115 	stw	r2,4(r3)
18008704:	b0800117 	ldw	r2,4(r22)
18008708:	a009883a 	mov	r4,r20
1800870c:	1080004c 	andi	r2,r2,1
18008710:	1462b03a 	or	r17,r2,r17
18008714:	b4400115 	stw	r17,4(r22)
18008718:	800bf140 	call	1800bf14 <__malloc_unlock>
1800871c:	9005883a 	mov	r2,r18
18008720:	003f4006 	br	18008424 <__alt_data_end+0xf8008424>
18008724:	a8c00217 	ldw	r3,8(r21)
18008728:	90c00215 	stw	r3,8(r18)
1800872c:	a8c00317 	ldw	r3,12(r21)
18008730:	90c00315 	stw	r3,12(r18)
18008734:	30801126 	beq	r6,r2,1800877c <_realloc_r+0x4c8>
18008738:	90800404 	addi	r2,r18,16
1800873c:	a8c00404 	addi	r3,r21,16
18008740:	003f1906 	br	180083a8 <__alt_data_end+0xf80083a8>
18008744:	90ffff17 	ldw	r3,-4(r18)
18008748:	00bfff04 	movi	r2,-4
1800874c:	a825883a 	mov	r18,r21
18008750:	1884703a 	and	r2,r3,r2
18008754:	80a1883a 	add	r16,r16,r2
18008758:	003f2406 	br	180083ec <__alt_data_end+0xf80083ec>
1800875c:	a8800217 	ldw	r2,8(r21)
18008760:	b0800415 	stw	r2,16(r22)
18008764:	a8800317 	ldw	r2,12(r21)
18008768:	b0800515 	stw	r2,20(r22)
1800876c:	31000a26 	beq	r6,r4,18008798 <_realloc_r+0x4e4>
18008770:	b0800604 	addi	r2,r22,24
18008774:	ad400404 	addi	r21,r21,16
18008778:	003fa906 	br	18008620 <__alt_data_end+0xf8008620>
1800877c:	a9000417 	ldw	r4,16(r21)
18008780:	90800604 	addi	r2,r18,24
18008784:	a8c00604 	addi	r3,r21,24
18008788:	91000415 	stw	r4,16(r18)
1800878c:	a9000517 	ldw	r4,20(r21)
18008790:	91000515 	stw	r4,20(r18)
18008794:	003f0406 	br	180083a8 <__alt_data_end+0xf80083a8>
18008798:	a8c00417 	ldw	r3,16(r21)
1800879c:	ad400604 	addi	r21,r21,24
180087a0:	b0800804 	addi	r2,r22,32
180087a4:	b0c00615 	stw	r3,24(r22)
180087a8:	a8ffff17 	ldw	r3,-4(r21)
180087ac:	b0c00715 	stw	r3,28(r22)
180087b0:	003f9b06 	br	18008620 <__alt_data_end+0xf8008620>
180087b4:	9005883a 	mov	r2,r18
180087b8:	003fc706 	br	180086d8 <__alt_data_end+0xf80086d8>
180087bc:	a80b883a 	mov	r5,r21
180087c0:	9009883a 	mov	r4,r18
180087c4:	80080300 	call	18008030 <memmove>
180087c8:	003fc906 	br	180086f0 <__alt_data_end+0xf80086f0>
180087cc:	a8800217 	ldw	r2,8(r21)
180087d0:	b0800415 	stw	r2,16(r22)
180087d4:	a8800317 	ldw	r2,12(r21)
180087d8:	b0800515 	stw	r2,20(r22)
180087dc:	31000726 	beq	r6,r4,180087fc <_realloc_r+0x548>
180087e0:	b0800604 	addi	r2,r22,24
180087e4:	ad400404 	addi	r21,r21,16
180087e8:	003fbb06 	br	180086d8 <__alt_data_end+0xf80086d8>
180087ec:	a009883a 	mov	r4,r20
180087f0:	800bf140 	call	1800bf14 <__malloc_unlock>
180087f4:	0005883a 	mov	r2,zero
180087f8:	003f0a06 	br	18008424 <__alt_data_end+0xf8008424>
180087fc:	a8c00417 	ldw	r3,16(r21)
18008800:	ad400604 	addi	r21,r21,24
18008804:	b0800804 	addi	r2,r22,32
18008808:	b0c00615 	stw	r3,24(r22)
1800880c:	a8ffff17 	ldw	r3,-4(r21)
18008810:	b0c00715 	stw	r3,28(r22)
18008814:	003fb006 	br	180086d8 <__alt_data_end+0xf80086d8>

18008818 <__muldi3>:
18008818:	defff604 	addi	sp,sp,-40
1800881c:	dd800615 	stw	r22,24(sp)
18008820:	dd400515 	stw	r21,20(sp)
18008824:	dc400115 	stw	r17,4(sp)
18008828:	357fffcc 	andi	r21,r6,65535
1800882c:	2022d43a 	srli	r17,r4,16
18008830:	25bfffcc 	andi	r22,r4,65535
18008834:	dcc00315 	stw	r19,12(sp)
18008838:	dc800215 	stw	r18,8(sp)
1800883c:	2027883a 	mov	r19,r4
18008840:	2825883a 	mov	r18,r5
18008844:	b009883a 	mov	r4,r22
18008848:	a80b883a 	mov	r5,r21
1800884c:	dfc00915 	stw	ra,36(sp)
18008850:	df000815 	stw	fp,32(sp)
18008854:	ddc00715 	stw	r23,28(sp)
18008858:	3839883a 	mov	fp,r7
1800885c:	302ed43a 	srli	r23,r6,16
18008860:	dd000415 	stw	r20,16(sp)
18008864:	dc000015 	stw	r16,0(sp)
18008868:	3029883a 	mov	r20,r6
1800886c:	8000ad40 	call	18000ad4 <__mulsi3>
18008870:	a80b883a 	mov	r5,r21
18008874:	8809883a 	mov	r4,r17
18008878:	1021883a 	mov	r16,r2
1800887c:	8000ad40 	call	18000ad4 <__mulsi3>
18008880:	8809883a 	mov	r4,r17
18008884:	b80b883a 	mov	r5,r23
18008888:	102b883a 	mov	r21,r2
1800888c:	8000ad40 	call	18000ad4 <__mulsi3>
18008890:	b80b883a 	mov	r5,r23
18008894:	b009883a 	mov	r4,r22
18008898:	1023883a 	mov	r17,r2
1800889c:	8000ad40 	call	18000ad4 <__mulsi3>
180088a0:	8006d43a 	srli	r3,r16,16
180088a4:	1545883a 	add	r2,r2,r21
180088a8:	1885883a 	add	r2,r3,r2
180088ac:	1540022e 	bgeu	r2,r21,180088b8 <__muldi3+0xa0>
180088b0:	00c00074 	movhi	r3,1
180088b4:	88e3883a 	add	r17,r17,r3
180088b8:	1006d43a 	srli	r3,r2,16
180088bc:	1004943a 	slli	r2,r2,16
180088c0:	e00b883a 	mov	r5,fp
180088c4:	9809883a 	mov	r4,r19
180088c8:	843fffcc 	andi	r16,r16,65535
180088cc:	1c63883a 	add	r17,r3,r17
180088d0:	1421883a 	add	r16,r2,r16
180088d4:	8000ad40 	call	18000ad4 <__mulsi3>
180088d8:	900b883a 	mov	r5,r18
180088dc:	a009883a 	mov	r4,r20
180088e0:	1027883a 	mov	r19,r2
180088e4:	8000ad40 	call	18000ad4 <__mulsi3>
180088e8:	9885883a 	add	r2,r19,r2
180088ec:	1447883a 	add	r3,r2,r17
180088f0:	8005883a 	mov	r2,r16
180088f4:	dfc00917 	ldw	ra,36(sp)
180088f8:	df000817 	ldw	fp,32(sp)
180088fc:	ddc00717 	ldw	r23,28(sp)
18008900:	dd800617 	ldw	r22,24(sp)
18008904:	dd400517 	ldw	r21,20(sp)
18008908:	dd000417 	ldw	r20,16(sp)
1800890c:	dcc00317 	ldw	r19,12(sp)
18008910:	dc800217 	ldw	r18,8(sp)
18008914:	dc400117 	ldw	r17,4(sp)
18008918:	dc000017 	ldw	r16,0(sp)
1800891c:	dec00a04 	addi	sp,sp,40
18008920:	f800283a 	ret

18008924 <__udivdi3>:
18008924:	defff404 	addi	sp,sp,-48
18008928:	dcc00515 	stw	r19,20(sp)
1800892c:	dc000215 	stw	r16,8(sp)
18008930:	dfc00b15 	stw	ra,44(sp)
18008934:	df000a15 	stw	fp,40(sp)
18008938:	ddc00915 	stw	r23,36(sp)
1800893c:	dd800815 	stw	r22,32(sp)
18008940:	dd400715 	stw	r21,28(sp)
18008944:	dd000615 	stw	r20,24(sp)
18008948:	dc800415 	stw	r18,16(sp)
1800894c:	dc400315 	stw	r17,12(sp)
18008950:	2027883a 	mov	r19,r4
18008954:	2821883a 	mov	r16,r5
18008958:	3800461e 	bne	r7,zero,18008a74 <__udivdi3+0x150>
1800895c:	3023883a 	mov	r17,r6
18008960:	2025883a 	mov	r18,r4
18008964:	2980572e 	bgeu	r5,r6,18008ac4 <__udivdi3+0x1a0>
18008968:	00bfffd4 	movui	r2,65535
1800896c:	282d883a 	mov	r22,r5
18008970:	1180b236 	bltu	r2,r6,18008c3c <__udivdi3+0x318>
18008974:	00803fc4 	movi	r2,255
18008978:	1185803a 	cmpltu	r2,r2,r6
1800897c:	100490fa 	slli	r2,r2,3
18008980:	3086d83a 	srl	r3,r6,r2
18008984:	01060074 	movhi	r4,6145
18008988:	21389504 	addi	r4,r4,-7596
1800898c:	20c7883a 	add	r3,r4,r3
18008990:	18c00003 	ldbu	r3,0(r3)
18008994:	1885883a 	add	r2,r3,r2
18008998:	00c00804 	movi	r3,32
1800899c:	1887c83a 	sub	r3,r3,r2
180089a0:	18000526 	beq	r3,zero,180089b8 <__udivdi3+0x94>
180089a4:	80e0983a 	sll	r16,r16,r3
180089a8:	9884d83a 	srl	r2,r19,r2
180089ac:	30e2983a 	sll	r17,r6,r3
180089b0:	98e4983a 	sll	r18,r19,r3
180089b4:	142cb03a 	or	r22,r2,r16
180089b8:	882ad43a 	srli	r21,r17,16
180089bc:	b009883a 	mov	r4,r22
180089c0:	8d3fffcc 	andi	r20,r17,65535
180089c4:	a80b883a 	mov	r5,r21
180089c8:	8000a7c0 	call	18000a7c <__umodsi3>
180089cc:	b009883a 	mov	r4,r22
180089d0:	a80b883a 	mov	r5,r21
180089d4:	1027883a 	mov	r19,r2
180089d8:	8000a180 	call	18000a18 <__udivsi3>
180089dc:	100b883a 	mov	r5,r2
180089e0:	a009883a 	mov	r4,r20
180089e4:	102d883a 	mov	r22,r2
180089e8:	8000ad40 	call	18000ad4 <__mulsi3>
180089ec:	9826943a 	slli	r19,r19,16
180089f0:	9006d43a 	srli	r3,r18,16
180089f4:	1cc6b03a 	or	r3,r3,r19
180089f8:	1880052e 	bgeu	r3,r2,18008a10 <__udivdi3+0xec>
180089fc:	1c47883a 	add	r3,r3,r17
18008a00:	b13fffc4 	addi	r4,r22,-1
18008a04:	1c400136 	bltu	r3,r17,18008a0c <__udivdi3+0xe8>
18008a08:	18814236 	bltu	r3,r2,18008f14 <__udivdi3+0x5f0>
18008a0c:	202d883a 	mov	r22,r4
18008a10:	18a1c83a 	sub	r16,r3,r2
18008a14:	8009883a 	mov	r4,r16
18008a18:	a80b883a 	mov	r5,r21
18008a1c:	8000a7c0 	call	18000a7c <__umodsi3>
18008a20:	1027883a 	mov	r19,r2
18008a24:	8009883a 	mov	r4,r16
18008a28:	a80b883a 	mov	r5,r21
18008a2c:	9826943a 	slli	r19,r19,16
18008a30:	8000a180 	call	18000a18 <__udivsi3>
18008a34:	100b883a 	mov	r5,r2
18008a38:	a009883a 	mov	r4,r20
18008a3c:	94bfffcc 	andi	r18,r18,65535
18008a40:	1021883a 	mov	r16,r2
18008a44:	94e4b03a 	or	r18,r18,r19
18008a48:	8000ad40 	call	18000ad4 <__mulsi3>
18008a4c:	9080052e 	bgeu	r18,r2,18008a64 <__udivdi3+0x140>
18008a50:	8ca5883a 	add	r18,r17,r18
18008a54:	80ffffc4 	addi	r3,r16,-1
18008a58:	94410c36 	bltu	r18,r17,18008e8c <__udivdi3+0x568>
18008a5c:	90810b2e 	bgeu	r18,r2,18008e8c <__udivdi3+0x568>
18008a60:	843fff84 	addi	r16,r16,-2
18008a64:	b004943a 	slli	r2,r22,16
18008a68:	0007883a 	mov	r3,zero
18008a6c:	1404b03a 	or	r2,r2,r16
18008a70:	00005e06 	br	18008bec <__udivdi3+0x2c8>
18008a74:	29c05b36 	bltu	r5,r7,18008be4 <__udivdi3+0x2c0>
18008a78:	00bfffd4 	movui	r2,65535
18008a7c:	11c0672e 	bgeu	r2,r7,18008c1c <__udivdi3+0x2f8>
18008a80:	00804034 	movhi	r2,256
18008a84:	10bfffc4 	addi	r2,r2,-1
18008a88:	11c10a36 	bltu	r2,r7,18008eb4 <__udivdi3+0x590>
18008a8c:	00800404 	movi	r2,16
18008a90:	3886d83a 	srl	r3,r7,r2
18008a94:	01060074 	movhi	r4,6145
18008a98:	21389504 	addi	r4,r4,-7596
18008a9c:	20c7883a 	add	r3,r4,r3
18008aa0:	18c00003 	ldbu	r3,0(r3)
18008aa4:	05c00804 	movi	r23,32
18008aa8:	1885883a 	add	r2,r3,r2
18008aac:	b8afc83a 	sub	r23,r23,r2
18008ab0:	b800671e 	bne	r23,zero,18008c50 <__udivdi3+0x32c>
18008ab4:	3c010536 	bltu	r7,r16,18008ecc <__udivdi3+0x5a8>
18008ab8:	9985403a 	cmpgeu	r2,r19,r6
18008abc:	0007883a 	mov	r3,zero
18008ac0:	00004a06 	br	18008bec <__udivdi3+0x2c8>
18008ac4:	3000041e 	bne	r6,zero,18008ad8 <__udivdi3+0x1b4>
18008ac8:	000b883a 	mov	r5,zero
18008acc:	01000044 	movi	r4,1
18008ad0:	8000a180 	call	18000a18 <__udivsi3>
18008ad4:	1023883a 	mov	r17,r2
18008ad8:	00bfffd4 	movui	r2,65535
18008adc:	1440532e 	bgeu	r2,r17,18008c2c <__udivdi3+0x308>
18008ae0:	00804034 	movhi	r2,256
18008ae4:	10bfffc4 	addi	r2,r2,-1
18008ae8:	1440f436 	bltu	r2,r17,18008ebc <__udivdi3+0x598>
18008aec:	00800404 	movi	r2,16
18008af0:	8886d83a 	srl	r3,r17,r2
18008af4:	01060074 	movhi	r4,6145
18008af8:	21389504 	addi	r4,r4,-7596
18008afc:	20c7883a 	add	r3,r4,r3
18008b00:	18c00003 	ldbu	r3,0(r3)
18008b04:	1885883a 	add	r2,r3,r2
18008b08:	00c00804 	movi	r3,32
18008b0c:	1887c83a 	sub	r3,r3,r2
18008b10:	1800a51e 	bne	r3,zero,18008da8 <__udivdi3+0x484>
18008b14:	882ad43a 	srli	r21,r17,16
18008b18:	8461c83a 	sub	r16,r16,r17
18008b1c:	8d3fffcc 	andi	r20,r17,65535
18008b20:	00c00044 	movi	r3,1
18008b24:	a80b883a 	mov	r5,r21
18008b28:	8009883a 	mov	r4,r16
18008b2c:	d8c00115 	stw	r3,4(sp)
18008b30:	8000a7c0 	call	18000a7c <__umodsi3>
18008b34:	a80b883a 	mov	r5,r21
18008b38:	8009883a 	mov	r4,r16
18008b3c:	1027883a 	mov	r19,r2
18008b40:	8000a180 	call	18000a18 <__udivsi3>
18008b44:	a00b883a 	mov	r5,r20
18008b48:	1009883a 	mov	r4,r2
18008b4c:	102d883a 	mov	r22,r2
18008b50:	8000ad40 	call	18000ad4 <__mulsi3>
18008b54:	9826943a 	slli	r19,r19,16
18008b58:	900ed43a 	srli	r7,r18,16
18008b5c:	d8c00117 	ldw	r3,4(sp)
18008b60:	3cceb03a 	or	r7,r7,r19
18008b64:	3880052e 	bgeu	r7,r2,18008b7c <__udivdi3+0x258>
18008b68:	3c4f883a 	add	r7,r7,r17
18008b6c:	b13fffc4 	addi	r4,r22,-1
18008b70:	3c400136 	bltu	r7,r17,18008b78 <__udivdi3+0x254>
18008b74:	3880e436 	bltu	r7,r2,18008f08 <__udivdi3+0x5e4>
18008b78:	202d883a 	mov	r22,r4
18008b7c:	38a1c83a 	sub	r16,r7,r2
18008b80:	8009883a 	mov	r4,r16
18008b84:	a80b883a 	mov	r5,r21
18008b88:	d8c00115 	stw	r3,4(sp)
18008b8c:	8000a7c0 	call	18000a7c <__umodsi3>
18008b90:	1027883a 	mov	r19,r2
18008b94:	8009883a 	mov	r4,r16
18008b98:	a80b883a 	mov	r5,r21
18008b9c:	9826943a 	slli	r19,r19,16
18008ba0:	8000a180 	call	18000a18 <__udivsi3>
18008ba4:	a00b883a 	mov	r5,r20
18008ba8:	1009883a 	mov	r4,r2
18008bac:	94bfffcc 	andi	r18,r18,65535
18008bb0:	1021883a 	mov	r16,r2
18008bb4:	94e4b03a 	or	r18,r18,r19
18008bb8:	8000ad40 	call	18000ad4 <__mulsi3>
18008bbc:	d8c00117 	ldw	r3,4(sp)
18008bc0:	9080052e 	bgeu	r18,r2,18008bd8 <__udivdi3+0x2b4>
18008bc4:	8ca5883a 	add	r18,r17,r18
18008bc8:	813fffc4 	addi	r4,r16,-1
18008bcc:	9440ad36 	bltu	r18,r17,18008e84 <__udivdi3+0x560>
18008bd0:	9080ac2e 	bgeu	r18,r2,18008e84 <__udivdi3+0x560>
18008bd4:	843fff84 	addi	r16,r16,-2
18008bd8:	b004943a 	slli	r2,r22,16
18008bdc:	1404b03a 	or	r2,r2,r16
18008be0:	00000206 	br	18008bec <__udivdi3+0x2c8>
18008be4:	0007883a 	mov	r3,zero
18008be8:	0005883a 	mov	r2,zero
18008bec:	dfc00b17 	ldw	ra,44(sp)
18008bf0:	df000a17 	ldw	fp,40(sp)
18008bf4:	ddc00917 	ldw	r23,36(sp)
18008bf8:	dd800817 	ldw	r22,32(sp)
18008bfc:	dd400717 	ldw	r21,28(sp)
18008c00:	dd000617 	ldw	r20,24(sp)
18008c04:	dcc00517 	ldw	r19,20(sp)
18008c08:	dc800417 	ldw	r18,16(sp)
18008c0c:	dc400317 	ldw	r17,12(sp)
18008c10:	dc000217 	ldw	r16,8(sp)
18008c14:	dec00c04 	addi	sp,sp,48
18008c18:	f800283a 	ret
18008c1c:	00803fc4 	movi	r2,255
18008c20:	11c5803a 	cmpltu	r2,r2,r7
18008c24:	100490fa 	slli	r2,r2,3
18008c28:	003f9906 	br	18008a90 <__alt_data_end+0xf8008a90>
18008c2c:	00803fc4 	movi	r2,255
18008c30:	1445803a 	cmpltu	r2,r2,r17
18008c34:	100490fa 	slli	r2,r2,3
18008c38:	003fad06 	br	18008af0 <__alt_data_end+0xf8008af0>
18008c3c:	00804034 	movhi	r2,256
18008c40:	10bfffc4 	addi	r2,r2,-1
18008c44:	11809f36 	bltu	r2,r6,18008ec4 <__udivdi3+0x5a0>
18008c48:	00800404 	movi	r2,16
18008c4c:	003f4c06 	br	18008980 <__alt_data_end+0xf8008980>
18008c50:	3dce983a 	sll	r7,r7,r23
18008c54:	30b8d83a 	srl	fp,r6,r2
18008c58:	80a2d83a 	srl	r17,r16,r2
18008c5c:	35cc983a 	sll	r6,r6,r23
18008c60:	3f38b03a 	or	fp,r7,fp
18008c64:	e024d43a 	srli	r18,fp,16
18008c68:	9884d83a 	srl	r2,r19,r2
18008c6c:	85e0983a 	sll	r16,r16,r23
18008c70:	8809883a 	mov	r4,r17
18008c74:	900b883a 	mov	r5,r18
18008c78:	d9800015 	stw	r6,0(sp)
18008c7c:	1420b03a 	or	r16,r2,r16
18008c80:	8000a7c0 	call	18000a7c <__umodsi3>
18008c84:	900b883a 	mov	r5,r18
18008c88:	8809883a 	mov	r4,r17
18008c8c:	1029883a 	mov	r20,r2
18008c90:	e5bfffcc 	andi	r22,fp,65535
18008c94:	8000a180 	call	18000a18 <__udivsi3>
18008c98:	100b883a 	mov	r5,r2
18008c9c:	b009883a 	mov	r4,r22
18008ca0:	102b883a 	mov	r21,r2
18008ca4:	8000ad40 	call	18000ad4 <__mulsi3>
18008ca8:	a028943a 	slli	r20,r20,16
18008cac:	8006d43a 	srli	r3,r16,16
18008cb0:	1d06b03a 	or	r3,r3,r20
18008cb4:	1880042e 	bgeu	r3,r2,18008cc8 <__udivdi3+0x3a4>
18008cb8:	1f07883a 	add	r3,r3,fp
18008cbc:	a93fffc4 	addi	r4,r21,-1
18008cc0:	1f00892e 	bgeu	r3,fp,18008ee8 <__udivdi3+0x5c4>
18008cc4:	202b883a 	mov	r21,r4
18008cc8:	18a3c83a 	sub	r17,r3,r2
18008ccc:	8809883a 	mov	r4,r17
18008cd0:	900b883a 	mov	r5,r18
18008cd4:	8000a7c0 	call	18000a7c <__umodsi3>
18008cd8:	1029883a 	mov	r20,r2
18008cdc:	8809883a 	mov	r4,r17
18008ce0:	900b883a 	mov	r5,r18
18008ce4:	a028943a 	slli	r20,r20,16
18008ce8:	8000a180 	call	18000a18 <__udivsi3>
18008cec:	100b883a 	mov	r5,r2
18008cf0:	b009883a 	mov	r4,r22
18008cf4:	843fffcc 	andi	r16,r16,65535
18008cf8:	1023883a 	mov	r17,r2
18008cfc:	8520b03a 	or	r16,r16,r20
18008d00:	8000ad40 	call	18000ad4 <__mulsi3>
18008d04:	8080042e 	bgeu	r16,r2,18008d18 <__udivdi3+0x3f4>
18008d08:	8721883a 	add	r16,r16,fp
18008d0c:	88ffffc4 	addi	r3,r17,-1
18008d10:	8700712e 	bgeu	r16,fp,18008ed8 <__udivdi3+0x5b4>
18008d14:	1823883a 	mov	r17,r3
18008d18:	a80e943a 	slli	r7,r21,16
18008d1c:	d8c00017 	ldw	r3,0(sp)
18008d20:	80a1c83a 	sub	r16,r16,r2
18008d24:	3c64b03a 	or	r18,r7,r17
18008d28:	1d3fffcc 	andi	r20,r3,65535
18008d2c:	9022d43a 	srli	r17,r18,16
18008d30:	95bfffcc 	andi	r22,r18,65535
18008d34:	a00b883a 	mov	r5,r20
18008d38:	b009883a 	mov	r4,r22
18008d3c:	182ad43a 	srli	r21,r3,16
18008d40:	8000ad40 	call	18000ad4 <__mulsi3>
18008d44:	a00b883a 	mov	r5,r20
18008d48:	8809883a 	mov	r4,r17
18008d4c:	1039883a 	mov	fp,r2
18008d50:	8000ad40 	call	18000ad4 <__mulsi3>
18008d54:	8809883a 	mov	r4,r17
18008d58:	a80b883a 	mov	r5,r21
18008d5c:	1029883a 	mov	r20,r2
18008d60:	8000ad40 	call	18000ad4 <__mulsi3>
18008d64:	a80b883a 	mov	r5,r21
18008d68:	b009883a 	mov	r4,r22
18008d6c:	1023883a 	mov	r17,r2
18008d70:	8000ad40 	call	18000ad4 <__mulsi3>
18008d74:	e006d43a 	srli	r3,fp,16
18008d78:	1505883a 	add	r2,r2,r20
18008d7c:	1887883a 	add	r3,r3,r2
18008d80:	1d00022e 	bgeu	r3,r20,18008d8c <__udivdi3+0x468>
18008d84:	00800074 	movhi	r2,1
18008d88:	88a3883a 	add	r17,r17,r2
18008d8c:	1804d43a 	srli	r2,r3,16
18008d90:	1463883a 	add	r17,r2,r17
18008d94:	84404436 	bltu	r16,r17,18008ea8 <__udivdi3+0x584>
18008d98:	84403e26 	beq	r16,r17,18008e94 <__udivdi3+0x570>
18008d9c:	9005883a 	mov	r2,r18
18008da0:	0007883a 	mov	r3,zero
18008da4:	003f9106 	br	18008bec <__alt_data_end+0xf8008bec>
18008da8:	88e2983a 	sll	r17,r17,r3
18008dac:	80aed83a 	srl	r23,r16,r2
18008db0:	80e0983a 	sll	r16,r16,r3
18008db4:	882ad43a 	srli	r21,r17,16
18008db8:	9884d83a 	srl	r2,r19,r2
18008dbc:	b809883a 	mov	r4,r23
18008dc0:	a80b883a 	mov	r5,r21
18008dc4:	98e4983a 	sll	r18,r19,r3
18008dc8:	142cb03a 	or	r22,r2,r16
18008dcc:	8000a7c0 	call	18000a7c <__umodsi3>
18008dd0:	b809883a 	mov	r4,r23
18008dd4:	a80b883a 	mov	r5,r21
18008dd8:	1027883a 	mov	r19,r2
18008ddc:	8d3fffcc 	andi	r20,r17,65535
18008de0:	8000a180 	call	18000a18 <__udivsi3>
18008de4:	a009883a 	mov	r4,r20
18008de8:	100b883a 	mov	r5,r2
18008dec:	102f883a 	mov	r23,r2
18008df0:	8000ad40 	call	18000ad4 <__mulsi3>
18008df4:	9826943a 	slli	r19,r19,16
18008df8:	b008d43a 	srli	r4,r22,16
18008dfc:	24c8b03a 	or	r4,r4,r19
18008e00:	2080062e 	bgeu	r4,r2,18008e1c <__udivdi3+0x4f8>
18008e04:	2449883a 	add	r4,r4,r17
18008e08:	b8ffffc4 	addi	r3,r23,-1
18008e0c:	24403c36 	bltu	r4,r17,18008f00 <__udivdi3+0x5dc>
18008e10:	20803b2e 	bgeu	r4,r2,18008f00 <__udivdi3+0x5dc>
18008e14:	bdffff84 	addi	r23,r23,-2
18008e18:	2449883a 	add	r4,r4,r17
18008e1c:	20a1c83a 	sub	r16,r4,r2
18008e20:	a80b883a 	mov	r5,r21
18008e24:	8009883a 	mov	r4,r16
18008e28:	8000a7c0 	call	18000a7c <__umodsi3>
18008e2c:	a80b883a 	mov	r5,r21
18008e30:	8009883a 	mov	r4,r16
18008e34:	1027883a 	mov	r19,r2
18008e38:	8000a180 	call	18000a18 <__udivsi3>
18008e3c:	a009883a 	mov	r4,r20
18008e40:	100b883a 	mov	r5,r2
18008e44:	9826943a 	slli	r19,r19,16
18008e48:	1039883a 	mov	fp,r2
18008e4c:	8000ad40 	call	18000ad4 <__mulsi3>
18008e50:	b13fffcc 	andi	r4,r22,65535
18008e54:	24c8b03a 	or	r4,r4,r19
18008e58:	2080062e 	bgeu	r4,r2,18008e74 <__udivdi3+0x550>
18008e5c:	2449883a 	add	r4,r4,r17
18008e60:	e0ffffc4 	addi	r3,fp,-1
18008e64:	24402436 	bltu	r4,r17,18008ef8 <__udivdi3+0x5d4>
18008e68:	2080232e 	bgeu	r4,r2,18008ef8 <__udivdi3+0x5d4>
18008e6c:	e73fff84 	addi	fp,fp,-2
18008e70:	2449883a 	add	r4,r4,r17
18008e74:	b82e943a 	slli	r23,r23,16
18008e78:	20a1c83a 	sub	r16,r4,r2
18008e7c:	bf06b03a 	or	r3,r23,fp
18008e80:	003f2806 	br	18008b24 <__alt_data_end+0xf8008b24>
18008e84:	2021883a 	mov	r16,r4
18008e88:	003f5306 	br	18008bd8 <__alt_data_end+0xf8008bd8>
18008e8c:	1821883a 	mov	r16,r3
18008e90:	003ef406 	br	18008a64 <__alt_data_end+0xf8008a64>
18008e94:	1806943a 	slli	r3,r3,16
18008e98:	9de6983a 	sll	r19,r19,r23
18008e9c:	e73fffcc 	andi	fp,fp,65535
18008ea0:	1f07883a 	add	r3,r3,fp
18008ea4:	98ffbd2e 	bgeu	r19,r3,18008d9c <__alt_data_end+0xf8008d9c>
18008ea8:	90bfffc4 	addi	r2,r18,-1
18008eac:	0007883a 	mov	r3,zero
18008eb0:	003f4e06 	br	18008bec <__alt_data_end+0xf8008bec>
18008eb4:	00800604 	movi	r2,24
18008eb8:	003ef506 	br	18008a90 <__alt_data_end+0xf8008a90>
18008ebc:	00800604 	movi	r2,24
18008ec0:	003f0b06 	br	18008af0 <__alt_data_end+0xf8008af0>
18008ec4:	00800604 	movi	r2,24
18008ec8:	003ead06 	br	18008980 <__alt_data_end+0xf8008980>
18008ecc:	0007883a 	mov	r3,zero
18008ed0:	00800044 	movi	r2,1
18008ed4:	003f4506 	br	18008bec <__alt_data_end+0xf8008bec>
18008ed8:	80bf8e2e 	bgeu	r16,r2,18008d14 <__alt_data_end+0xf8008d14>
18008edc:	8c7fff84 	addi	r17,r17,-2
18008ee0:	8721883a 	add	r16,r16,fp
18008ee4:	003f8c06 	br	18008d18 <__alt_data_end+0xf8008d18>
18008ee8:	18bf762e 	bgeu	r3,r2,18008cc4 <__alt_data_end+0xf8008cc4>
18008eec:	ad7fff84 	addi	r21,r21,-2
18008ef0:	1f07883a 	add	r3,r3,fp
18008ef4:	003f7406 	br	18008cc8 <__alt_data_end+0xf8008cc8>
18008ef8:	1839883a 	mov	fp,r3
18008efc:	003fdd06 	br	18008e74 <__alt_data_end+0xf8008e74>
18008f00:	182f883a 	mov	r23,r3
18008f04:	003fc506 	br	18008e1c <__alt_data_end+0xf8008e1c>
18008f08:	b5bfff84 	addi	r22,r22,-2
18008f0c:	3c4f883a 	add	r7,r7,r17
18008f10:	003f1a06 	br	18008b7c <__alt_data_end+0xf8008b7c>
18008f14:	b5bfff84 	addi	r22,r22,-2
18008f18:	1c47883a 	add	r3,r3,r17
18008f1c:	003ebc06 	br	18008a10 <__alt_data_end+0xf8008a10>

18008f20 <__umoddi3>:
18008f20:	defff304 	addi	sp,sp,-52
18008f24:	df000b15 	stw	fp,44(sp)
18008f28:	dc400415 	stw	r17,16(sp)
18008f2c:	dc000315 	stw	r16,12(sp)
18008f30:	dfc00c15 	stw	ra,48(sp)
18008f34:	ddc00a15 	stw	r23,40(sp)
18008f38:	dd800915 	stw	r22,36(sp)
18008f3c:	dd400815 	stw	r21,32(sp)
18008f40:	dd000715 	stw	r20,28(sp)
18008f44:	dcc00615 	stw	r19,24(sp)
18008f48:	dc800515 	stw	r18,20(sp)
18008f4c:	2021883a 	mov	r16,r4
18008f50:	2823883a 	mov	r17,r5
18008f54:	2839883a 	mov	fp,r5
18008f58:	3800401e 	bne	r7,zero,1800905c <__umoddi3+0x13c>
18008f5c:	3027883a 	mov	r19,r6
18008f60:	2029883a 	mov	r20,r4
18008f64:	2980552e 	bgeu	r5,r6,180090bc <__umoddi3+0x19c>
18008f68:	00bfffd4 	movui	r2,65535
18008f6c:	1180a236 	bltu	r2,r6,180091f8 <__umoddi3+0x2d8>
18008f70:	01003fc4 	movi	r4,255
18008f74:	2189803a 	cmpltu	r4,r4,r6
18008f78:	200890fa 	slli	r4,r4,3
18008f7c:	3104d83a 	srl	r2,r6,r4
18008f80:	00c60074 	movhi	r3,6145
18008f84:	18f89504 	addi	r3,r3,-7596
18008f88:	1885883a 	add	r2,r3,r2
18008f8c:	10c00003 	ldbu	r3,0(r2)
18008f90:	00800804 	movi	r2,32
18008f94:	1909883a 	add	r4,r3,r4
18008f98:	1125c83a 	sub	r18,r2,r4
18008f9c:	90000526 	beq	r18,zero,18008fb4 <__umoddi3+0x94>
18008fa0:	8ca2983a 	sll	r17,r17,r18
18008fa4:	8108d83a 	srl	r4,r16,r4
18008fa8:	34a6983a 	sll	r19,r6,r18
18008fac:	84a8983a 	sll	r20,r16,r18
18008fb0:	2478b03a 	or	fp,r4,r17
18008fb4:	982cd43a 	srli	r22,r19,16
18008fb8:	e009883a 	mov	r4,fp
18008fbc:	9dffffcc 	andi	r23,r19,65535
18008fc0:	b00b883a 	mov	r5,r22
18008fc4:	8000a7c0 	call	18000a7c <__umodsi3>
18008fc8:	b00b883a 	mov	r5,r22
18008fcc:	e009883a 	mov	r4,fp
18008fd0:	102b883a 	mov	r21,r2
18008fd4:	8000a180 	call	18000a18 <__udivsi3>
18008fd8:	100b883a 	mov	r5,r2
18008fdc:	b809883a 	mov	r4,r23
18008fe0:	8000ad40 	call	18000ad4 <__mulsi3>
18008fe4:	a82a943a 	slli	r21,r21,16
18008fe8:	a006d43a 	srli	r3,r20,16
18008fec:	1d46b03a 	or	r3,r3,r21
18008ff0:	1880032e 	bgeu	r3,r2,18009000 <__umoddi3+0xe0>
18008ff4:	1cc7883a 	add	r3,r3,r19
18008ff8:	1cc00136 	bltu	r3,r19,18009000 <__umoddi3+0xe0>
18008ffc:	18813136 	bltu	r3,r2,180094c4 <__umoddi3+0x5a4>
18009000:	18a1c83a 	sub	r16,r3,r2
18009004:	b00b883a 	mov	r5,r22
18009008:	8009883a 	mov	r4,r16
1800900c:	8000a7c0 	call	18000a7c <__umodsi3>
18009010:	b00b883a 	mov	r5,r22
18009014:	8009883a 	mov	r4,r16
18009018:	1023883a 	mov	r17,r2
1800901c:	8000a180 	call	18000a18 <__udivsi3>
18009020:	100b883a 	mov	r5,r2
18009024:	b809883a 	mov	r4,r23
18009028:	8822943a 	slli	r17,r17,16
1800902c:	8000ad40 	call	18000ad4 <__mulsi3>
18009030:	a0ffffcc 	andi	r3,r20,65535
18009034:	1c46b03a 	or	r3,r3,r17
18009038:	1880042e 	bgeu	r3,r2,1800904c <__umoddi3+0x12c>
1800903c:	1cc7883a 	add	r3,r3,r19
18009040:	1cc00236 	bltu	r3,r19,1800904c <__umoddi3+0x12c>
18009044:	1880012e 	bgeu	r3,r2,1800904c <__umoddi3+0x12c>
18009048:	1cc7883a 	add	r3,r3,r19
1800904c:	1885c83a 	sub	r2,r3,r2
18009050:	1484d83a 	srl	r2,r2,r18
18009054:	0007883a 	mov	r3,zero
18009058:	00005306 	br	180091a8 <__umoddi3+0x288>
1800905c:	29c05036 	bltu	r5,r7,180091a0 <__umoddi3+0x280>
18009060:	00bfffd4 	movui	r2,65535
18009064:	11c05c2e 	bgeu	r2,r7,180091d8 <__umoddi3+0x2b8>
18009068:	00804034 	movhi	r2,256
1800906c:	10bfffc4 	addi	r2,r2,-1
18009070:	11c10636 	bltu	r2,r7,1800948c <__umoddi3+0x56c>
18009074:	01000404 	movi	r4,16
18009078:	3904d83a 	srl	r2,r7,r4
1800907c:	00c60074 	movhi	r3,6145
18009080:	18f89504 	addi	r3,r3,-7596
18009084:	1885883a 	add	r2,r3,r2
18009088:	14c00003 	ldbu	r19,0(r2)
1800908c:	00c00804 	movi	r3,32
18009090:	9927883a 	add	r19,r19,r4
18009094:	1ce9c83a 	sub	r20,r3,r19
18009098:	a0005c1e 	bne	r20,zero,1800920c <__umoddi3+0x2ec>
1800909c:	3c400136 	bltu	r7,r17,180090a4 <__umoddi3+0x184>
180090a0:	81810a36 	bltu	r16,r6,180094cc <__umoddi3+0x5ac>
180090a4:	8185c83a 	sub	r2,r16,r6
180090a8:	89e3c83a 	sub	r17,r17,r7
180090ac:	8089803a 	cmpltu	r4,r16,r2
180090b0:	8939c83a 	sub	fp,r17,r4
180090b4:	e007883a 	mov	r3,fp
180090b8:	00003b06 	br	180091a8 <__umoddi3+0x288>
180090bc:	3000041e 	bne	r6,zero,180090d0 <__umoddi3+0x1b0>
180090c0:	000b883a 	mov	r5,zero
180090c4:	01000044 	movi	r4,1
180090c8:	8000a180 	call	18000a18 <__udivsi3>
180090cc:	1027883a 	mov	r19,r2
180090d0:	00bfffd4 	movui	r2,65535
180090d4:	14c0442e 	bgeu	r2,r19,180091e8 <__umoddi3+0x2c8>
180090d8:	00804034 	movhi	r2,256
180090dc:	10bfffc4 	addi	r2,r2,-1
180090e0:	14c0ec36 	bltu	r2,r19,18009494 <__umoddi3+0x574>
180090e4:	00800404 	movi	r2,16
180090e8:	9886d83a 	srl	r3,r19,r2
180090ec:	01060074 	movhi	r4,6145
180090f0:	21389504 	addi	r4,r4,-7596
180090f4:	20c7883a 	add	r3,r4,r3
180090f8:	18c00003 	ldbu	r3,0(r3)
180090fc:	1887883a 	add	r3,r3,r2
18009100:	00800804 	movi	r2,32
18009104:	10e5c83a 	sub	r18,r2,r3
18009108:	9000ab1e 	bne	r18,zero,180093b8 <__umoddi3+0x498>
1800910c:	982cd43a 	srli	r22,r19,16
18009110:	8ce3c83a 	sub	r17,r17,r19
18009114:	9dffffcc 	andi	r23,r19,65535
18009118:	b00b883a 	mov	r5,r22
1800911c:	8809883a 	mov	r4,r17
18009120:	8000a7c0 	call	18000a7c <__umodsi3>
18009124:	b00b883a 	mov	r5,r22
18009128:	8809883a 	mov	r4,r17
1800912c:	102b883a 	mov	r21,r2
18009130:	8000a180 	call	18000a18 <__udivsi3>
18009134:	b80b883a 	mov	r5,r23
18009138:	1009883a 	mov	r4,r2
1800913c:	8000ad40 	call	18000ad4 <__mulsi3>
18009140:	a82a943a 	slli	r21,r21,16
18009144:	a006d43a 	srli	r3,r20,16
18009148:	1d46b03a 	or	r3,r3,r21
1800914c:	1880042e 	bgeu	r3,r2,18009160 <__umoddi3+0x240>
18009150:	1cc7883a 	add	r3,r3,r19
18009154:	1cc00236 	bltu	r3,r19,18009160 <__umoddi3+0x240>
18009158:	1880012e 	bgeu	r3,r2,18009160 <__umoddi3+0x240>
1800915c:	1cc7883a 	add	r3,r3,r19
18009160:	18a1c83a 	sub	r16,r3,r2
18009164:	b00b883a 	mov	r5,r22
18009168:	8009883a 	mov	r4,r16
1800916c:	8000a7c0 	call	18000a7c <__umodsi3>
18009170:	1023883a 	mov	r17,r2
18009174:	b00b883a 	mov	r5,r22
18009178:	8009883a 	mov	r4,r16
1800917c:	8000a180 	call	18000a18 <__udivsi3>
18009180:	8822943a 	slli	r17,r17,16
18009184:	b80b883a 	mov	r5,r23
18009188:	1009883a 	mov	r4,r2
1800918c:	8000ad40 	call	18000ad4 <__mulsi3>
18009190:	a53fffcc 	andi	r20,r20,65535
18009194:	a446b03a 	or	r3,r20,r17
18009198:	18bfac2e 	bgeu	r3,r2,1800904c <__alt_data_end+0xf800904c>
1800919c:	003fa706 	br	1800903c <__alt_data_end+0xf800903c>
180091a0:	2005883a 	mov	r2,r4
180091a4:	2807883a 	mov	r3,r5
180091a8:	dfc00c17 	ldw	ra,48(sp)
180091ac:	df000b17 	ldw	fp,44(sp)
180091b0:	ddc00a17 	ldw	r23,40(sp)
180091b4:	dd800917 	ldw	r22,36(sp)
180091b8:	dd400817 	ldw	r21,32(sp)
180091bc:	dd000717 	ldw	r20,28(sp)
180091c0:	dcc00617 	ldw	r19,24(sp)
180091c4:	dc800517 	ldw	r18,20(sp)
180091c8:	dc400417 	ldw	r17,16(sp)
180091cc:	dc000317 	ldw	r16,12(sp)
180091d0:	dec00d04 	addi	sp,sp,52
180091d4:	f800283a 	ret
180091d8:	04c03fc4 	movi	r19,255
180091dc:	99c9803a 	cmpltu	r4,r19,r7
180091e0:	200890fa 	slli	r4,r4,3
180091e4:	003fa406 	br	18009078 <__alt_data_end+0xf8009078>
180091e8:	00803fc4 	movi	r2,255
180091ec:	14c5803a 	cmpltu	r2,r2,r19
180091f0:	100490fa 	slli	r2,r2,3
180091f4:	003fbc06 	br	180090e8 <__alt_data_end+0xf80090e8>
180091f8:	00804034 	movhi	r2,256
180091fc:	10bfffc4 	addi	r2,r2,-1
18009200:	1180a636 	bltu	r2,r6,1800949c <__umoddi3+0x57c>
18009204:	01000404 	movi	r4,16
18009208:	003f5c06 	br	18008f7c <__alt_data_end+0xf8008f7c>
1800920c:	3d0e983a 	sll	r7,r7,r20
18009210:	34ead83a 	srl	r21,r6,r19
18009214:	8cc6d83a 	srl	r3,r17,r19
18009218:	8d10983a 	sll	r8,r17,r20
1800921c:	3d6ab03a 	or	r21,r7,r21
18009220:	a82cd43a 	srli	r22,r21,16
18009224:	84e2d83a 	srl	r17,r16,r19
18009228:	1809883a 	mov	r4,r3
1800922c:	b00b883a 	mov	r5,r22
18009230:	8a22b03a 	or	r17,r17,r8
18009234:	3524983a 	sll	r18,r6,r20
18009238:	dc400015 	stw	r17,0(sp)
1800923c:	d8c00115 	stw	r3,4(sp)
18009240:	8000a7c0 	call	18000a7c <__umodsi3>
18009244:	d8c00117 	ldw	r3,4(sp)
18009248:	b00b883a 	mov	r5,r22
1800924c:	1039883a 	mov	fp,r2
18009250:	1809883a 	mov	r4,r3
18009254:	8000a180 	call	18000a18 <__udivsi3>
18009258:	adffffcc 	andi	r23,r21,65535
1800925c:	100b883a 	mov	r5,r2
18009260:	b809883a 	mov	r4,r23
18009264:	1023883a 	mov	r17,r2
18009268:	8000ad40 	call	18000ad4 <__mulsi3>
1800926c:	d9400017 	ldw	r5,0(sp)
18009270:	e008943a 	slli	r4,fp,16
18009274:	8520983a 	sll	r16,r16,r20
18009278:	2806d43a 	srli	r3,r5,16
1800927c:	1906b03a 	or	r3,r3,r4
18009280:	1880042e 	bgeu	r3,r2,18009294 <__umoddi3+0x374>
18009284:	1d47883a 	add	r3,r3,r21
18009288:	893fffc4 	addi	r4,r17,-1
1800928c:	1d40892e 	bgeu	r3,r21,180094b4 <__umoddi3+0x594>
18009290:	2023883a 	mov	r17,r4
18009294:	18b9c83a 	sub	fp,r3,r2
18009298:	b00b883a 	mov	r5,r22
1800929c:	e009883a 	mov	r4,fp
180092a0:	8000a7c0 	call	18000a7c <__umodsi3>
180092a4:	b00b883a 	mov	r5,r22
180092a8:	e009883a 	mov	r4,fp
180092ac:	d8800215 	stw	r2,8(sp)
180092b0:	8000a180 	call	18000a18 <__udivsi3>
180092b4:	100b883a 	mov	r5,r2
180092b8:	b809883a 	mov	r4,r23
180092bc:	102d883a 	mov	r22,r2
180092c0:	8000ad40 	call	18000ad4 <__mulsi3>
180092c4:	d9800217 	ldw	r6,8(sp)
180092c8:	d8c00017 	ldw	r3,0(sp)
180092cc:	300c943a 	slli	r6,r6,16
180092d0:	1a3fffcc 	andi	r8,r3,65535
180092d4:	4190b03a 	or	r8,r8,r6
180092d8:	4080042e 	bgeu	r8,r2,180092ec <__umoddi3+0x3cc>
180092dc:	4551883a 	add	r8,r8,r21
180092e0:	b0ffffc4 	addi	r3,r22,-1
180092e4:	45406f2e 	bgeu	r8,r21,180094a4 <__umoddi3+0x584>
180092e8:	182d883a 	mov	r22,r3
180092ec:	880e943a 	slli	r7,r17,16
180092f0:	9006d43a 	srli	r3,r18,16
180092f4:	91bfffcc 	andi	r6,r18,65535
180092f8:	3dacb03a 	or	r22,r7,r22
180092fc:	b02ed43a 	srli	r23,r22,16
18009300:	b5bfffcc 	andi	r22,r22,65535
18009304:	300b883a 	mov	r5,r6
18009308:	b009883a 	mov	r4,r22
1800930c:	40a3c83a 	sub	r17,r8,r2
18009310:	d8c00115 	stw	r3,4(sp)
18009314:	d9800215 	stw	r6,8(sp)
18009318:	8000ad40 	call	18000ad4 <__mulsi3>
1800931c:	d9800217 	ldw	r6,8(sp)
18009320:	b809883a 	mov	r4,r23
18009324:	1039883a 	mov	fp,r2
18009328:	300b883a 	mov	r5,r6
1800932c:	8000ad40 	call	18000ad4 <__mulsi3>
18009330:	d8c00117 	ldw	r3,4(sp)
18009334:	b809883a 	mov	r4,r23
18009338:	d8800215 	stw	r2,8(sp)
1800933c:	180b883a 	mov	r5,r3
18009340:	8000ad40 	call	18000ad4 <__mulsi3>
18009344:	d8c00117 	ldw	r3,4(sp)
18009348:	b009883a 	mov	r4,r22
1800934c:	102f883a 	mov	r23,r2
18009350:	180b883a 	mov	r5,r3
18009354:	8000ad40 	call	18000ad4 <__mulsi3>
18009358:	d9800217 	ldw	r6,8(sp)
1800935c:	e006d43a 	srli	r3,fp,16
18009360:	1185883a 	add	r2,r2,r6
18009364:	1885883a 	add	r2,r3,r2
18009368:	1180022e 	bgeu	r2,r6,18009374 <__umoddi3+0x454>
1800936c:	00c00074 	movhi	r3,1
18009370:	b8ef883a 	add	r23,r23,r3
18009374:	1006d43a 	srli	r3,r2,16
18009378:	1004943a 	slli	r2,r2,16
1800937c:	e73fffcc 	andi	fp,fp,65535
18009380:	1dc7883a 	add	r3,r3,r23
18009384:	1739883a 	add	fp,r2,fp
18009388:	88c03a36 	bltu	r17,r3,18009474 <__umoddi3+0x554>
1800938c:	88c05126 	beq	r17,r3,180094d4 <__umoddi3+0x5b4>
18009390:	88c9c83a 	sub	r4,r17,r3
18009394:	e00f883a 	mov	r7,fp
18009398:	81cfc83a 	sub	r7,r16,r7
1800939c:	81c7803a 	cmpltu	r3,r16,r7
180093a0:	20c7c83a 	sub	r3,r4,r3
180093a4:	1cc4983a 	sll	r2,r3,r19
180093a8:	3d0ed83a 	srl	r7,r7,r20
180093ac:	1d06d83a 	srl	r3,r3,r20
180093b0:	11c4b03a 	or	r2,r2,r7
180093b4:	003f7c06 	br	180091a8 <__alt_data_end+0xf80091a8>
180093b8:	9ca6983a 	sll	r19,r19,r18
180093bc:	88f8d83a 	srl	fp,r17,r3
180093c0:	80c4d83a 	srl	r2,r16,r3
180093c4:	982cd43a 	srli	r22,r19,16
180093c8:	8ca2983a 	sll	r17,r17,r18
180093cc:	e009883a 	mov	r4,fp
180093d0:	b00b883a 	mov	r5,r22
180093d4:	146ab03a 	or	r21,r2,r17
180093d8:	8000a7c0 	call	18000a7c <__umodsi3>
180093dc:	b00b883a 	mov	r5,r22
180093e0:	e009883a 	mov	r4,fp
180093e4:	1029883a 	mov	r20,r2
180093e8:	9dffffcc 	andi	r23,r19,65535
180093ec:	8000a180 	call	18000a18 <__udivsi3>
180093f0:	b809883a 	mov	r4,r23
180093f4:	100b883a 	mov	r5,r2
180093f8:	8000ad40 	call	18000ad4 <__mulsi3>
180093fc:	a008943a 	slli	r4,r20,16
18009400:	a806d43a 	srli	r3,r21,16
18009404:	84a8983a 	sll	r20,r16,r18
18009408:	1906b03a 	or	r3,r3,r4
1800940c:	1880042e 	bgeu	r3,r2,18009420 <__umoddi3+0x500>
18009410:	1cc7883a 	add	r3,r3,r19
18009414:	1cc00236 	bltu	r3,r19,18009420 <__umoddi3+0x500>
18009418:	1880012e 	bgeu	r3,r2,18009420 <__umoddi3+0x500>
1800941c:	1cc7883a 	add	r3,r3,r19
18009420:	18a3c83a 	sub	r17,r3,r2
18009424:	b00b883a 	mov	r5,r22
18009428:	8809883a 	mov	r4,r17
1800942c:	8000a7c0 	call	18000a7c <__umodsi3>
18009430:	b00b883a 	mov	r5,r22
18009434:	8809883a 	mov	r4,r17
18009438:	1021883a 	mov	r16,r2
1800943c:	8000a180 	call	18000a18 <__udivsi3>
18009440:	100b883a 	mov	r5,r2
18009444:	b809883a 	mov	r4,r23
18009448:	8020943a 	slli	r16,r16,16
1800944c:	8000ad40 	call	18000ad4 <__mulsi3>
18009450:	a8ffffcc 	andi	r3,r21,65535
18009454:	1c06b03a 	or	r3,r3,r16
18009458:	1880042e 	bgeu	r3,r2,1800946c <__umoddi3+0x54c>
1800945c:	1cc7883a 	add	r3,r3,r19
18009460:	1cc00236 	bltu	r3,r19,1800946c <__umoddi3+0x54c>
18009464:	1880012e 	bgeu	r3,r2,1800946c <__umoddi3+0x54c>
18009468:	1cc7883a 	add	r3,r3,r19
1800946c:	18a3c83a 	sub	r17,r3,r2
18009470:	003f2906 	br	18009118 <__alt_data_end+0xf8009118>
18009474:	e48fc83a 	sub	r7,fp,r18
18009478:	1d49c83a 	sub	r4,r3,r21
1800947c:	e1f9803a 	cmpltu	fp,fp,r7
18009480:	2739c83a 	sub	fp,r4,fp
18009484:	8f09c83a 	sub	r4,r17,fp
18009488:	003fc306 	br	18009398 <__alt_data_end+0xf8009398>
1800948c:	01000604 	movi	r4,24
18009490:	003ef906 	br	18009078 <__alt_data_end+0xf8009078>
18009494:	00800604 	movi	r2,24
18009498:	003f1306 	br	180090e8 <__alt_data_end+0xf80090e8>
1800949c:	01000604 	movi	r4,24
180094a0:	003eb606 	br	18008f7c <__alt_data_end+0xf8008f7c>
180094a4:	40bf902e 	bgeu	r8,r2,180092e8 <__alt_data_end+0xf80092e8>
180094a8:	b5bfff84 	addi	r22,r22,-2
180094ac:	4551883a 	add	r8,r8,r21
180094b0:	003f8e06 	br	180092ec <__alt_data_end+0xf80092ec>
180094b4:	18bf762e 	bgeu	r3,r2,18009290 <__alt_data_end+0xf8009290>
180094b8:	8c7fff84 	addi	r17,r17,-2
180094bc:	1d47883a 	add	r3,r3,r21
180094c0:	003f7406 	br	18009294 <__alt_data_end+0xf8009294>
180094c4:	1cc7883a 	add	r3,r3,r19
180094c8:	003ecd06 	br	18009000 <__alt_data_end+0xf8009000>
180094cc:	8005883a 	mov	r2,r16
180094d0:	003ef806 	br	180090b4 <__alt_data_end+0xf80090b4>
180094d4:	873fe736 	bltu	r16,fp,18009474 <__alt_data_end+0xf8009474>
180094d8:	e00f883a 	mov	r7,fp
180094dc:	0009883a 	mov	r4,zero
180094e0:	003fad06 	br	18009398 <__alt_data_end+0xf8009398>

180094e4 <__adddf3>:
180094e4:	02c00434 	movhi	r11,16
180094e8:	5affffc4 	addi	r11,r11,-1
180094ec:	2806d7fa 	srli	r3,r5,31
180094f0:	2ad4703a 	and	r10,r5,r11
180094f4:	3ad2703a 	and	r9,r7,r11
180094f8:	3804d53a 	srli	r2,r7,20
180094fc:	3018d77a 	srli	r12,r6,29
18009500:	280ad53a 	srli	r5,r5,20
18009504:	501490fa 	slli	r10,r10,3
18009508:	2010d77a 	srli	r8,r4,29
1800950c:	481290fa 	slli	r9,r9,3
18009510:	380ed7fa 	srli	r7,r7,31
18009514:	defffb04 	addi	sp,sp,-20
18009518:	dc800215 	stw	r18,8(sp)
1800951c:	dc400115 	stw	r17,4(sp)
18009520:	dc000015 	stw	r16,0(sp)
18009524:	dfc00415 	stw	ra,16(sp)
18009528:	dcc00315 	stw	r19,12(sp)
1800952c:	1c803fcc 	andi	r18,r3,255
18009530:	2c01ffcc 	andi	r16,r5,2047
18009534:	5210b03a 	or	r8,r10,r8
18009538:	202290fa 	slli	r17,r4,3
1800953c:	1081ffcc 	andi	r2,r2,2047
18009540:	4b12b03a 	or	r9,r9,r12
18009544:	300c90fa 	slli	r6,r6,3
18009548:	91c07526 	beq	r18,r7,18009720 <__adddf3+0x23c>
1800954c:	8087c83a 	sub	r3,r16,r2
18009550:	00c0ab0e 	bge	zero,r3,18009800 <__adddf3+0x31c>
18009554:	10002a1e 	bne	r2,zero,18009600 <__adddf3+0x11c>
18009558:	4984b03a 	or	r2,r9,r6
1800955c:	1000961e 	bne	r2,zero,180097b8 <__adddf3+0x2d4>
18009560:	888001cc 	andi	r2,r17,7
18009564:	10000726 	beq	r2,zero,18009584 <__adddf3+0xa0>
18009568:	888003cc 	andi	r2,r17,15
1800956c:	00c00104 	movi	r3,4
18009570:	10c00426 	beq	r2,r3,18009584 <__adddf3+0xa0>
18009574:	88c7883a 	add	r3,r17,r3
18009578:	1c63803a 	cmpltu	r17,r3,r17
1800957c:	4451883a 	add	r8,r8,r17
18009580:	1823883a 	mov	r17,r3
18009584:	4080202c 	andhi	r2,r8,128
18009588:	10005926 	beq	r2,zero,180096f0 <__adddf3+0x20c>
1800958c:	84000044 	addi	r16,r16,1
18009590:	0081ffc4 	movi	r2,2047
18009594:	8080ba26 	beq	r16,r2,18009880 <__adddf3+0x39c>
18009598:	00bfe034 	movhi	r2,65408
1800959c:	10bfffc4 	addi	r2,r2,-1
180095a0:	4090703a 	and	r8,r8,r2
180095a4:	4004977a 	slli	r2,r8,29
180095a8:	4010927a 	slli	r8,r8,9
180095ac:	8822d0fa 	srli	r17,r17,3
180095b0:	8401ffcc 	andi	r16,r16,2047
180095b4:	4010d33a 	srli	r8,r8,12
180095b8:	9007883a 	mov	r3,r18
180095bc:	1444b03a 	or	r2,r2,r17
180095c0:	8401ffcc 	andi	r16,r16,2047
180095c4:	8020953a 	slli	r16,r16,20
180095c8:	18c03fcc 	andi	r3,r3,255
180095cc:	01000434 	movhi	r4,16
180095d0:	213fffc4 	addi	r4,r4,-1
180095d4:	180697fa 	slli	r3,r3,31
180095d8:	4110703a 	and	r8,r8,r4
180095dc:	4410b03a 	or	r8,r8,r16
180095e0:	40c6b03a 	or	r3,r8,r3
180095e4:	dfc00417 	ldw	ra,16(sp)
180095e8:	dcc00317 	ldw	r19,12(sp)
180095ec:	dc800217 	ldw	r18,8(sp)
180095f0:	dc400117 	ldw	r17,4(sp)
180095f4:	dc000017 	ldw	r16,0(sp)
180095f8:	dec00504 	addi	sp,sp,20
180095fc:	f800283a 	ret
18009600:	0081ffc4 	movi	r2,2047
18009604:	80bfd626 	beq	r16,r2,18009560 <__alt_data_end+0xf8009560>
18009608:	4a402034 	orhi	r9,r9,128
1800960c:	00800e04 	movi	r2,56
18009610:	10c09f16 	blt	r2,r3,18009890 <__adddf3+0x3ac>
18009614:	008007c4 	movi	r2,31
18009618:	10c0c216 	blt	r2,r3,18009924 <__adddf3+0x440>
1800961c:	00800804 	movi	r2,32
18009620:	10c5c83a 	sub	r2,r2,r3
18009624:	488a983a 	sll	r5,r9,r2
18009628:	30c8d83a 	srl	r4,r6,r3
1800962c:	3084983a 	sll	r2,r6,r2
18009630:	48c6d83a 	srl	r3,r9,r3
18009634:	290cb03a 	or	r6,r5,r4
18009638:	1004c03a 	cmpne	r2,r2,zero
1800963c:	308cb03a 	or	r6,r6,r2
18009640:	898dc83a 	sub	r6,r17,r6
18009644:	89a3803a 	cmpltu	r17,r17,r6
18009648:	40d1c83a 	sub	r8,r8,r3
1800964c:	4451c83a 	sub	r8,r8,r17
18009650:	3023883a 	mov	r17,r6
18009654:	4080202c 	andhi	r2,r8,128
18009658:	10002326 	beq	r2,zero,180096e8 <__adddf3+0x204>
1800965c:	04c02034 	movhi	r19,128
18009660:	9cffffc4 	addi	r19,r19,-1
18009664:	44e6703a 	and	r19,r8,r19
18009668:	98007626 	beq	r19,zero,18009844 <__adddf3+0x360>
1800966c:	9809883a 	mov	r4,r19
18009670:	800bd240 	call	1800bd24 <__clzsi2>
18009674:	10fffe04 	addi	r3,r2,-8
18009678:	010007c4 	movi	r4,31
1800967c:	20c07716 	blt	r4,r3,1800985c <__adddf3+0x378>
18009680:	00800804 	movi	r2,32
18009684:	10c5c83a 	sub	r2,r2,r3
18009688:	8884d83a 	srl	r2,r17,r2
1800968c:	98d0983a 	sll	r8,r19,r3
18009690:	88e2983a 	sll	r17,r17,r3
18009694:	1204b03a 	or	r2,r2,r8
18009698:	1c007416 	blt	r3,r16,1800986c <__adddf3+0x388>
1800969c:	1c21c83a 	sub	r16,r3,r16
180096a0:	82000044 	addi	r8,r16,1
180096a4:	00c007c4 	movi	r3,31
180096a8:	1a009116 	blt	r3,r8,180098f0 <__adddf3+0x40c>
180096ac:	00c00804 	movi	r3,32
180096b0:	1a07c83a 	sub	r3,r3,r8
180096b4:	8a08d83a 	srl	r4,r17,r8
180096b8:	88e2983a 	sll	r17,r17,r3
180096bc:	10c6983a 	sll	r3,r2,r3
180096c0:	1210d83a 	srl	r8,r2,r8
180096c4:	8804c03a 	cmpne	r2,r17,zero
180096c8:	1906b03a 	or	r3,r3,r4
180096cc:	18a2b03a 	or	r17,r3,r2
180096d0:	0021883a 	mov	r16,zero
180096d4:	003fa206 	br	18009560 <__alt_data_end+0xf8009560>
180096d8:	1890b03a 	or	r8,r3,r2
180096dc:	40017d26 	beq	r8,zero,18009cd4 <__adddf3+0x7f0>
180096e0:	1011883a 	mov	r8,r2
180096e4:	1823883a 	mov	r17,r3
180096e8:	888001cc 	andi	r2,r17,7
180096ec:	103f9e1e 	bne	r2,zero,18009568 <__alt_data_end+0xf8009568>
180096f0:	4004977a 	slli	r2,r8,29
180096f4:	8822d0fa 	srli	r17,r17,3
180096f8:	4010d0fa 	srli	r8,r8,3
180096fc:	9007883a 	mov	r3,r18
18009700:	1444b03a 	or	r2,r2,r17
18009704:	0101ffc4 	movi	r4,2047
18009708:	81002426 	beq	r16,r4,1800979c <__adddf3+0x2b8>
1800970c:	8120703a 	and	r16,r16,r4
18009710:	01000434 	movhi	r4,16
18009714:	213fffc4 	addi	r4,r4,-1
18009718:	4110703a 	and	r8,r8,r4
1800971c:	003fa806 	br	180095c0 <__alt_data_end+0xf80095c0>
18009720:	8089c83a 	sub	r4,r16,r2
18009724:	01005e0e 	bge	zero,r4,180098a0 <__adddf3+0x3bc>
18009728:	10002b26 	beq	r2,zero,180097d8 <__adddf3+0x2f4>
1800972c:	0081ffc4 	movi	r2,2047
18009730:	80bf8b26 	beq	r16,r2,18009560 <__alt_data_end+0xf8009560>
18009734:	4a402034 	orhi	r9,r9,128
18009738:	00800e04 	movi	r2,56
1800973c:	1100a40e 	bge	r2,r4,180099d0 <__adddf3+0x4ec>
18009740:	498cb03a 	or	r6,r9,r6
18009744:	300ac03a 	cmpne	r5,r6,zero
18009748:	0013883a 	mov	r9,zero
1800974c:	2c4b883a 	add	r5,r5,r17
18009750:	2c63803a 	cmpltu	r17,r5,r17
18009754:	4a11883a 	add	r8,r9,r8
18009758:	8a11883a 	add	r8,r17,r8
1800975c:	2823883a 	mov	r17,r5
18009760:	4080202c 	andhi	r2,r8,128
18009764:	103fe026 	beq	r2,zero,180096e8 <__alt_data_end+0xf80096e8>
18009768:	84000044 	addi	r16,r16,1
1800976c:	0081ffc4 	movi	r2,2047
18009770:	8080d226 	beq	r16,r2,18009abc <__adddf3+0x5d8>
18009774:	00bfe034 	movhi	r2,65408
18009778:	10bfffc4 	addi	r2,r2,-1
1800977c:	4090703a 	and	r8,r8,r2
18009780:	880ad07a 	srli	r5,r17,1
18009784:	400897fa 	slli	r4,r8,31
18009788:	88c0004c 	andi	r3,r17,1
1800978c:	28e2b03a 	or	r17,r5,r3
18009790:	4010d07a 	srli	r8,r8,1
18009794:	2462b03a 	or	r17,r4,r17
18009798:	003f7106 	br	18009560 <__alt_data_end+0xf8009560>
1800979c:	4088b03a 	or	r4,r8,r2
180097a0:	20014526 	beq	r4,zero,18009cb8 <__adddf3+0x7d4>
180097a4:	01000434 	movhi	r4,16
180097a8:	42000234 	orhi	r8,r8,8
180097ac:	213fffc4 	addi	r4,r4,-1
180097b0:	4110703a 	and	r8,r8,r4
180097b4:	003f8206 	br	180095c0 <__alt_data_end+0xf80095c0>
180097b8:	18ffffc4 	addi	r3,r3,-1
180097bc:	1800491e 	bne	r3,zero,180098e4 <__adddf3+0x400>
180097c0:	898bc83a 	sub	r5,r17,r6
180097c4:	8963803a 	cmpltu	r17,r17,r5
180097c8:	4251c83a 	sub	r8,r8,r9
180097cc:	4451c83a 	sub	r8,r8,r17
180097d0:	2823883a 	mov	r17,r5
180097d4:	003f9f06 	br	18009654 <__alt_data_end+0xf8009654>
180097d8:	4984b03a 	or	r2,r9,r6
180097dc:	103f6026 	beq	r2,zero,18009560 <__alt_data_end+0xf8009560>
180097e0:	213fffc4 	addi	r4,r4,-1
180097e4:	2000931e 	bne	r4,zero,18009a34 <__adddf3+0x550>
180097e8:	898d883a 	add	r6,r17,r6
180097ec:	3463803a 	cmpltu	r17,r6,r17
180097f0:	4251883a 	add	r8,r8,r9
180097f4:	8a11883a 	add	r8,r17,r8
180097f8:	3023883a 	mov	r17,r6
180097fc:	003fd806 	br	18009760 <__alt_data_end+0xf8009760>
18009800:	1800541e 	bne	r3,zero,18009954 <__adddf3+0x470>
18009804:	80800044 	addi	r2,r16,1
18009808:	1081ffcc 	andi	r2,r2,2047
1800980c:	00c00044 	movi	r3,1
18009810:	1880a00e 	bge	r3,r2,18009a94 <__adddf3+0x5b0>
18009814:	8989c83a 	sub	r4,r17,r6
18009818:	8905803a 	cmpltu	r2,r17,r4
1800981c:	4267c83a 	sub	r19,r8,r9
18009820:	98a7c83a 	sub	r19,r19,r2
18009824:	9880202c 	andhi	r2,r19,128
18009828:	10006326 	beq	r2,zero,180099b8 <__adddf3+0x4d4>
1800982c:	3463c83a 	sub	r17,r6,r17
18009830:	4a07c83a 	sub	r3,r9,r8
18009834:	344d803a 	cmpltu	r6,r6,r17
18009838:	19a7c83a 	sub	r19,r3,r6
1800983c:	3825883a 	mov	r18,r7
18009840:	983f8a1e 	bne	r19,zero,1800966c <__alt_data_end+0xf800966c>
18009844:	8809883a 	mov	r4,r17
18009848:	800bd240 	call	1800bd24 <__clzsi2>
1800984c:	10800804 	addi	r2,r2,32
18009850:	10fffe04 	addi	r3,r2,-8
18009854:	010007c4 	movi	r4,31
18009858:	20ff890e 	bge	r4,r3,18009680 <__alt_data_end+0xf8009680>
1800985c:	10bff604 	addi	r2,r2,-40
18009860:	8884983a 	sll	r2,r17,r2
18009864:	0023883a 	mov	r17,zero
18009868:	1c3f8c0e 	bge	r3,r16,1800969c <__alt_data_end+0xf800969c>
1800986c:	023fe034 	movhi	r8,65408
18009870:	423fffc4 	addi	r8,r8,-1
18009874:	80e1c83a 	sub	r16,r16,r3
18009878:	1210703a 	and	r8,r2,r8
1800987c:	003f3806 	br	18009560 <__alt_data_end+0xf8009560>
18009880:	9007883a 	mov	r3,r18
18009884:	0011883a 	mov	r8,zero
18009888:	0005883a 	mov	r2,zero
1800988c:	003f4c06 	br	180095c0 <__alt_data_end+0xf80095c0>
18009890:	498cb03a 	or	r6,r9,r6
18009894:	300cc03a 	cmpne	r6,r6,zero
18009898:	0007883a 	mov	r3,zero
1800989c:	003f6806 	br	18009640 <__alt_data_end+0xf8009640>
180098a0:	20009c1e 	bne	r4,zero,18009b14 <__adddf3+0x630>
180098a4:	80800044 	addi	r2,r16,1
180098a8:	1141ffcc 	andi	r5,r2,2047
180098ac:	01000044 	movi	r4,1
180098b0:	2140670e 	bge	r4,r5,18009a50 <__adddf3+0x56c>
180098b4:	0101ffc4 	movi	r4,2047
180098b8:	11007f26 	beq	r2,r4,18009ab8 <__adddf3+0x5d4>
180098bc:	898d883a 	add	r6,r17,r6
180098c0:	4247883a 	add	r3,r8,r9
180098c4:	3451803a 	cmpltu	r8,r6,r17
180098c8:	40d1883a 	add	r8,r8,r3
180098cc:	402297fa 	slli	r17,r8,31
180098d0:	300cd07a 	srli	r6,r6,1
180098d4:	4010d07a 	srli	r8,r8,1
180098d8:	1021883a 	mov	r16,r2
180098dc:	89a2b03a 	or	r17,r17,r6
180098e0:	003f1f06 	br	18009560 <__alt_data_end+0xf8009560>
180098e4:	0081ffc4 	movi	r2,2047
180098e8:	80bf481e 	bne	r16,r2,1800960c <__alt_data_end+0xf800960c>
180098ec:	003f1c06 	br	18009560 <__alt_data_end+0xf8009560>
180098f0:	843ff844 	addi	r16,r16,-31
180098f4:	01000804 	movi	r4,32
180098f8:	1406d83a 	srl	r3,r2,r16
180098fc:	41005026 	beq	r8,r4,18009a40 <__adddf3+0x55c>
18009900:	01001004 	movi	r4,64
18009904:	2211c83a 	sub	r8,r4,r8
18009908:	1204983a 	sll	r2,r2,r8
1800990c:	88a2b03a 	or	r17,r17,r2
18009910:	8822c03a 	cmpne	r17,r17,zero
18009914:	1c62b03a 	or	r17,r3,r17
18009918:	0011883a 	mov	r8,zero
1800991c:	0021883a 	mov	r16,zero
18009920:	003f7106 	br	180096e8 <__alt_data_end+0xf80096e8>
18009924:	193ff804 	addi	r4,r3,-32
18009928:	00800804 	movi	r2,32
1800992c:	4908d83a 	srl	r4,r9,r4
18009930:	18804526 	beq	r3,r2,18009a48 <__adddf3+0x564>
18009934:	00801004 	movi	r2,64
18009938:	10c5c83a 	sub	r2,r2,r3
1800993c:	4886983a 	sll	r3,r9,r2
18009940:	198cb03a 	or	r6,r3,r6
18009944:	300cc03a 	cmpne	r6,r6,zero
18009948:	218cb03a 	or	r6,r4,r6
1800994c:	0007883a 	mov	r3,zero
18009950:	003f3b06 	br	18009640 <__alt_data_end+0xf8009640>
18009954:	80002a26 	beq	r16,zero,18009a00 <__adddf3+0x51c>
18009958:	0101ffc4 	movi	r4,2047
1800995c:	11006826 	beq	r2,r4,18009b00 <__adddf3+0x61c>
18009960:	00c7c83a 	sub	r3,zero,r3
18009964:	42002034 	orhi	r8,r8,128
18009968:	01000e04 	movi	r4,56
1800996c:	20c07c16 	blt	r4,r3,18009b60 <__adddf3+0x67c>
18009970:	010007c4 	movi	r4,31
18009974:	20c0da16 	blt	r4,r3,18009ce0 <__adddf3+0x7fc>
18009978:	01000804 	movi	r4,32
1800997c:	20c9c83a 	sub	r4,r4,r3
18009980:	4114983a 	sll	r10,r8,r4
18009984:	88cad83a 	srl	r5,r17,r3
18009988:	8908983a 	sll	r4,r17,r4
1800998c:	40c6d83a 	srl	r3,r8,r3
18009990:	5162b03a 	or	r17,r10,r5
18009994:	2008c03a 	cmpne	r4,r4,zero
18009998:	8922b03a 	or	r17,r17,r4
1800999c:	3463c83a 	sub	r17,r6,r17
180099a0:	48c7c83a 	sub	r3,r9,r3
180099a4:	344d803a 	cmpltu	r6,r6,r17
180099a8:	1991c83a 	sub	r8,r3,r6
180099ac:	1021883a 	mov	r16,r2
180099b0:	3825883a 	mov	r18,r7
180099b4:	003f2706 	br	18009654 <__alt_data_end+0xf8009654>
180099b8:	24d0b03a 	or	r8,r4,r19
180099bc:	40001b1e 	bne	r8,zero,18009a2c <__adddf3+0x548>
180099c0:	0005883a 	mov	r2,zero
180099c4:	0007883a 	mov	r3,zero
180099c8:	0021883a 	mov	r16,zero
180099cc:	003f4d06 	br	18009704 <__alt_data_end+0xf8009704>
180099d0:	008007c4 	movi	r2,31
180099d4:	11003c16 	blt	r2,r4,18009ac8 <__adddf3+0x5e4>
180099d8:	00800804 	movi	r2,32
180099dc:	1105c83a 	sub	r2,r2,r4
180099e0:	488e983a 	sll	r7,r9,r2
180099e4:	310ad83a 	srl	r5,r6,r4
180099e8:	3084983a 	sll	r2,r6,r2
180099ec:	4912d83a 	srl	r9,r9,r4
180099f0:	394ab03a 	or	r5,r7,r5
180099f4:	1004c03a 	cmpne	r2,r2,zero
180099f8:	288ab03a 	or	r5,r5,r2
180099fc:	003f5306 	br	1800974c <__alt_data_end+0xf800974c>
18009a00:	4448b03a 	or	r4,r8,r17
18009a04:	20003e26 	beq	r4,zero,18009b00 <__adddf3+0x61c>
18009a08:	00c6303a 	nor	r3,zero,r3
18009a0c:	18003a1e 	bne	r3,zero,18009af8 <__adddf3+0x614>
18009a10:	3463c83a 	sub	r17,r6,r17
18009a14:	4a07c83a 	sub	r3,r9,r8
18009a18:	344d803a 	cmpltu	r6,r6,r17
18009a1c:	1991c83a 	sub	r8,r3,r6
18009a20:	1021883a 	mov	r16,r2
18009a24:	3825883a 	mov	r18,r7
18009a28:	003f0a06 	br	18009654 <__alt_data_end+0xf8009654>
18009a2c:	2023883a 	mov	r17,r4
18009a30:	003f0d06 	br	18009668 <__alt_data_end+0xf8009668>
18009a34:	0081ffc4 	movi	r2,2047
18009a38:	80bf3f1e 	bne	r16,r2,18009738 <__alt_data_end+0xf8009738>
18009a3c:	003ec806 	br	18009560 <__alt_data_end+0xf8009560>
18009a40:	0005883a 	mov	r2,zero
18009a44:	003fb106 	br	1800990c <__alt_data_end+0xf800990c>
18009a48:	0007883a 	mov	r3,zero
18009a4c:	003fbc06 	br	18009940 <__alt_data_end+0xf8009940>
18009a50:	4444b03a 	or	r2,r8,r17
18009a54:	8000871e 	bne	r16,zero,18009c74 <__adddf3+0x790>
18009a58:	1000ba26 	beq	r2,zero,18009d44 <__adddf3+0x860>
18009a5c:	4984b03a 	or	r2,r9,r6
18009a60:	103ebf26 	beq	r2,zero,18009560 <__alt_data_end+0xf8009560>
18009a64:	8985883a 	add	r2,r17,r6
18009a68:	4247883a 	add	r3,r8,r9
18009a6c:	1451803a 	cmpltu	r8,r2,r17
18009a70:	40d1883a 	add	r8,r8,r3
18009a74:	40c0202c 	andhi	r3,r8,128
18009a78:	1023883a 	mov	r17,r2
18009a7c:	183f1a26 	beq	r3,zero,180096e8 <__alt_data_end+0xf80096e8>
18009a80:	00bfe034 	movhi	r2,65408
18009a84:	10bfffc4 	addi	r2,r2,-1
18009a88:	2021883a 	mov	r16,r4
18009a8c:	4090703a 	and	r8,r8,r2
18009a90:	003eb306 	br	18009560 <__alt_data_end+0xf8009560>
18009a94:	4444b03a 	or	r2,r8,r17
18009a98:	8000291e 	bne	r16,zero,18009b40 <__adddf3+0x65c>
18009a9c:	10004b1e 	bne	r2,zero,18009bcc <__adddf3+0x6e8>
18009aa0:	4990b03a 	or	r8,r9,r6
18009aa4:	40008b26 	beq	r8,zero,18009cd4 <__adddf3+0x7f0>
18009aa8:	4811883a 	mov	r8,r9
18009aac:	3023883a 	mov	r17,r6
18009ab0:	3825883a 	mov	r18,r7
18009ab4:	003eaa06 	br	18009560 <__alt_data_end+0xf8009560>
18009ab8:	1021883a 	mov	r16,r2
18009abc:	0011883a 	mov	r8,zero
18009ac0:	0005883a 	mov	r2,zero
18009ac4:	003f0f06 	br	18009704 <__alt_data_end+0xf8009704>
18009ac8:	217ff804 	addi	r5,r4,-32
18009acc:	00800804 	movi	r2,32
18009ad0:	494ad83a 	srl	r5,r9,r5
18009ad4:	20807d26 	beq	r4,r2,18009ccc <__adddf3+0x7e8>
18009ad8:	00801004 	movi	r2,64
18009adc:	1109c83a 	sub	r4,r2,r4
18009ae0:	4912983a 	sll	r9,r9,r4
18009ae4:	498cb03a 	or	r6,r9,r6
18009ae8:	300cc03a 	cmpne	r6,r6,zero
18009aec:	298ab03a 	or	r5,r5,r6
18009af0:	0013883a 	mov	r9,zero
18009af4:	003f1506 	br	1800974c <__alt_data_end+0xf800974c>
18009af8:	0101ffc4 	movi	r4,2047
18009afc:	113f9a1e 	bne	r2,r4,18009968 <__alt_data_end+0xf8009968>
18009b00:	4811883a 	mov	r8,r9
18009b04:	3023883a 	mov	r17,r6
18009b08:	1021883a 	mov	r16,r2
18009b0c:	3825883a 	mov	r18,r7
18009b10:	003e9306 	br	18009560 <__alt_data_end+0xf8009560>
18009b14:	8000161e 	bne	r16,zero,18009b70 <__adddf3+0x68c>
18009b18:	444ab03a 	or	r5,r8,r17
18009b1c:	28005126 	beq	r5,zero,18009c64 <__adddf3+0x780>
18009b20:	0108303a 	nor	r4,zero,r4
18009b24:	20004d1e 	bne	r4,zero,18009c5c <__adddf3+0x778>
18009b28:	89a3883a 	add	r17,r17,r6
18009b2c:	4253883a 	add	r9,r8,r9
18009b30:	898d803a 	cmpltu	r6,r17,r6
18009b34:	3251883a 	add	r8,r6,r9
18009b38:	1021883a 	mov	r16,r2
18009b3c:	003f0806 	br	18009760 <__alt_data_end+0xf8009760>
18009b40:	1000301e 	bne	r2,zero,18009c04 <__adddf3+0x720>
18009b44:	4984b03a 	or	r2,r9,r6
18009b48:	10007126 	beq	r2,zero,18009d10 <__adddf3+0x82c>
18009b4c:	4811883a 	mov	r8,r9
18009b50:	3023883a 	mov	r17,r6
18009b54:	3825883a 	mov	r18,r7
18009b58:	0401ffc4 	movi	r16,2047
18009b5c:	003e8006 	br	18009560 <__alt_data_end+0xf8009560>
18009b60:	4462b03a 	or	r17,r8,r17
18009b64:	8822c03a 	cmpne	r17,r17,zero
18009b68:	0007883a 	mov	r3,zero
18009b6c:	003f8b06 	br	1800999c <__alt_data_end+0xf800999c>
18009b70:	0141ffc4 	movi	r5,2047
18009b74:	11403b26 	beq	r2,r5,18009c64 <__adddf3+0x780>
18009b78:	0109c83a 	sub	r4,zero,r4
18009b7c:	42002034 	orhi	r8,r8,128
18009b80:	01400e04 	movi	r5,56
18009b84:	29006716 	blt	r5,r4,18009d24 <__adddf3+0x840>
18009b88:	014007c4 	movi	r5,31
18009b8c:	29007016 	blt	r5,r4,18009d50 <__adddf3+0x86c>
18009b90:	01400804 	movi	r5,32
18009b94:	290bc83a 	sub	r5,r5,r4
18009b98:	4154983a 	sll	r10,r8,r5
18009b9c:	890ed83a 	srl	r7,r17,r4
18009ba0:	894a983a 	sll	r5,r17,r5
18009ba4:	4108d83a 	srl	r4,r8,r4
18009ba8:	51e2b03a 	or	r17,r10,r7
18009bac:	280ac03a 	cmpne	r5,r5,zero
18009bb0:	8962b03a 	or	r17,r17,r5
18009bb4:	89a3883a 	add	r17,r17,r6
18009bb8:	2253883a 	add	r9,r4,r9
18009bbc:	898d803a 	cmpltu	r6,r17,r6
18009bc0:	3251883a 	add	r8,r6,r9
18009bc4:	1021883a 	mov	r16,r2
18009bc8:	003ee506 	br	18009760 <__alt_data_end+0xf8009760>
18009bcc:	4984b03a 	or	r2,r9,r6
18009bd0:	103e6326 	beq	r2,zero,18009560 <__alt_data_end+0xf8009560>
18009bd4:	8987c83a 	sub	r3,r17,r6
18009bd8:	88c9803a 	cmpltu	r4,r17,r3
18009bdc:	4245c83a 	sub	r2,r8,r9
18009be0:	1105c83a 	sub	r2,r2,r4
18009be4:	1100202c 	andhi	r4,r2,128
18009be8:	203ebb26 	beq	r4,zero,180096d8 <__alt_data_end+0xf80096d8>
18009bec:	3463c83a 	sub	r17,r6,r17
18009bf0:	4a07c83a 	sub	r3,r9,r8
18009bf4:	344d803a 	cmpltu	r6,r6,r17
18009bf8:	1991c83a 	sub	r8,r3,r6
18009bfc:	3825883a 	mov	r18,r7
18009c00:	003e5706 	br	18009560 <__alt_data_end+0xf8009560>
18009c04:	4984b03a 	or	r2,r9,r6
18009c08:	10002e26 	beq	r2,zero,18009cc4 <__adddf3+0x7e0>
18009c0c:	4004d0fa 	srli	r2,r8,3
18009c10:	8822d0fa 	srli	r17,r17,3
18009c14:	4010977a 	slli	r8,r8,29
18009c18:	10c0022c 	andhi	r3,r2,8
18009c1c:	4462b03a 	or	r17,r8,r17
18009c20:	18000826 	beq	r3,zero,18009c44 <__adddf3+0x760>
18009c24:	4808d0fa 	srli	r4,r9,3
18009c28:	20c0022c 	andhi	r3,r4,8
18009c2c:	1800051e 	bne	r3,zero,18009c44 <__adddf3+0x760>
18009c30:	300cd0fa 	srli	r6,r6,3
18009c34:	4806977a 	slli	r3,r9,29
18009c38:	2005883a 	mov	r2,r4
18009c3c:	3825883a 	mov	r18,r7
18009c40:	19a2b03a 	or	r17,r3,r6
18009c44:	8810d77a 	srli	r8,r17,29
18009c48:	100490fa 	slli	r2,r2,3
18009c4c:	882290fa 	slli	r17,r17,3
18009c50:	0401ffc4 	movi	r16,2047
18009c54:	4090b03a 	or	r8,r8,r2
18009c58:	003e4106 	br	18009560 <__alt_data_end+0xf8009560>
18009c5c:	0141ffc4 	movi	r5,2047
18009c60:	117fc71e 	bne	r2,r5,18009b80 <__alt_data_end+0xf8009b80>
18009c64:	4811883a 	mov	r8,r9
18009c68:	3023883a 	mov	r17,r6
18009c6c:	1021883a 	mov	r16,r2
18009c70:	003e3b06 	br	18009560 <__alt_data_end+0xf8009560>
18009c74:	10002f26 	beq	r2,zero,18009d34 <__adddf3+0x850>
18009c78:	4984b03a 	or	r2,r9,r6
18009c7c:	10001126 	beq	r2,zero,18009cc4 <__adddf3+0x7e0>
18009c80:	4004d0fa 	srli	r2,r8,3
18009c84:	8822d0fa 	srli	r17,r17,3
18009c88:	4010977a 	slli	r8,r8,29
18009c8c:	10c0022c 	andhi	r3,r2,8
18009c90:	4462b03a 	or	r17,r8,r17
18009c94:	183feb26 	beq	r3,zero,18009c44 <__alt_data_end+0xf8009c44>
18009c98:	4808d0fa 	srli	r4,r9,3
18009c9c:	20c0022c 	andhi	r3,r4,8
18009ca0:	183fe81e 	bne	r3,zero,18009c44 <__alt_data_end+0xf8009c44>
18009ca4:	300cd0fa 	srli	r6,r6,3
18009ca8:	4806977a 	slli	r3,r9,29
18009cac:	2005883a 	mov	r2,r4
18009cb0:	19a2b03a 	or	r17,r3,r6
18009cb4:	003fe306 	br	18009c44 <__alt_data_end+0xf8009c44>
18009cb8:	0011883a 	mov	r8,zero
18009cbc:	0005883a 	mov	r2,zero
18009cc0:	003e3f06 	br	180095c0 <__alt_data_end+0xf80095c0>
18009cc4:	0401ffc4 	movi	r16,2047
18009cc8:	003e2506 	br	18009560 <__alt_data_end+0xf8009560>
18009ccc:	0013883a 	mov	r9,zero
18009cd0:	003f8406 	br	18009ae4 <__alt_data_end+0xf8009ae4>
18009cd4:	0005883a 	mov	r2,zero
18009cd8:	0007883a 	mov	r3,zero
18009cdc:	003e8906 	br	18009704 <__alt_data_end+0xf8009704>
18009ce0:	197ff804 	addi	r5,r3,-32
18009ce4:	01000804 	movi	r4,32
18009ce8:	414ad83a 	srl	r5,r8,r5
18009cec:	19002426 	beq	r3,r4,18009d80 <__adddf3+0x89c>
18009cf0:	01001004 	movi	r4,64
18009cf4:	20c7c83a 	sub	r3,r4,r3
18009cf8:	40c6983a 	sll	r3,r8,r3
18009cfc:	1c46b03a 	or	r3,r3,r17
18009d00:	1806c03a 	cmpne	r3,r3,zero
18009d04:	28e2b03a 	or	r17,r5,r3
18009d08:	0007883a 	mov	r3,zero
18009d0c:	003f2306 	br	1800999c <__alt_data_end+0xf800999c>
18009d10:	0007883a 	mov	r3,zero
18009d14:	5811883a 	mov	r8,r11
18009d18:	00bfffc4 	movi	r2,-1
18009d1c:	0401ffc4 	movi	r16,2047
18009d20:	003e7806 	br	18009704 <__alt_data_end+0xf8009704>
18009d24:	4462b03a 	or	r17,r8,r17
18009d28:	8822c03a 	cmpne	r17,r17,zero
18009d2c:	0009883a 	mov	r4,zero
18009d30:	003fa006 	br	18009bb4 <__alt_data_end+0xf8009bb4>
18009d34:	4811883a 	mov	r8,r9
18009d38:	3023883a 	mov	r17,r6
18009d3c:	0401ffc4 	movi	r16,2047
18009d40:	003e0706 	br	18009560 <__alt_data_end+0xf8009560>
18009d44:	4811883a 	mov	r8,r9
18009d48:	3023883a 	mov	r17,r6
18009d4c:	003e0406 	br	18009560 <__alt_data_end+0xf8009560>
18009d50:	21fff804 	addi	r7,r4,-32
18009d54:	01400804 	movi	r5,32
18009d58:	41ced83a 	srl	r7,r8,r7
18009d5c:	21400a26 	beq	r4,r5,18009d88 <__adddf3+0x8a4>
18009d60:	01401004 	movi	r5,64
18009d64:	2909c83a 	sub	r4,r5,r4
18009d68:	4108983a 	sll	r4,r8,r4
18009d6c:	2448b03a 	or	r4,r4,r17
18009d70:	2008c03a 	cmpne	r4,r4,zero
18009d74:	3922b03a 	or	r17,r7,r4
18009d78:	0009883a 	mov	r4,zero
18009d7c:	003f8d06 	br	18009bb4 <__alt_data_end+0xf8009bb4>
18009d80:	0007883a 	mov	r3,zero
18009d84:	003fdd06 	br	18009cfc <__alt_data_end+0xf8009cfc>
18009d88:	0009883a 	mov	r4,zero
18009d8c:	003ff706 	br	18009d6c <__alt_data_end+0xf8009d6c>

18009d90 <__divdf3>:
18009d90:	defff004 	addi	sp,sp,-64
18009d94:	dc800815 	stw	r18,32(sp)
18009d98:	2824d53a 	srli	r18,r5,20
18009d9c:	dd800c15 	stw	r22,48(sp)
18009da0:	282cd7fa 	srli	r22,r5,31
18009da4:	dc000615 	stw	r16,24(sp)
18009da8:	04000434 	movhi	r16,16
18009dac:	843fffc4 	addi	r16,r16,-1
18009db0:	dfc00f15 	stw	ra,60(sp)
18009db4:	df000e15 	stw	fp,56(sp)
18009db8:	ddc00d15 	stw	r23,52(sp)
18009dbc:	dd400b15 	stw	r21,44(sp)
18009dc0:	dd000a15 	stw	r20,40(sp)
18009dc4:	dcc00915 	stw	r19,36(sp)
18009dc8:	dc400715 	stw	r17,28(sp)
18009dcc:	9481ffcc 	andi	r18,r18,2047
18009dd0:	2c20703a 	and	r16,r5,r16
18009dd4:	b2003fcc 	andi	r8,r22,255
18009dd8:	90006126 	beq	r18,zero,18009f60 <__divdf3+0x1d0>
18009ddc:	0081ffc4 	movi	r2,2047
18009de0:	202b883a 	mov	r21,r4
18009de4:	90803726 	beq	r18,r2,18009ec4 <__divdf3+0x134>
18009de8:	80800434 	orhi	r2,r16,16
18009dec:	100490fa 	slli	r2,r2,3
18009df0:	2020d77a 	srli	r16,r4,29
18009df4:	202a90fa 	slli	r21,r4,3
18009df8:	94bf0044 	addi	r18,r18,-1023
18009dfc:	80a0b03a 	or	r16,r16,r2
18009e00:	0013883a 	mov	r9,zero
18009e04:	000b883a 	mov	r5,zero
18009e08:	3806d53a 	srli	r3,r7,20
18009e0c:	382ed7fa 	srli	r23,r7,31
18009e10:	04400434 	movhi	r17,16
18009e14:	8c7fffc4 	addi	r17,r17,-1
18009e18:	18c1ffcc 	andi	r3,r3,2047
18009e1c:	3029883a 	mov	r20,r6
18009e20:	3c62703a 	and	r17,r7,r17
18009e24:	bf003fcc 	andi	fp,r23,255
18009e28:	18006e26 	beq	r3,zero,18009fe4 <__divdf3+0x254>
18009e2c:	0081ffc4 	movi	r2,2047
18009e30:	18806626 	beq	r3,r2,18009fcc <__divdf3+0x23c>
18009e34:	88800434 	orhi	r2,r17,16
18009e38:	100490fa 	slli	r2,r2,3
18009e3c:	3022d77a 	srli	r17,r6,29
18009e40:	302890fa 	slli	r20,r6,3
18009e44:	18ff0044 	addi	r3,r3,-1023
18009e48:	88a2b03a 	or	r17,r17,r2
18009e4c:	000f883a 	mov	r7,zero
18009e50:	b5e6f03a 	xor	r19,r22,r23
18009e54:	3a4cb03a 	or	r6,r7,r9
18009e58:	008003c4 	movi	r2,15
18009e5c:	9809883a 	mov	r4,r19
18009e60:	90c7c83a 	sub	r3,r18,r3
18009e64:	9cc03fcc 	andi	r19,r19,255
18009e68:	11809636 	bltu	r2,r6,1800a0c4 <__divdf3+0x334>
18009e6c:	300c90ba 	slli	r6,r6,2
18009e70:	00860074 	movhi	r2,6145
18009e74:	10a7a104 	addi	r2,r2,-24956
18009e78:	308d883a 	add	r6,r6,r2
18009e7c:	30800017 	ldw	r2,0(r6)
18009e80:	1000683a 	jmp	r2
18009e84:	1800a0c4 	addi	zero,r3,643
18009e88:	18009efc 	xorhi	zero,r3,635
18009e8c:	1800a0b4 	orhi	zero,r3,642
18009e90:	18009ef0 	cmpltui	zero,r3,635
18009e94:	1800a0b4 	orhi	zero,r3,642
18009e98:	1800a088 	cmpgei	zero,r3,642
18009e9c:	1800a0b4 	orhi	zero,r3,642
18009ea0:	18009ef0 	cmpltui	zero,r3,635
18009ea4:	18009efc 	xorhi	zero,r3,635
18009ea8:	18009efc 	xorhi	zero,r3,635
18009eac:	1800a088 	cmpgei	zero,r3,642
18009eb0:	18009ef0 	cmpltui	zero,r3,635
18009eb4:	18009ee0 	cmpeqi	zero,r3,635
18009eb8:	18009ee0 	cmpeqi	zero,r3,635
18009ebc:	18009ee0 	cmpeqi	zero,r3,635
18009ec0:	1800a44c 	andi	zero,r3,657
18009ec4:	2404b03a 	or	r2,r4,r16
18009ec8:	10006c1e 	bne	r2,zero,1800a07c <__divdf3+0x2ec>
18009ecc:	02400204 	movi	r9,8
18009ed0:	0021883a 	mov	r16,zero
18009ed4:	002b883a 	mov	r21,zero
18009ed8:	01400084 	movi	r5,2
18009edc:	003fca06 	br	18009e08 <__alt_data_end+0xf8009e08>
18009ee0:	8023883a 	mov	r17,r16
18009ee4:	a829883a 	mov	r20,r21
18009ee8:	4039883a 	mov	fp,r8
18009eec:	280f883a 	mov	r7,r5
18009ef0:	00800084 	movi	r2,2
18009ef4:	3881601e 	bne	r7,r2,1800a478 <__divdf3+0x6e8>
18009ef8:	e027883a 	mov	r19,fp
18009efc:	9900004c 	andi	r4,r19,1
18009f00:	0081ffc4 	movi	r2,2047
18009f04:	0021883a 	mov	r16,zero
18009f08:	002b883a 	mov	r21,zero
18009f0c:	1004953a 	slli	r2,r2,20
18009f10:	20c03fcc 	andi	r3,r4,255
18009f14:	01400434 	movhi	r5,16
18009f18:	297fffc4 	addi	r5,r5,-1
18009f1c:	180697fa 	slli	r3,r3,31
18009f20:	8160703a 	and	r16,r16,r5
18009f24:	80a0b03a 	or	r16,r16,r2
18009f28:	80c6b03a 	or	r3,r16,r3
18009f2c:	a805883a 	mov	r2,r21
18009f30:	dfc00f17 	ldw	ra,60(sp)
18009f34:	df000e17 	ldw	fp,56(sp)
18009f38:	ddc00d17 	ldw	r23,52(sp)
18009f3c:	dd800c17 	ldw	r22,48(sp)
18009f40:	dd400b17 	ldw	r21,44(sp)
18009f44:	dd000a17 	ldw	r20,40(sp)
18009f48:	dcc00917 	ldw	r19,36(sp)
18009f4c:	dc800817 	ldw	r18,32(sp)
18009f50:	dc400717 	ldw	r17,28(sp)
18009f54:	dc000617 	ldw	r16,24(sp)
18009f58:	dec01004 	addi	sp,sp,64
18009f5c:	f800283a 	ret
18009f60:	2404b03a 	or	r2,r4,r16
18009f64:	2023883a 	mov	r17,r4
18009f68:	10003f26 	beq	r2,zero,1800a068 <__divdf3+0x2d8>
18009f6c:	80015e26 	beq	r16,zero,1800a4e8 <__divdf3+0x758>
18009f70:	8009883a 	mov	r4,r16
18009f74:	d9800215 	stw	r6,8(sp)
18009f78:	d9c00515 	stw	r7,20(sp)
18009f7c:	da000415 	stw	r8,16(sp)
18009f80:	800bd240 	call	1800bd24 <__clzsi2>
18009f84:	d9800217 	ldw	r6,8(sp)
18009f88:	d9c00517 	ldw	r7,20(sp)
18009f8c:	da000417 	ldw	r8,16(sp)
18009f90:	113ffd44 	addi	r4,r2,-11
18009f94:	00c00704 	movi	r3,28
18009f98:	19014f16 	blt	r3,r4,1800a4d8 <__divdf3+0x748>
18009f9c:	00c00744 	movi	r3,29
18009fa0:	157ffe04 	addi	r21,r2,-8
18009fa4:	1907c83a 	sub	r3,r3,r4
18009fa8:	8560983a 	sll	r16,r16,r21
18009fac:	88c6d83a 	srl	r3,r17,r3
18009fb0:	8d6a983a 	sll	r21,r17,r21
18009fb4:	1c20b03a 	or	r16,r3,r16
18009fb8:	1080fcc4 	addi	r2,r2,1011
18009fbc:	00a5c83a 	sub	r18,zero,r2
18009fc0:	0013883a 	mov	r9,zero
18009fc4:	000b883a 	mov	r5,zero
18009fc8:	003f8f06 	br	18009e08 <__alt_data_end+0xf8009e08>
18009fcc:	3444b03a 	or	r2,r6,r17
18009fd0:	1000231e 	bne	r2,zero,1800a060 <__divdf3+0x2d0>
18009fd4:	0023883a 	mov	r17,zero
18009fd8:	0029883a 	mov	r20,zero
18009fdc:	01c00084 	movi	r7,2
18009fe0:	003f9b06 	br	18009e50 <__alt_data_end+0xf8009e50>
18009fe4:	3444b03a 	or	r2,r6,r17
18009fe8:	10001926 	beq	r2,zero,1800a050 <__divdf3+0x2c0>
18009fec:	88014b26 	beq	r17,zero,1800a51c <__divdf3+0x78c>
18009ff0:	8809883a 	mov	r4,r17
18009ff4:	d9400115 	stw	r5,4(sp)
18009ff8:	d9800215 	stw	r6,8(sp)
18009ffc:	da000415 	stw	r8,16(sp)
1800a000:	da400315 	stw	r9,12(sp)
1800a004:	800bd240 	call	1800bd24 <__clzsi2>
1800a008:	d9400117 	ldw	r5,4(sp)
1800a00c:	d9800217 	ldw	r6,8(sp)
1800a010:	da000417 	ldw	r8,16(sp)
1800a014:	da400317 	ldw	r9,12(sp)
1800a018:	113ffd44 	addi	r4,r2,-11
1800a01c:	00c00704 	movi	r3,28
1800a020:	19013a16 	blt	r3,r4,1800a50c <__divdf3+0x77c>
1800a024:	00c00744 	movi	r3,29
1800a028:	153ffe04 	addi	r20,r2,-8
1800a02c:	1907c83a 	sub	r3,r3,r4
1800a030:	8d22983a 	sll	r17,r17,r20
1800a034:	30c6d83a 	srl	r3,r6,r3
1800a038:	3528983a 	sll	r20,r6,r20
1800a03c:	1c62b03a 	or	r17,r3,r17
1800a040:	1080fcc4 	addi	r2,r2,1011
1800a044:	0087c83a 	sub	r3,zero,r2
1800a048:	000f883a 	mov	r7,zero
1800a04c:	003f8006 	br	18009e50 <__alt_data_end+0xf8009e50>
1800a050:	0023883a 	mov	r17,zero
1800a054:	0029883a 	mov	r20,zero
1800a058:	01c00044 	movi	r7,1
1800a05c:	003f7c06 	br	18009e50 <__alt_data_end+0xf8009e50>
1800a060:	01c000c4 	movi	r7,3
1800a064:	003f7a06 	br	18009e50 <__alt_data_end+0xf8009e50>
1800a068:	02400104 	movi	r9,4
1800a06c:	0021883a 	mov	r16,zero
1800a070:	002b883a 	mov	r21,zero
1800a074:	01400044 	movi	r5,1
1800a078:	003f6306 	br	18009e08 <__alt_data_end+0xf8009e08>
1800a07c:	02400304 	movi	r9,12
1800a080:	014000c4 	movi	r5,3
1800a084:	003f6006 	br	18009e08 <__alt_data_end+0xf8009e08>
1800a088:	04000434 	movhi	r16,16
1800a08c:	0009883a 	mov	r4,zero
1800a090:	843fffc4 	addi	r16,r16,-1
1800a094:	057fffc4 	movi	r21,-1
1800a098:	0081ffc4 	movi	r2,2047
1800a09c:	003f9b06 	br	18009f0c <__alt_data_end+0xf8009f0c>
1800a0a0:	00c00044 	movi	r3,1
1800a0a4:	1887c83a 	sub	r3,r3,r2
1800a0a8:	01000e04 	movi	r4,56
1800a0ac:	20c1530e 	bge	r4,r3,1800a5fc <__divdf3+0x86c>
1800a0b0:	9900004c 	andi	r4,r19,1
1800a0b4:	0005883a 	mov	r2,zero
1800a0b8:	0021883a 	mov	r16,zero
1800a0bc:	002b883a 	mov	r21,zero
1800a0c0:	003f9206 	br	18009f0c <__alt_data_end+0xf8009f0c>
1800a0c4:	8c012e36 	bltu	r17,r16,1800a580 <__divdf3+0x7f0>
1800a0c8:	84412c26 	beq	r16,r17,1800a57c <__divdf3+0x7ec>
1800a0cc:	a82f883a 	mov	r23,r21
1800a0d0:	18ffffc4 	addi	r3,r3,-1
1800a0d4:	002b883a 	mov	r21,zero
1800a0d8:	a004d63a 	srli	r2,r20,24
1800a0dc:	8822923a 	slli	r17,r17,8
1800a0e0:	a028923a 	slli	r20,r20,8
1800a0e4:	8009883a 	mov	r4,r16
1800a0e8:	88acb03a 	or	r22,r17,r2
1800a0ec:	dd000015 	stw	r20,0(sp)
1800a0f0:	b028d43a 	srli	r20,r22,16
1800a0f4:	d8c00215 	stw	r3,8(sp)
1800a0f8:	b4bfffcc 	andi	r18,r22,65535
1800a0fc:	a00b883a 	mov	r5,r20
1800a100:	8000a180 	call	18000a18 <__udivsi3>
1800a104:	100b883a 	mov	r5,r2
1800a108:	9009883a 	mov	r4,r18
1800a10c:	1023883a 	mov	r17,r2
1800a110:	8000ad40 	call	18000ad4 <__mulsi3>
1800a114:	8009883a 	mov	r4,r16
1800a118:	a00b883a 	mov	r5,r20
1800a11c:	1039883a 	mov	fp,r2
1800a120:	8000a7c0 	call	18000a7c <__umodsi3>
1800a124:	1004943a 	slli	r2,r2,16
1800a128:	b808d43a 	srli	r4,r23,16
1800a12c:	d8c00217 	ldw	r3,8(sp)
1800a130:	2084b03a 	or	r2,r4,r2
1800a134:	1700062e 	bgeu	r2,fp,1800a150 <__divdf3+0x3c0>
1800a138:	1585883a 	add	r2,r2,r22
1800a13c:	893fffc4 	addi	r4,r17,-1
1800a140:	15811d36 	bltu	r2,r22,1800a5b8 <__divdf3+0x828>
1800a144:	17011c2e 	bgeu	r2,fp,1800a5b8 <__divdf3+0x828>
1800a148:	8c7fff84 	addi	r17,r17,-2
1800a14c:	1585883a 	add	r2,r2,r22
1800a150:	1739c83a 	sub	fp,r2,fp
1800a154:	a00b883a 	mov	r5,r20
1800a158:	e009883a 	mov	r4,fp
1800a15c:	d8c00215 	stw	r3,8(sp)
1800a160:	8000a180 	call	18000a18 <__udivsi3>
1800a164:	100b883a 	mov	r5,r2
1800a168:	9009883a 	mov	r4,r18
1800a16c:	1021883a 	mov	r16,r2
1800a170:	8000ad40 	call	18000ad4 <__mulsi3>
1800a174:	a00b883a 	mov	r5,r20
1800a178:	e009883a 	mov	r4,fp
1800a17c:	d8800415 	stw	r2,16(sp)
1800a180:	8000a7c0 	call	18000a7c <__umodsi3>
1800a184:	1004943a 	slli	r2,r2,16
1800a188:	da000417 	ldw	r8,16(sp)
1800a18c:	bdffffcc 	andi	r23,r23,65535
1800a190:	b884b03a 	or	r2,r23,r2
1800a194:	d8c00217 	ldw	r3,8(sp)
1800a198:	1200062e 	bgeu	r2,r8,1800a1b4 <__divdf3+0x424>
1800a19c:	1585883a 	add	r2,r2,r22
1800a1a0:	813fffc4 	addi	r4,r16,-1
1800a1a4:	15810236 	bltu	r2,r22,1800a5b0 <__divdf3+0x820>
1800a1a8:	1201012e 	bgeu	r2,r8,1800a5b0 <__divdf3+0x820>
1800a1ac:	843fff84 	addi	r16,r16,-2
1800a1b0:	1585883a 	add	r2,r2,r22
1800a1b4:	8822943a 	slli	r17,r17,16
1800a1b8:	d9800017 	ldw	r6,0(sp)
1800a1bc:	1211c83a 	sub	r8,r2,r8
1800a1c0:	8c22b03a 	or	r17,r17,r16
1800a1c4:	373fffcc 	andi	fp,r6,65535
1800a1c8:	8abfffcc 	andi	r10,r17,65535
1800a1cc:	8820d43a 	srli	r16,r17,16
1800a1d0:	5009883a 	mov	r4,r10
1800a1d4:	e00b883a 	mov	r5,fp
1800a1d8:	302ed43a 	srli	r23,r6,16
1800a1dc:	d8c00215 	stw	r3,8(sp)
1800a1e0:	da000415 	stw	r8,16(sp)
1800a1e4:	da800115 	stw	r10,4(sp)
1800a1e8:	8000ad40 	call	18000ad4 <__mulsi3>
1800a1ec:	800b883a 	mov	r5,r16
1800a1f0:	e009883a 	mov	r4,fp
1800a1f4:	d8800515 	stw	r2,20(sp)
1800a1f8:	8000ad40 	call	18000ad4 <__mulsi3>
1800a1fc:	8009883a 	mov	r4,r16
1800a200:	b80b883a 	mov	r5,r23
1800a204:	d8800315 	stw	r2,12(sp)
1800a208:	8000ad40 	call	18000ad4 <__mulsi3>
1800a20c:	da800117 	ldw	r10,4(sp)
1800a210:	b80b883a 	mov	r5,r23
1800a214:	1021883a 	mov	r16,r2
1800a218:	5009883a 	mov	r4,r10
1800a21c:	8000ad40 	call	18000ad4 <__mulsi3>
1800a220:	d9c00517 	ldw	r7,20(sp)
1800a224:	da400317 	ldw	r9,12(sp)
1800a228:	d8c00217 	ldw	r3,8(sp)
1800a22c:	3808d43a 	srli	r4,r7,16
1800a230:	1245883a 	add	r2,r2,r9
1800a234:	da000417 	ldw	r8,16(sp)
1800a238:	2085883a 	add	r2,r4,r2
1800a23c:	1240022e 	bgeu	r2,r9,1800a248 <__divdf3+0x4b8>
1800a240:	01000074 	movhi	r4,1
1800a244:	8121883a 	add	r16,r16,r4
1800a248:	1008d43a 	srli	r4,r2,16
1800a24c:	1004943a 	slli	r2,r2,16
1800a250:	39ffffcc 	andi	r7,r7,65535
1800a254:	2409883a 	add	r4,r4,r16
1800a258:	11c5883a 	add	r2,r2,r7
1800a25c:	4100bb36 	bltu	r8,r4,1800a54c <__divdf3+0x7bc>
1800a260:	4100d726 	beq	r8,r4,1800a5c0 <__divdf3+0x830>
1800a264:	4109c83a 	sub	r4,r8,r4
1800a268:	a8a1c83a 	sub	r16,r21,r2
1800a26c:	ac2b803a 	cmpltu	r21,r21,r16
1800a270:	256bc83a 	sub	r21,r4,r21
1800a274:	b540d926 	beq	r22,r21,1800a5dc <__divdf3+0x84c>
1800a278:	a00b883a 	mov	r5,r20
1800a27c:	a809883a 	mov	r4,r21
1800a280:	d8c00215 	stw	r3,8(sp)
1800a284:	8000a180 	call	18000a18 <__udivsi3>
1800a288:	100b883a 	mov	r5,r2
1800a28c:	9009883a 	mov	r4,r18
1800a290:	d8800515 	stw	r2,20(sp)
1800a294:	8000ad40 	call	18000ad4 <__mulsi3>
1800a298:	a809883a 	mov	r4,r21
1800a29c:	a00b883a 	mov	r5,r20
1800a2a0:	d8800415 	stw	r2,16(sp)
1800a2a4:	8000a7c0 	call	18000a7c <__umodsi3>
1800a2a8:	1004943a 	slli	r2,r2,16
1800a2ac:	8008d43a 	srli	r4,r16,16
1800a2b0:	da000417 	ldw	r8,16(sp)
1800a2b4:	d8c00217 	ldw	r3,8(sp)
1800a2b8:	2084b03a 	or	r2,r4,r2
1800a2bc:	d9c00517 	ldw	r7,20(sp)
1800a2c0:	1200062e 	bgeu	r2,r8,1800a2dc <__divdf3+0x54c>
1800a2c4:	1585883a 	add	r2,r2,r22
1800a2c8:	393fffc4 	addi	r4,r7,-1
1800a2cc:	1580c536 	bltu	r2,r22,1800a5e4 <__divdf3+0x854>
1800a2d0:	1200c42e 	bgeu	r2,r8,1800a5e4 <__divdf3+0x854>
1800a2d4:	39ffff84 	addi	r7,r7,-2
1800a2d8:	1585883a 	add	r2,r2,r22
1800a2dc:	122bc83a 	sub	r21,r2,r8
1800a2e0:	a00b883a 	mov	r5,r20
1800a2e4:	a809883a 	mov	r4,r21
1800a2e8:	d8c00215 	stw	r3,8(sp)
1800a2ec:	d9c00515 	stw	r7,20(sp)
1800a2f0:	8000a180 	call	18000a18 <__udivsi3>
1800a2f4:	9009883a 	mov	r4,r18
1800a2f8:	100b883a 	mov	r5,r2
1800a2fc:	d8800415 	stw	r2,16(sp)
1800a300:	8000ad40 	call	18000ad4 <__mulsi3>
1800a304:	a809883a 	mov	r4,r21
1800a308:	a00b883a 	mov	r5,r20
1800a30c:	1025883a 	mov	r18,r2
1800a310:	8000a7c0 	call	18000a7c <__umodsi3>
1800a314:	1004943a 	slli	r2,r2,16
1800a318:	813fffcc 	andi	r4,r16,65535
1800a31c:	d8c00217 	ldw	r3,8(sp)
1800a320:	20a0b03a 	or	r16,r4,r2
1800a324:	d9c00517 	ldw	r7,20(sp)
1800a328:	da000417 	ldw	r8,16(sp)
1800a32c:	8480062e 	bgeu	r16,r18,1800a348 <__divdf3+0x5b8>
1800a330:	85a1883a 	add	r16,r16,r22
1800a334:	40bfffc4 	addi	r2,r8,-1
1800a338:	8580ac36 	bltu	r16,r22,1800a5ec <__divdf3+0x85c>
1800a33c:	8480ab2e 	bgeu	r16,r18,1800a5ec <__divdf3+0x85c>
1800a340:	423fff84 	addi	r8,r8,-2
1800a344:	85a1883a 	add	r16,r16,r22
1800a348:	3804943a 	slli	r2,r7,16
1800a34c:	84a1c83a 	sub	r16,r16,r18
1800a350:	e009883a 	mov	r4,fp
1800a354:	1228b03a 	or	r20,r2,r8
1800a358:	a1ffffcc 	andi	r7,r20,65535
1800a35c:	a024d43a 	srli	r18,r20,16
1800a360:	380b883a 	mov	r5,r7
1800a364:	d8c00215 	stw	r3,8(sp)
1800a368:	d9c00515 	stw	r7,20(sp)
1800a36c:	8000ad40 	call	18000ad4 <__mulsi3>
1800a370:	900b883a 	mov	r5,r18
1800a374:	e009883a 	mov	r4,fp
1800a378:	102b883a 	mov	r21,r2
1800a37c:	8000ad40 	call	18000ad4 <__mulsi3>
1800a380:	900b883a 	mov	r5,r18
1800a384:	b809883a 	mov	r4,r23
1800a388:	1039883a 	mov	fp,r2
1800a38c:	8000ad40 	call	18000ad4 <__mulsi3>
1800a390:	d9c00517 	ldw	r7,20(sp)
1800a394:	b80b883a 	mov	r5,r23
1800a398:	1025883a 	mov	r18,r2
1800a39c:	3809883a 	mov	r4,r7
1800a3a0:	8000ad40 	call	18000ad4 <__mulsi3>
1800a3a4:	a808d43a 	srli	r4,r21,16
1800a3a8:	1705883a 	add	r2,r2,fp
1800a3ac:	d8c00217 	ldw	r3,8(sp)
1800a3b0:	2085883a 	add	r2,r4,r2
1800a3b4:	1700022e 	bgeu	r2,fp,1800a3c0 <__divdf3+0x630>
1800a3b8:	01000074 	movhi	r4,1
1800a3bc:	9125883a 	add	r18,r18,r4
1800a3c0:	1008d43a 	srli	r4,r2,16
1800a3c4:	1004943a 	slli	r2,r2,16
1800a3c8:	ad7fffcc 	andi	r21,r21,65535
1800a3cc:	2489883a 	add	r4,r4,r18
1800a3d0:	1545883a 	add	r2,r2,r21
1800a3d4:	81003836 	bltu	r16,r4,1800a4b8 <__divdf3+0x728>
1800a3d8:	81003626 	beq	r16,r4,1800a4b4 <__divdf3+0x724>
1800a3dc:	a5000054 	ori	r20,r20,1
1800a3e0:	1880ffc4 	addi	r2,r3,1023
1800a3e4:	00bf2e0e 	bge	zero,r2,1800a0a0 <__alt_data_end+0xf800a0a0>
1800a3e8:	a10001cc 	andi	r4,r20,7
1800a3ec:	20000726 	beq	r4,zero,1800a40c <__divdf3+0x67c>
1800a3f0:	a10003cc 	andi	r4,r20,15
1800a3f4:	01400104 	movi	r5,4
1800a3f8:	21400426 	beq	r4,r5,1800a40c <__divdf3+0x67c>
1800a3fc:	a149883a 	add	r4,r20,r5
1800a400:	2529803a 	cmpltu	r20,r4,r20
1800a404:	8d23883a 	add	r17,r17,r20
1800a408:	2029883a 	mov	r20,r4
1800a40c:	8900402c 	andhi	r4,r17,256
1800a410:	20000426 	beq	r4,zero,1800a424 <__divdf3+0x694>
1800a414:	18810004 	addi	r2,r3,1024
1800a418:	00ffc034 	movhi	r3,65280
1800a41c:	18ffffc4 	addi	r3,r3,-1
1800a420:	88e2703a 	and	r17,r17,r3
1800a424:	00c1ff84 	movi	r3,2046
1800a428:	18beb416 	blt	r3,r2,18009efc <__alt_data_end+0xf8009efc>
1800a42c:	a028d0fa 	srli	r20,r20,3
1800a430:	882a977a 	slli	r21,r17,29
1800a434:	8820927a 	slli	r16,r17,9
1800a438:	1081ffcc 	andi	r2,r2,2047
1800a43c:	ad2ab03a 	or	r21,r21,r20
1800a440:	8020d33a 	srli	r16,r16,12
1800a444:	9900004c 	andi	r4,r19,1
1800a448:	003eb006 	br	18009f0c <__alt_data_end+0xf8009f0c>
1800a44c:	8080022c 	andhi	r2,r16,8
1800a450:	10001226 	beq	r2,zero,1800a49c <__divdf3+0x70c>
1800a454:	8880022c 	andhi	r2,r17,8
1800a458:	1000101e 	bne	r2,zero,1800a49c <__divdf3+0x70c>
1800a45c:	00800434 	movhi	r2,16
1800a460:	8c000234 	orhi	r16,r17,8
1800a464:	10bfffc4 	addi	r2,r2,-1
1800a468:	b809883a 	mov	r4,r23
1800a46c:	80a0703a 	and	r16,r16,r2
1800a470:	a02b883a 	mov	r21,r20
1800a474:	003f0806 	br	1800a098 <__alt_data_end+0xf800a098>
1800a478:	008000c4 	movi	r2,3
1800a47c:	3880b126 	beq	r7,r2,1800a744 <__divdf3+0x9b4>
1800a480:	00800044 	movi	r2,1
1800a484:	38805b1e 	bne	r7,r2,1800a5f4 <__divdf3+0x864>
1800a488:	e009883a 	mov	r4,fp
1800a48c:	0005883a 	mov	r2,zero
1800a490:	0021883a 	mov	r16,zero
1800a494:	002b883a 	mov	r21,zero
1800a498:	003e9c06 	br	18009f0c <__alt_data_end+0xf8009f0c>
1800a49c:	00800434 	movhi	r2,16
1800a4a0:	84000234 	orhi	r16,r16,8
1800a4a4:	10bfffc4 	addi	r2,r2,-1
1800a4a8:	b009883a 	mov	r4,r22
1800a4ac:	80a0703a 	and	r16,r16,r2
1800a4b0:	003ef906 	br	1800a098 <__alt_data_end+0xf800a098>
1800a4b4:	103fca26 	beq	r2,zero,1800a3e0 <__alt_data_end+0xf800a3e0>
1800a4b8:	b421883a 	add	r16,r22,r16
1800a4bc:	a17fffc4 	addi	r5,r20,-1
1800a4c0:	8580422e 	bgeu	r16,r22,1800a5cc <__divdf3+0x83c>
1800a4c4:	2829883a 	mov	r20,r5
1800a4c8:	813fc41e 	bne	r16,r4,1800a3dc <__alt_data_end+0xf800a3dc>
1800a4cc:	d9800017 	ldw	r6,0(sp)
1800a4d0:	30bfc21e 	bne	r6,r2,1800a3dc <__alt_data_end+0xf800a3dc>
1800a4d4:	003fc206 	br	1800a3e0 <__alt_data_end+0xf800a3e0>
1800a4d8:	143ff604 	addi	r16,r2,-40
1800a4dc:	8c20983a 	sll	r16,r17,r16
1800a4e0:	002b883a 	mov	r21,zero
1800a4e4:	003eb406 	br	18009fb8 <__alt_data_end+0xf8009fb8>
1800a4e8:	d9800215 	stw	r6,8(sp)
1800a4ec:	d9c00515 	stw	r7,20(sp)
1800a4f0:	da000415 	stw	r8,16(sp)
1800a4f4:	800bd240 	call	1800bd24 <__clzsi2>
1800a4f8:	10800804 	addi	r2,r2,32
1800a4fc:	da000417 	ldw	r8,16(sp)
1800a500:	d9c00517 	ldw	r7,20(sp)
1800a504:	d9800217 	ldw	r6,8(sp)
1800a508:	003ea106 	br	18009f90 <__alt_data_end+0xf8009f90>
1800a50c:	147ff604 	addi	r17,r2,-40
1800a510:	3462983a 	sll	r17,r6,r17
1800a514:	0029883a 	mov	r20,zero
1800a518:	003ec906 	br	1800a040 <__alt_data_end+0xf800a040>
1800a51c:	3009883a 	mov	r4,r6
1800a520:	d9400115 	stw	r5,4(sp)
1800a524:	d9800215 	stw	r6,8(sp)
1800a528:	da000415 	stw	r8,16(sp)
1800a52c:	da400315 	stw	r9,12(sp)
1800a530:	800bd240 	call	1800bd24 <__clzsi2>
1800a534:	10800804 	addi	r2,r2,32
1800a538:	da400317 	ldw	r9,12(sp)
1800a53c:	da000417 	ldw	r8,16(sp)
1800a540:	d9800217 	ldw	r6,8(sp)
1800a544:	d9400117 	ldw	r5,4(sp)
1800a548:	003eb306 	br	1800a018 <__alt_data_end+0xf800a018>
1800a54c:	d9800017 	ldw	r6,0(sp)
1800a550:	a9ab883a 	add	r21,r21,r6
1800a554:	a98b803a 	cmpltu	r5,r21,r6
1800a558:	2d8b883a 	add	r5,r5,r22
1800a55c:	2a11883a 	add	r8,r5,r8
1800a560:	897fffc4 	addi	r5,r17,-1
1800a564:	b2000c2e 	bgeu	r22,r8,1800a598 <__divdf3+0x808>
1800a568:	41003f36 	bltu	r8,r4,1800a668 <__divdf3+0x8d8>
1800a56c:	22006c26 	beq	r4,r8,1800a720 <__divdf3+0x990>
1800a570:	4109c83a 	sub	r4,r8,r4
1800a574:	2823883a 	mov	r17,r5
1800a578:	003f3b06 	br	1800a268 <__alt_data_end+0xf800a268>
1800a57c:	ad3ed336 	bltu	r21,r20,1800a0cc <__alt_data_end+0xf800a0cc>
1800a580:	a804d07a 	srli	r2,r21,1
1800a584:	802e97fa 	slli	r23,r16,31
1800a588:	a82a97fa 	slli	r21,r21,31
1800a58c:	8020d07a 	srli	r16,r16,1
1800a590:	b8aeb03a 	or	r23,r23,r2
1800a594:	003ed006 	br	1800a0d8 <__alt_data_end+0xf800a0d8>
1800a598:	b23ff51e 	bne	r22,r8,1800a570 <__alt_data_end+0xf800a570>
1800a59c:	d9800017 	ldw	r6,0(sp)
1800a5a0:	a9bff12e 	bgeu	r21,r6,1800a568 <__alt_data_end+0xf800a568>
1800a5a4:	b109c83a 	sub	r4,r22,r4
1800a5a8:	2823883a 	mov	r17,r5
1800a5ac:	003f2e06 	br	1800a268 <__alt_data_end+0xf800a268>
1800a5b0:	2021883a 	mov	r16,r4
1800a5b4:	003eff06 	br	1800a1b4 <__alt_data_end+0xf800a1b4>
1800a5b8:	2023883a 	mov	r17,r4
1800a5bc:	003ee406 	br	1800a150 <__alt_data_end+0xf800a150>
1800a5c0:	a8bfe236 	bltu	r21,r2,1800a54c <__alt_data_end+0xf800a54c>
1800a5c4:	0009883a 	mov	r4,zero
1800a5c8:	003f2706 	br	1800a268 <__alt_data_end+0xf800a268>
1800a5cc:	81002d36 	bltu	r16,r4,1800a684 <__divdf3+0x8f4>
1800a5d0:	24005626 	beq	r4,r16,1800a72c <__divdf3+0x99c>
1800a5d4:	2829883a 	mov	r20,r5
1800a5d8:	003f8006 	br	1800a3dc <__alt_data_end+0xf800a3dc>
1800a5dc:	053fffc4 	movi	r20,-1
1800a5e0:	003f7f06 	br	1800a3e0 <__alt_data_end+0xf800a3e0>
1800a5e4:	200f883a 	mov	r7,r4
1800a5e8:	003f3c06 	br	1800a2dc <__alt_data_end+0xf800a2dc>
1800a5ec:	1011883a 	mov	r8,r2
1800a5f0:	003f5506 	br	1800a348 <__alt_data_end+0xf800a348>
1800a5f4:	e027883a 	mov	r19,fp
1800a5f8:	003f7906 	br	1800a3e0 <__alt_data_end+0xf800a3e0>
1800a5fc:	010007c4 	movi	r4,31
1800a600:	20c02816 	blt	r4,r3,1800a6a4 <__divdf3+0x914>
1800a604:	00800804 	movi	r2,32
1800a608:	10c5c83a 	sub	r2,r2,r3
1800a60c:	888a983a 	sll	r5,r17,r2
1800a610:	a0c8d83a 	srl	r4,r20,r3
1800a614:	a084983a 	sll	r2,r20,r2
1800a618:	88e2d83a 	srl	r17,r17,r3
1800a61c:	2906b03a 	or	r3,r5,r4
1800a620:	1004c03a 	cmpne	r2,r2,zero
1800a624:	1886b03a 	or	r3,r3,r2
1800a628:	188001cc 	andi	r2,r3,7
1800a62c:	10000726 	beq	r2,zero,1800a64c <__divdf3+0x8bc>
1800a630:	188003cc 	andi	r2,r3,15
1800a634:	01000104 	movi	r4,4
1800a638:	11000426 	beq	r2,r4,1800a64c <__divdf3+0x8bc>
1800a63c:	1805883a 	mov	r2,r3
1800a640:	10c00104 	addi	r3,r2,4
1800a644:	1885803a 	cmpltu	r2,r3,r2
1800a648:	88a3883a 	add	r17,r17,r2
1800a64c:	8880202c 	andhi	r2,r17,128
1800a650:	10002926 	beq	r2,zero,1800a6f8 <__divdf3+0x968>
1800a654:	9900004c 	andi	r4,r19,1
1800a658:	00800044 	movi	r2,1
1800a65c:	0021883a 	mov	r16,zero
1800a660:	002b883a 	mov	r21,zero
1800a664:	003e2906 	br	18009f0c <__alt_data_end+0xf8009f0c>
1800a668:	d9800017 	ldw	r6,0(sp)
1800a66c:	8c7fff84 	addi	r17,r17,-2
1800a670:	a9ab883a 	add	r21,r21,r6
1800a674:	a98b803a 	cmpltu	r5,r21,r6
1800a678:	2d8b883a 	add	r5,r5,r22
1800a67c:	2a11883a 	add	r8,r5,r8
1800a680:	003ef806 	br	1800a264 <__alt_data_end+0xf800a264>
1800a684:	d9800017 	ldw	r6,0(sp)
1800a688:	318f883a 	add	r7,r6,r6
1800a68c:	398b803a 	cmpltu	r5,r7,r6
1800a690:	2d8d883a 	add	r6,r5,r22
1800a694:	81a1883a 	add	r16,r16,r6
1800a698:	a17fff84 	addi	r5,r20,-2
1800a69c:	d9c00015 	stw	r7,0(sp)
1800a6a0:	003f8806 	br	1800a4c4 <__alt_data_end+0xf800a4c4>
1800a6a4:	013ff844 	movi	r4,-31
1800a6a8:	2085c83a 	sub	r2,r4,r2
1800a6ac:	8888d83a 	srl	r4,r17,r2
1800a6b0:	00800804 	movi	r2,32
1800a6b4:	18802126 	beq	r3,r2,1800a73c <__divdf3+0x9ac>
1800a6b8:	04001004 	movi	r16,64
1800a6bc:	80c7c83a 	sub	r3,r16,r3
1800a6c0:	88e0983a 	sll	r16,r17,r3
1800a6c4:	8504b03a 	or	r2,r16,r20
1800a6c8:	1004c03a 	cmpne	r2,r2,zero
1800a6cc:	2084b03a 	or	r2,r4,r2
1800a6d0:	144001cc 	andi	r17,r2,7
1800a6d4:	88000d1e 	bne	r17,zero,1800a70c <__divdf3+0x97c>
1800a6d8:	0021883a 	mov	r16,zero
1800a6dc:	102ad0fa 	srli	r21,r2,3
1800a6e0:	9900004c 	andi	r4,r19,1
1800a6e4:	0005883a 	mov	r2,zero
1800a6e8:	ac6ab03a 	or	r21,r21,r17
1800a6ec:	003e0706 	br	18009f0c <__alt_data_end+0xf8009f0c>
1800a6f0:	1007883a 	mov	r3,r2
1800a6f4:	0023883a 	mov	r17,zero
1800a6f8:	8820927a 	slli	r16,r17,9
1800a6fc:	1805883a 	mov	r2,r3
1800a700:	8822977a 	slli	r17,r17,29
1800a704:	8020d33a 	srli	r16,r16,12
1800a708:	003ff406 	br	1800a6dc <__alt_data_end+0xf800a6dc>
1800a70c:	10c003cc 	andi	r3,r2,15
1800a710:	01000104 	movi	r4,4
1800a714:	193ff626 	beq	r3,r4,1800a6f0 <__alt_data_end+0xf800a6f0>
1800a718:	0023883a 	mov	r17,zero
1800a71c:	003fc806 	br	1800a640 <__alt_data_end+0xf800a640>
1800a720:	a8bfd136 	bltu	r21,r2,1800a668 <__alt_data_end+0xf800a668>
1800a724:	2823883a 	mov	r17,r5
1800a728:	003fa606 	br	1800a5c4 <__alt_data_end+0xf800a5c4>
1800a72c:	d9800017 	ldw	r6,0(sp)
1800a730:	30bfd436 	bltu	r6,r2,1800a684 <__alt_data_end+0xf800a684>
1800a734:	2829883a 	mov	r20,r5
1800a738:	003f6406 	br	1800a4cc <__alt_data_end+0xf800a4cc>
1800a73c:	0021883a 	mov	r16,zero
1800a740:	003fe006 	br	1800a6c4 <__alt_data_end+0xf800a6c4>
1800a744:	00800434 	movhi	r2,16
1800a748:	8c000234 	orhi	r16,r17,8
1800a74c:	10bfffc4 	addi	r2,r2,-1
1800a750:	e009883a 	mov	r4,fp
1800a754:	80a0703a 	and	r16,r16,r2
1800a758:	a02b883a 	mov	r21,r20
1800a75c:	003e4e06 	br	1800a098 <__alt_data_end+0xf800a098>

1800a760 <__eqdf2>:
1800a760:	2804d53a 	srli	r2,r5,20
1800a764:	3806d53a 	srli	r3,r7,20
1800a768:	02000434 	movhi	r8,16
1800a76c:	423fffc4 	addi	r8,r8,-1
1800a770:	1081ffcc 	andi	r2,r2,2047
1800a774:	0281ffc4 	movi	r10,2047
1800a778:	2a12703a 	and	r9,r5,r8
1800a77c:	18c1ffcc 	andi	r3,r3,2047
1800a780:	3a10703a 	and	r8,r7,r8
1800a784:	280ad7fa 	srli	r5,r5,31
1800a788:	380ed7fa 	srli	r7,r7,31
1800a78c:	12801026 	beq	r2,r10,1800a7d0 <__eqdf2+0x70>
1800a790:	0281ffc4 	movi	r10,2047
1800a794:	1a800a26 	beq	r3,r10,1800a7c0 <__eqdf2+0x60>
1800a798:	10c00226 	beq	r2,r3,1800a7a4 <__eqdf2+0x44>
1800a79c:	00800044 	movi	r2,1
1800a7a0:	f800283a 	ret
1800a7a4:	4a3ffd1e 	bne	r9,r8,1800a79c <__alt_data_end+0xf800a79c>
1800a7a8:	21bffc1e 	bne	r4,r6,1800a79c <__alt_data_end+0xf800a79c>
1800a7ac:	29c00c26 	beq	r5,r7,1800a7e0 <__eqdf2+0x80>
1800a7b0:	103ffa1e 	bne	r2,zero,1800a79c <__alt_data_end+0xf800a79c>
1800a7b4:	2244b03a 	or	r2,r4,r9
1800a7b8:	1004c03a 	cmpne	r2,r2,zero
1800a7bc:	f800283a 	ret
1800a7c0:	3214b03a 	or	r10,r6,r8
1800a7c4:	503ff426 	beq	r10,zero,1800a798 <__alt_data_end+0xf800a798>
1800a7c8:	00800044 	movi	r2,1
1800a7cc:	f800283a 	ret
1800a7d0:	2254b03a 	or	r10,r4,r9
1800a7d4:	503fee26 	beq	r10,zero,1800a790 <__alt_data_end+0xf800a790>
1800a7d8:	00800044 	movi	r2,1
1800a7dc:	f800283a 	ret
1800a7e0:	0005883a 	mov	r2,zero
1800a7e4:	f800283a 	ret

1800a7e8 <__gedf2>:
1800a7e8:	2804d53a 	srli	r2,r5,20
1800a7ec:	3806d53a 	srli	r3,r7,20
1800a7f0:	02000434 	movhi	r8,16
1800a7f4:	423fffc4 	addi	r8,r8,-1
1800a7f8:	1081ffcc 	andi	r2,r2,2047
1800a7fc:	0241ffc4 	movi	r9,2047
1800a800:	2a14703a 	and	r10,r5,r8
1800a804:	18c1ffcc 	andi	r3,r3,2047
1800a808:	3a10703a 	and	r8,r7,r8
1800a80c:	280ad7fa 	srli	r5,r5,31
1800a810:	380ed7fa 	srli	r7,r7,31
1800a814:	12401d26 	beq	r2,r9,1800a88c <__gedf2+0xa4>
1800a818:	0241ffc4 	movi	r9,2047
1800a81c:	1a401226 	beq	r3,r9,1800a868 <__gedf2+0x80>
1800a820:	1000081e 	bne	r2,zero,1800a844 <__gedf2+0x5c>
1800a824:	2296b03a 	or	r11,r4,r10
1800a828:	5813003a 	cmpeq	r9,r11,zero
1800a82c:	1800091e 	bne	r3,zero,1800a854 <__gedf2+0x6c>
1800a830:	3218b03a 	or	r12,r6,r8
1800a834:	6000071e 	bne	r12,zero,1800a854 <__gedf2+0x6c>
1800a838:	0005883a 	mov	r2,zero
1800a83c:	5800101e 	bne	r11,zero,1800a880 <__gedf2+0x98>
1800a840:	f800283a 	ret
1800a844:	18000c1e 	bne	r3,zero,1800a878 <__gedf2+0x90>
1800a848:	3212b03a 	or	r9,r6,r8
1800a84c:	48000c26 	beq	r9,zero,1800a880 <__gedf2+0x98>
1800a850:	0013883a 	mov	r9,zero
1800a854:	39c03fcc 	andi	r7,r7,255
1800a858:	48000826 	beq	r9,zero,1800a87c <__gedf2+0x94>
1800a85c:	38000926 	beq	r7,zero,1800a884 <__gedf2+0x9c>
1800a860:	00800044 	movi	r2,1
1800a864:	f800283a 	ret
1800a868:	3212b03a 	or	r9,r6,r8
1800a86c:	483fec26 	beq	r9,zero,1800a820 <__alt_data_end+0xf800a820>
1800a870:	00bfff84 	movi	r2,-2
1800a874:	f800283a 	ret
1800a878:	39c03fcc 	andi	r7,r7,255
1800a87c:	29c00626 	beq	r5,r7,1800a898 <__gedf2+0xb0>
1800a880:	283ff726 	beq	r5,zero,1800a860 <__alt_data_end+0xf800a860>
1800a884:	00bfffc4 	movi	r2,-1
1800a888:	f800283a 	ret
1800a88c:	2292b03a 	or	r9,r4,r10
1800a890:	483fe126 	beq	r9,zero,1800a818 <__alt_data_end+0xf800a818>
1800a894:	003ff606 	br	1800a870 <__alt_data_end+0xf800a870>
1800a898:	18bff916 	blt	r3,r2,1800a880 <__alt_data_end+0xf800a880>
1800a89c:	10c00316 	blt	r2,r3,1800a8ac <__gedf2+0xc4>
1800a8a0:	42bff736 	bltu	r8,r10,1800a880 <__alt_data_end+0xf800a880>
1800a8a4:	52000326 	beq	r10,r8,1800a8b4 <__gedf2+0xcc>
1800a8a8:	5200042e 	bgeu	r10,r8,1800a8bc <__gedf2+0xd4>
1800a8ac:	283fec1e 	bne	r5,zero,1800a860 <__alt_data_end+0xf800a860>
1800a8b0:	003ff406 	br	1800a884 <__alt_data_end+0xf800a884>
1800a8b4:	313ff236 	bltu	r6,r4,1800a880 <__alt_data_end+0xf800a880>
1800a8b8:	21bffc36 	bltu	r4,r6,1800a8ac <__alt_data_end+0xf800a8ac>
1800a8bc:	0005883a 	mov	r2,zero
1800a8c0:	f800283a 	ret

1800a8c4 <__ledf2>:
1800a8c4:	2804d53a 	srli	r2,r5,20
1800a8c8:	3810d53a 	srli	r8,r7,20
1800a8cc:	00c00434 	movhi	r3,16
1800a8d0:	18ffffc4 	addi	r3,r3,-1
1800a8d4:	1081ffcc 	andi	r2,r2,2047
1800a8d8:	0241ffc4 	movi	r9,2047
1800a8dc:	28d4703a 	and	r10,r5,r3
1800a8e0:	4201ffcc 	andi	r8,r8,2047
1800a8e4:	38c6703a 	and	r3,r7,r3
1800a8e8:	280ad7fa 	srli	r5,r5,31
1800a8ec:	380ed7fa 	srli	r7,r7,31
1800a8f0:	12401f26 	beq	r2,r9,1800a970 <__ledf2+0xac>
1800a8f4:	0241ffc4 	movi	r9,2047
1800a8f8:	42401426 	beq	r8,r9,1800a94c <__ledf2+0x88>
1800a8fc:	1000091e 	bne	r2,zero,1800a924 <__ledf2+0x60>
1800a900:	2296b03a 	or	r11,r4,r10
1800a904:	5813003a 	cmpeq	r9,r11,zero
1800a908:	29403fcc 	andi	r5,r5,255
1800a90c:	40000a1e 	bne	r8,zero,1800a938 <__ledf2+0x74>
1800a910:	30d8b03a 	or	r12,r6,r3
1800a914:	6000081e 	bne	r12,zero,1800a938 <__ledf2+0x74>
1800a918:	0005883a 	mov	r2,zero
1800a91c:	5800111e 	bne	r11,zero,1800a964 <__ledf2+0xa0>
1800a920:	f800283a 	ret
1800a924:	29403fcc 	andi	r5,r5,255
1800a928:	40000c1e 	bne	r8,zero,1800a95c <__ledf2+0x98>
1800a92c:	30d2b03a 	or	r9,r6,r3
1800a930:	48000c26 	beq	r9,zero,1800a964 <__ledf2+0xa0>
1800a934:	0013883a 	mov	r9,zero
1800a938:	39c03fcc 	andi	r7,r7,255
1800a93c:	48000826 	beq	r9,zero,1800a960 <__ledf2+0x9c>
1800a940:	38001126 	beq	r7,zero,1800a988 <__ledf2+0xc4>
1800a944:	00800044 	movi	r2,1
1800a948:	f800283a 	ret
1800a94c:	30d2b03a 	or	r9,r6,r3
1800a950:	483fea26 	beq	r9,zero,1800a8fc <__alt_data_end+0xf800a8fc>
1800a954:	00800084 	movi	r2,2
1800a958:	f800283a 	ret
1800a95c:	39c03fcc 	andi	r7,r7,255
1800a960:	39400726 	beq	r7,r5,1800a980 <__ledf2+0xbc>
1800a964:	2800081e 	bne	r5,zero,1800a988 <__ledf2+0xc4>
1800a968:	00800044 	movi	r2,1
1800a96c:	f800283a 	ret
1800a970:	2292b03a 	or	r9,r4,r10
1800a974:	483fdf26 	beq	r9,zero,1800a8f4 <__alt_data_end+0xf800a8f4>
1800a978:	00800084 	movi	r2,2
1800a97c:	f800283a 	ret
1800a980:	4080030e 	bge	r8,r2,1800a990 <__ledf2+0xcc>
1800a984:	383fef26 	beq	r7,zero,1800a944 <__alt_data_end+0xf800a944>
1800a988:	00bfffc4 	movi	r2,-1
1800a98c:	f800283a 	ret
1800a990:	123feb16 	blt	r2,r8,1800a940 <__alt_data_end+0xf800a940>
1800a994:	1abff336 	bltu	r3,r10,1800a964 <__alt_data_end+0xf800a964>
1800a998:	50c00326 	beq	r10,r3,1800a9a8 <__ledf2+0xe4>
1800a99c:	50c0042e 	bgeu	r10,r3,1800a9b0 <__ledf2+0xec>
1800a9a0:	283fe81e 	bne	r5,zero,1800a944 <__alt_data_end+0xf800a944>
1800a9a4:	003ff806 	br	1800a988 <__alt_data_end+0xf800a988>
1800a9a8:	313fee36 	bltu	r6,r4,1800a964 <__alt_data_end+0xf800a964>
1800a9ac:	21bffc36 	bltu	r4,r6,1800a9a0 <__alt_data_end+0xf800a9a0>
1800a9b0:	0005883a 	mov	r2,zero
1800a9b4:	f800283a 	ret

1800a9b8 <__muldf3>:
1800a9b8:	deffee04 	addi	sp,sp,-72
1800a9bc:	dd000c15 	stw	r20,48(sp)
1800a9c0:	2828d53a 	srli	r20,r5,20
1800a9c4:	ddc00f15 	stw	r23,60(sp)
1800a9c8:	282ed7fa 	srli	r23,r5,31
1800a9cc:	dc000815 	stw	r16,32(sp)
1800a9d0:	04000434 	movhi	r16,16
1800a9d4:	dcc00b15 	stw	r19,44(sp)
1800a9d8:	843fffc4 	addi	r16,r16,-1
1800a9dc:	dfc01115 	stw	ra,68(sp)
1800a9e0:	df001015 	stw	fp,64(sp)
1800a9e4:	dd800e15 	stw	r22,56(sp)
1800a9e8:	dd400d15 	stw	r21,52(sp)
1800a9ec:	dc800a15 	stw	r18,40(sp)
1800a9f0:	dc400915 	stw	r17,36(sp)
1800a9f4:	a501ffcc 	andi	r20,r20,2047
1800a9f8:	2c20703a 	and	r16,r5,r16
1800a9fc:	b827883a 	mov	r19,r23
1800aa00:	ba403fcc 	andi	r9,r23,255
1800aa04:	a0006026 	beq	r20,zero,1800ab88 <__muldf3+0x1d0>
1800aa08:	0081ffc4 	movi	r2,2047
1800aa0c:	202d883a 	mov	r22,r4
1800aa10:	a0803626 	beq	r20,r2,1800aaec <__muldf3+0x134>
1800aa14:	84000434 	orhi	r16,r16,16
1800aa18:	200ad77a 	srli	r5,r4,29
1800aa1c:	800490fa 	slli	r2,r16,3
1800aa20:	202c90fa 	slli	r22,r4,3
1800aa24:	a53f0044 	addi	r20,r20,-1023
1800aa28:	28a0b03a 	or	r16,r5,r2
1800aa2c:	002b883a 	mov	r21,zero
1800aa30:	000b883a 	mov	r5,zero
1800aa34:	3804d53a 	srli	r2,r7,20
1800aa38:	3838d7fa 	srli	fp,r7,31
1800aa3c:	04400434 	movhi	r17,16
1800aa40:	8c7fffc4 	addi	r17,r17,-1
1800aa44:	1081ffcc 	andi	r2,r2,2047
1800aa48:	3025883a 	mov	r18,r6
1800aa4c:	3c62703a 	and	r17,r7,r17
1800aa50:	e2803fcc 	andi	r10,fp,255
1800aa54:	10006d26 	beq	r2,zero,1800ac0c <__muldf3+0x254>
1800aa58:	00c1ffc4 	movi	r3,2047
1800aa5c:	10c06526 	beq	r2,r3,1800abf4 <__muldf3+0x23c>
1800aa60:	8c400434 	orhi	r17,r17,16
1800aa64:	300ed77a 	srli	r7,r6,29
1800aa68:	880690fa 	slli	r3,r17,3
1800aa6c:	302490fa 	slli	r18,r6,3
1800aa70:	10bf0044 	addi	r2,r2,-1023
1800aa74:	38e2b03a 	or	r17,r7,r3
1800aa78:	000f883a 	mov	r7,zero
1800aa7c:	a087883a 	add	r3,r20,r2
1800aa80:	010003c4 	movi	r4,15
1800aa84:	3d44b03a 	or	r2,r7,r21
1800aa88:	e5ccf03a 	xor	r6,fp,r23
1800aa8c:	1a000044 	addi	r8,r3,1
1800aa90:	20809b36 	bltu	r4,r2,1800ad00 <__muldf3+0x348>
1800aa94:	100490ba 	slli	r2,r2,2
1800aa98:	01060074 	movhi	r4,6145
1800aa9c:	212aab04 	addi	r4,r4,-21844
1800aaa0:	1105883a 	add	r2,r2,r4
1800aaa4:	10800017 	ldw	r2,0(r2)
1800aaa8:	1000683a 	jmp	r2
1800aaac:	1800ad00 	call	11800ad0 <__alt_mem_onchip_memory2_0+0x11800ad0>
1800aab0:	1800ab0c 	andi	zero,r3,684
1800aab4:	1800ab0c 	andi	zero,r3,684
1800aab8:	1800ab08 	cmpgei	zero,r3,684
1800aabc:	1800acdc 	xori	zero,r3,691
1800aac0:	1800acdc 	xori	zero,r3,691
1800aac4:	1800acc4 	addi	zero,r3,691
1800aac8:	1800ab08 	cmpgei	zero,r3,684
1800aacc:	1800acdc 	xori	zero,r3,691
1800aad0:	1800acc4 	addi	zero,r3,691
1800aad4:	1800acdc 	xori	zero,r3,691
1800aad8:	1800ab08 	cmpgei	zero,r3,684
1800aadc:	1800acec 	andhi	zero,r3,691
1800aae0:	1800acec 	andhi	zero,r3,691
1800aae4:	1800acec 	andhi	zero,r3,691
1800aae8:	1800b04c 	andi	zero,r3,705
1800aaec:	2404b03a 	or	r2,r4,r16
1800aaf0:	1000711e 	bne	r2,zero,1800acb8 <__muldf3+0x300>
1800aaf4:	05400204 	movi	r21,8
1800aaf8:	0021883a 	mov	r16,zero
1800aafc:	002d883a 	mov	r22,zero
1800ab00:	01400084 	movi	r5,2
1800ab04:	003fcb06 	br	1800aa34 <__alt_data_end+0xf800aa34>
1800ab08:	500d883a 	mov	r6,r10
1800ab0c:	00800084 	movi	r2,2
1800ab10:	38805926 	beq	r7,r2,1800ac78 <__muldf3+0x2c0>
1800ab14:	008000c4 	movi	r2,3
1800ab18:	3881bb26 	beq	r7,r2,1800b208 <__muldf3+0x850>
1800ab1c:	00800044 	movi	r2,1
1800ab20:	3881961e 	bne	r7,r2,1800b17c <__muldf3+0x7c4>
1800ab24:	3027883a 	mov	r19,r6
1800ab28:	0005883a 	mov	r2,zero
1800ab2c:	0021883a 	mov	r16,zero
1800ab30:	002d883a 	mov	r22,zero
1800ab34:	1004953a 	slli	r2,r2,20
1800ab38:	98c03fcc 	andi	r3,r19,255
1800ab3c:	04400434 	movhi	r17,16
1800ab40:	8c7fffc4 	addi	r17,r17,-1
1800ab44:	180697fa 	slli	r3,r3,31
1800ab48:	8460703a 	and	r16,r16,r17
1800ab4c:	80a0b03a 	or	r16,r16,r2
1800ab50:	80c6b03a 	or	r3,r16,r3
1800ab54:	b005883a 	mov	r2,r22
1800ab58:	dfc01117 	ldw	ra,68(sp)
1800ab5c:	df001017 	ldw	fp,64(sp)
1800ab60:	ddc00f17 	ldw	r23,60(sp)
1800ab64:	dd800e17 	ldw	r22,56(sp)
1800ab68:	dd400d17 	ldw	r21,52(sp)
1800ab6c:	dd000c17 	ldw	r20,48(sp)
1800ab70:	dcc00b17 	ldw	r19,44(sp)
1800ab74:	dc800a17 	ldw	r18,40(sp)
1800ab78:	dc400917 	ldw	r17,36(sp)
1800ab7c:	dc000817 	ldw	r16,32(sp)
1800ab80:	dec01204 	addi	sp,sp,72
1800ab84:	f800283a 	ret
1800ab88:	2404b03a 	or	r2,r4,r16
1800ab8c:	202b883a 	mov	r21,r4
1800ab90:	10004426 	beq	r2,zero,1800aca4 <__muldf3+0x2ec>
1800ab94:	80015126 	beq	r16,zero,1800b0dc <__muldf3+0x724>
1800ab98:	8009883a 	mov	r4,r16
1800ab9c:	d9800715 	stw	r6,28(sp)
1800aba0:	d9c00215 	stw	r7,8(sp)
1800aba4:	da400415 	stw	r9,16(sp)
1800aba8:	800bd240 	call	1800bd24 <__clzsi2>
1800abac:	d9800717 	ldw	r6,28(sp)
1800abb0:	d9c00217 	ldw	r7,8(sp)
1800abb4:	da400417 	ldw	r9,16(sp)
1800abb8:	113ffd44 	addi	r4,r2,-11
1800abbc:	00c00704 	movi	r3,28
1800abc0:	19014216 	blt	r3,r4,1800b0cc <__muldf3+0x714>
1800abc4:	00c00744 	movi	r3,29
1800abc8:	15bffe04 	addi	r22,r2,-8
1800abcc:	1907c83a 	sub	r3,r3,r4
1800abd0:	85a0983a 	sll	r16,r16,r22
1800abd4:	a8c6d83a 	srl	r3,r21,r3
1800abd8:	adac983a 	sll	r22,r21,r22
1800abdc:	1c20b03a 	or	r16,r3,r16
1800abe0:	1080fcc4 	addi	r2,r2,1011
1800abe4:	00a9c83a 	sub	r20,zero,r2
1800abe8:	002b883a 	mov	r21,zero
1800abec:	000b883a 	mov	r5,zero
1800abf0:	003f9006 	br	1800aa34 <__alt_data_end+0xf800aa34>
1800abf4:	3446b03a 	or	r3,r6,r17
1800abf8:	1800281e 	bne	r3,zero,1800ac9c <__muldf3+0x2e4>
1800abfc:	0023883a 	mov	r17,zero
1800ac00:	0025883a 	mov	r18,zero
1800ac04:	01c00084 	movi	r7,2
1800ac08:	003f9c06 	br	1800aa7c <__alt_data_end+0xf800aa7c>
1800ac0c:	3446b03a 	or	r3,r6,r17
1800ac10:	18001e26 	beq	r3,zero,1800ac8c <__muldf3+0x2d4>
1800ac14:	88012126 	beq	r17,zero,1800b09c <__muldf3+0x6e4>
1800ac18:	8809883a 	mov	r4,r17
1800ac1c:	d9400215 	stw	r5,8(sp)
1800ac20:	d9800715 	stw	r6,28(sp)
1800ac24:	da400415 	stw	r9,16(sp)
1800ac28:	da800315 	stw	r10,12(sp)
1800ac2c:	800bd240 	call	1800bd24 <__clzsi2>
1800ac30:	d9400217 	ldw	r5,8(sp)
1800ac34:	d9800717 	ldw	r6,28(sp)
1800ac38:	da400417 	ldw	r9,16(sp)
1800ac3c:	da800317 	ldw	r10,12(sp)
1800ac40:	113ffd44 	addi	r4,r2,-11
1800ac44:	00c00704 	movi	r3,28
1800ac48:	19011016 	blt	r3,r4,1800b08c <__muldf3+0x6d4>
1800ac4c:	00c00744 	movi	r3,29
1800ac50:	14bffe04 	addi	r18,r2,-8
1800ac54:	1907c83a 	sub	r3,r3,r4
1800ac58:	8ca2983a 	sll	r17,r17,r18
1800ac5c:	30c6d83a 	srl	r3,r6,r3
1800ac60:	34a4983a 	sll	r18,r6,r18
1800ac64:	1c62b03a 	or	r17,r3,r17
1800ac68:	1080fcc4 	addi	r2,r2,1011
1800ac6c:	0085c83a 	sub	r2,zero,r2
1800ac70:	000f883a 	mov	r7,zero
1800ac74:	003f8106 	br	1800aa7c <__alt_data_end+0xf800aa7c>
1800ac78:	3027883a 	mov	r19,r6
1800ac7c:	0081ffc4 	movi	r2,2047
1800ac80:	0021883a 	mov	r16,zero
1800ac84:	002d883a 	mov	r22,zero
1800ac88:	003faa06 	br	1800ab34 <__alt_data_end+0xf800ab34>
1800ac8c:	0023883a 	mov	r17,zero
1800ac90:	0025883a 	mov	r18,zero
1800ac94:	01c00044 	movi	r7,1
1800ac98:	003f7806 	br	1800aa7c <__alt_data_end+0xf800aa7c>
1800ac9c:	01c000c4 	movi	r7,3
1800aca0:	003f7606 	br	1800aa7c <__alt_data_end+0xf800aa7c>
1800aca4:	05400104 	movi	r21,4
1800aca8:	0021883a 	mov	r16,zero
1800acac:	002d883a 	mov	r22,zero
1800acb0:	01400044 	movi	r5,1
1800acb4:	003f5f06 	br	1800aa34 <__alt_data_end+0xf800aa34>
1800acb8:	05400304 	movi	r21,12
1800acbc:	014000c4 	movi	r5,3
1800acc0:	003f5c06 	br	1800aa34 <__alt_data_end+0xf800aa34>
1800acc4:	04000434 	movhi	r16,16
1800acc8:	0027883a 	mov	r19,zero
1800accc:	843fffc4 	addi	r16,r16,-1
1800acd0:	05bfffc4 	movi	r22,-1
1800acd4:	0081ffc4 	movi	r2,2047
1800acd8:	003f9606 	br	1800ab34 <__alt_data_end+0xf800ab34>
1800acdc:	8023883a 	mov	r17,r16
1800ace0:	b025883a 	mov	r18,r22
1800ace4:	280f883a 	mov	r7,r5
1800ace8:	003f8806 	br	1800ab0c <__alt_data_end+0xf800ab0c>
1800acec:	8023883a 	mov	r17,r16
1800acf0:	b025883a 	mov	r18,r22
1800acf4:	480d883a 	mov	r6,r9
1800acf8:	280f883a 	mov	r7,r5
1800acfc:	003f8306 	br	1800ab0c <__alt_data_end+0xf800ab0c>
1800ad00:	b026d43a 	srli	r19,r22,16
1800ad04:	902ed43a 	srli	r23,r18,16
1800ad08:	b5bfffcc 	andi	r22,r22,65535
1800ad0c:	94bfffcc 	andi	r18,r18,65535
1800ad10:	b00b883a 	mov	r5,r22
1800ad14:	9009883a 	mov	r4,r18
1800ad18:	d8c00515 	stw	r3,20(sp)
1800ad1c:	d9800715 	stw	r6,28(sp)
1800ad20:	da000615 	stw	r8,24(sp)
1800ad24:	8000ad40 	call	18000ad4 <__mulsi3>
1800ad28:	980b883a 	mov	r5,r19
1800ad2c:	9009883a 	mov	r4,r18
1800ad30:	1029883a 	mov	r20,r2
1800ad34:	8000ad40 	call	18000ad4 <__mulsi3>
1800ad38:	b80b883a 	mov	r5,r23
1800ad3c:	9809883a 	mov	r4,r19
1800ad40:	102b883a 	mov	r21,r2
1800ad44:	8000ad40 	call	18000ad4 <__mulsi3>
1800ad48:	b809883a 	mov	r4,r23
1800ad4c:	b00b883a 	mov	r5,r22
1800ad50:	1039883a 	mov	fp,r2
1800ad54:	8000ad40 	call	18000ad4 <__mulsi3>
1800ad58:	a008d43a 	srli	r4,r20,16
1800ad5c:	1545883a 	add	r2,r2,r21
1800ad60:	d8c00517 	ldw	r3,20(sp)
1800ad64:	2085883a 	add	r2,r4,r2
1800ad68:	d9800717 	ldw	r6,28(sp)
1800ad6c:	da000617 	ldw	r8,24(sp)
1800ad70:	1540022e 	bgeu	r2,r21,1800ad7c <__muldf3+0x3c4>
1800ad74:	01000074 	movhi	r4,1
1800ad78:	e139883a 	add	fp,fp,r4
1800ad7c:	100e943a 	slli	r7,r2,16
1800ad80:	1004d43a 	srli	r2,r2,16
1800ad84:	882ad43a 	srli	r21,r17,16
1800ad88:	a53fffcc 	andi	r20,r20,65535
1800ad8c:	8c7fffcc 	andi	r17,r17,65535
1800ad90:	3d29883a 	add	r20,r7,r20
1800ad94:	b00b883a 	mov	r5,r22
1800ad98:	8809883a 	mov	r4,r17
1800ad9c:	d8c00515 	stw	r3,20(sp)
1800ada0:	d9800715 	stw	r6,28(sp)
1800ada4:	da000615 	stw	r8,24(sp)
1800ada8:	dd000115 	stw	r20,4(sp)
1800adac:	d8800015 	stw	r2,0(sp)
1800adb0:	8000ad40 	call	18000ad4 <__mulsi3>
1800adb4:	980b883a 	mov	r5,r19
1800adb8:	8809883a 	mov	r4,r17
1800adbc:	d8800215 	stw	r2,8(sp)
1800adc0:	8000ad40 	call	18000ad4 <__mulsi3>
1800adc4:	9809883a 	mov	r4,r19
1800adc8:	a80b883a 	mov	r5,r21
1800adcc:	1029883a 	mov	r20,r2
1800add0:	8000ad40 	call	18000ad4 <__mulsi3>
1800add4:	b00b883a 	mov	r5,r22
1800add8:	a809883a 	mov	r4,r21
1800addc:	d8800415 	stw	r2,16(sp)
1800ade0:	8000ad40 	call	18000ad4 <__mulsi3>
1800ade4:	d9c00217 	ldw	r7,8(sp)
1800ade8:	1505883a 	add	r2,r2,r20
1800adec:	d8c00517 	ldw	r3,20(sp)
1800adf0:	3826d43a 	srli	r19,r7,16
1800adf4:	d9800717 	ldw	r6,28(sp)
1800adf8:	da000617 	ldw	r8,24(sp)
1800adfc:	9885883a 	add	r2,r19,r2
1800ae00:	da400417 	ldw	r9,16(sp)
1800ae04:	1500022e 	bgeu	r2,r20,1800ae10 <__muldf3+0x458>
1800ae08:	01000074 	movhi	r4,1
1800ae0c:	4913883a 	add	r9,r9,r4
1800ae10:	1028d43a 	srli	r20,r2,16
1800ae14:	1004943a 	slli	r2,r2,16
1800ae18:	802cd43a 	srli	r22,r16,16
1800ae1c:	843fffcc 	andi	r16,r16,65535
1800ae20:	3cffffcc 	andi	r19,r7,65535
1800ae24:	9009883a 	mov	r4,r18
1800ae28:	800b883a 	mov	r5,r16
1800ae2c:	a269883a 	add	r20,r20,r9
1800ae30:	d8c00515 	stw	r3,20(sp)
1800ae34:	d9800715 	stw	r6,28(sp)
1800ae38:	da000615 	stw	r8,24(sp)
1800ae3c:	14e7883a 	add	r19,r2,r19
1800ae40:	8000ad40 	call	18000ad4 <__mulsi3>
1800ae44:	9009883a 	mov	r4,r18
1800ae48:	b00b883a 	mov	r5,r22
1800ae4c:	d8800315 	stw	r2,12(sp)
1800ae50:	8000ad40 	call	18000ad4 <__mulsi3>
1800ae54:	b809883a 	mov	r4,r23
1800ae58:	b00b883a 	mov	r5,r22
1800ae5c:	d8800215 	stw	r2,8(sp)
1800ae60:	8000ad40 	call	18000ad4 <__mulsi3>
1800ae64:	b80b883a 	mov	r5,r23
1800ae68:	8009883a 	mov	r4,r16
1800ae6c:	d8800415 	stw	r2,16(sp)
1800ae70:	8000ad40 	call	18000ad4 <__mulsi3>
1800ae74:	da800317 	ldw	r10,12(sp)
1800ae78:	d9c00217 	ldw	r7,8(sp)
1800ae7c:	d9000017 	ldw	r4,0(sp)
1800ae80:	502ed43a 	srli	r23,r10,16
1800ae84:	11c5883a 	add	r2,r2,r7
1800ae88:	24e5883a 	add	r18,r4,r19
1800ae8c:	b885883a 	add	r2,r23,r2
1800ae90:	d8c00517 	ldw	r3,20(sp)
1800ae94:	d9800717 	ldw	r6,28(sp)
1800ae98:	da000617 	ldw	r8,24(sp)
1800ae9c:	da400417 	ldw	r9,16(sp)
1800aea0:	11c0022e 	bgeu	r2,r7,1800aeac <__muldf3+0x4f4>
1800aea4:	01000074 	movhi	r4,1
1800aea8:	4913883a 	add	r9,r9,r4
1800aeac:	100ed43a 	srli	r7,r2,16
1800aeb0:	1004943a 	slli	r2,r2,16
1800aeb4:	55ffffcc 	andi	r23,r10,65535
1800aeb8:	3a53883a 	add	r9,r7,r9
1800aebc:	8809883a 	mov	r4,r17
1800aec0:	800b883a 	mov	r5,r16
1800aec4:	d8c00515 	stw	r3,20(sp)
1800aec8:	d9800715 	stw	r6,28(sp)
1800aecc:	da000615 	stw	r8,24(sp)
1800aed0:	da400415 	stw	r9,16(sp)
1800aed4:	15ef883a 	add	r23,r2,r23
1800aed8:	8000ad40 	call	18000ad4 <__mulsi3>
1800aedc:	8809883a 	mov	r4,r17
1800aee0:	b00b883a 	mov	r5,r22
1800aee4:	d8800215 	stw	r2,8(sp)
1800aee8:	8000ad40 	call	18000ad4 <__mulsi3>
1800aeec:	b00b883a 	mov	r5,r22
1800aef0:	a809883a 	mov	r4,r21
1800aef4:	d8800315 	stw	r2,12(sp)
1800aef8:	8000ad40 	call	18000ad4 <__mulsi3>
1800aefc:	8009883a 	mov	r4,r16
1800af00:	a80b883a 	mov	r5,r21
1800af04:	1023883a 	mov	r17,r2
1800af08:	8000ad40 	call	18000ad4 <__mulsi3>
1800af0c:	d9c00217 	ldw	r7,8(sp)
1800af10:	da800317 	ldw	r10,12(sp)
1800af14:	d8c00517 	ldw	r3,20(sp)
1800af18:	3808d43a 	srli	r4,r7,16
1800af1c:	1285883a 	add	r2,r2,r10
1800af20:	d9800717 	ldw	r6,28(sp)
1800af24:	2085883a 	add	r2,r4,r2
1800af28:	da000617 	ldw	r8,24(sp)
1800af2c:	da400417 	ldw	r9,16(sp)
1800af30:	1280022e 	bgeu	r2,r10,1800af3c <__muldf3+0x584>
1800af34:	01000074 	movhi	r4,1
1800af38:	8923883a 	add	r17,r17,r4
1800af3c:	1008943a 	slli	r4,r2,16
1800af40:	39ffffcc 	andi	r7,r7,65535
1800af44:	e4b9883a 	add	fp,fp,r18
1800af48:	21cf883a 	add	r7,r4,r7
1800af4c:	e4e7803a 	cmpltu	r19,fp,r19
1800af50:	3d0f883a 	add	r7,r7,r20
1800af54:	bf39883a 	add	fp,r23,fp
1800af58:	99c9883a 	add	r4,r19,r7
1800af5c:	e5ef803a 	cmpltu	r23,fp,r23
1800af60:	490b883a 	add	r5,r9,r4
1800af64:	1004d43a 	srli	r2,r2,16
1800af68:	b965883a 	add	r18,r23,r5
1800af6c:	24c9803a 	cmpltu	r4,r4,r19
1800af70:	3d29803a 	cmpltu	r20,r7,r20
1800af74:	a128b03a 	or	r20,r20,r4
1800af78:	95ef803a 	cmpltu	r23,r18,r23
1800af7c:	2a53803a 	cmpltu	r9,r5,r9
1800af80:	a0a9883a 	add	r20,r20,r2
1800af84:	4deeb03a 	or	r23,r9,r23
1800af88:	a5ef883a 	add	r23,r20,r23
1800af8c:	bc63883a 	add	r17,r23,r17
1800af90:	e004927a 	slli	r2,fp,9
1800af94:	d9000117 	ldw	r4,4(sp)
1800af98:	882e927a 	slli	r23,r17,9
1800af9c:	9022d5fa 	srli	r17,r18,23
1800afa0:	e038d5fa 	srli	fp,fp,23
1800afa4:	1104b03a 	or	r2,r2,r4
1800afa8:	9024927a 	slli	r18,r18,9
1800afac:	1004c03a 	cmpne	r2,r2,zero
1800afb0:	bc62b03a 	or	r17,r23,r17
1800afb4:	1738b03a 	or	fp,r2,fp
1800afb8:	8880402c 	andhi	r2,r17,256
1800afbc:	e4a4b03a 	or	r18,fp,r18
1800afc0:	10000726 	beq	r2,zero,1800afe0 <__muldf3+0x628>
1800afc4:	9006d07a 	srli	r3,r18,1
1800afc8:	880497fa 	slli	r2,r17,31
1800afcc:	9480004c 	andi	r18,r18,1
1800afd0:	8822d07a 	srli	r17,r17,1
1800afd4:	1ca4b03a 	or	r18,r3,r18
1800afd8:	14a4b03a 	or	r18,r2,r18
1800afdc:	4007883a 	mov	r3,r8
1800afe0:	1880ffc4 	addi	r2,r3,1023
1800afe4:	0080460e 	bge	zero,r2,1800b100 <__muldf3+0x748>
1800afe8:	910001cc 	andi	r4,r18,7
1800afec:	20000726 	beq	r4,zero,1800b00c <__muldf3+0x654>
1800aff0:	910003cc 	andi	r4,r18,15
1800aff4:	01400104 	movi	r5,4
1800aff8:	21400426 	beq	r4,r5,1800b00c <__muldf3+0x654>
1800affc:	9149883a 	add	r4,r18,r5
1800b000:	24a5803a 	cmpltu	r18,r4,r18
1800b004:	8ca3883a 	add	r17,r17,r18
1800b008:	2025883a 	mov	r18,r4
1800b00c:	8900402c 	andhi	r4,r17,256
1800b010:	20000426 	beq	r4,zero,1800b024 <__muldf3+0x66c>
1800b014:	18810004 	addi	r2,r3,1024
1800b018:	00ffc034 	movhi	r3,65280
1800b01c:	18ffffc4 	addi	r3,r3,-1
1800b020:	88e2703a 	and	r17,r17,r3
1800b024:	00c1ff84 	movi	r3,2046
1800b028:	18bf1316 	blt	r3,r2,1800ac78 <__alt_data_end+0xf800ac78>
1800b02c:	882c977a 	slli	r22,r17,29
1800b030:	9024d0fa 	srli	r18,r18,3
1800b034:	8822927a 	slli	r17,r17,9
1800b038:	1081ffcc 	andi	r2,r2,2047
1800b03c:	b4acb03a 	or	r22,r22,r18
1800b040:	8820d33a 	srli	r16,r17,12
1800b044:	3027883a 	mov	r19,r6
1800b048:	003eba06 	br	1800ab34 <__alt_data_end+0xf800ab34>
1800b04c:	8080022c 	andhi	r2,r16,8
1800b050:	10000926 	beq	r2,zero,1800b078 <__muldf3+0x6c0>
1800b054:	8880022c 	andhi	r2,r17,8
1800b058:	1000071e 	bne	r2,zero,1800b078 <__muldf3+0x6c0>
1800b05c:	00800434 	movhi	r2,16
1800b060:	8c000234 	orhi	r16,r17,8
1800b064:	10bfffc4 	addi	r2,r2,-1
1800b068:	e027883a 	mov	r19,fp
1800b06c:	80a0703a 	and	r16,r16,r2
1800b070:	902d883a 	mov	r22,r18
1800b074:	003f1706 	br	1800acd4 <__alt_data_end+0xf800acd4>
1800b078:	00800434 	movhi	r2,16
1800b07c:	84000234 	orhi	r16,r16,8
1800b080:	10bfffc4 	addi	r2,r2,-1
1800b084:	80a0703a 	and	r16,r16,r2
1800b088:	003f1206 	br	1800acd4 <__alt_data_end+0xf800acd4>
1800b08c:	147ff604 	addi	r17,r2,-40
1800b090:	3462983a 	sll	r17,r6,r17
1800b094:	0025883a 	mov	r18,zero
1800b098:	003ef306 	br	1800ac68 <__alt_data_end+0xf800ac68>
1800b09c:	3009883a 	mov	r4,r6
1800b0a0:	d9400215 	stw	r5,8(sp)
1800b0a4:	d9800715 	stw	r6,28(sp)
1800b0a8:	da400415 	stw	r9,16(sp)
1800b0ac:	da800315 	stw	r10,12(sp)
1800b0b0:	800bd240 	call	1800bd24 <__clzsi2>
1800b0b4:	10800804 	addi	r2,r2,32
1800b0b8:	da800317 	ldw	r10,12(sp)
1800b0bc:	da400417 	ldw	r9,16(sp)
1800b0c0:	d9800717 	ldw	r6,28(sp)
1800b0c4:	d9400217 	ldw	r5,8(sp)
1800b0c8:	003edd06 	br	1800ac40 <__alt_data_end+0xf800ac40>
1800b0cc:	143ff604 	addi	r16,r2,-40
1800b0d0:	ac20983a 	sll	r16,r21,r16
1800b0d4:	002d883a 	mov	r22,zero
1800b0d8:	003ec106 	br	1800abe0 <__alt_data_end+0xf800abe0>
1800b0dc:	d9800715 	stw	r6,28(sp)
1800b0e0:	d9c00215 	stw	r7,8(sp)
1800b0e4:	da400415 	stw	r9,16(sp)
1800b0e8:	800bd240 	call	1800bd24 <__clzsi2>
1800b0ec:	10800804 	addi	r2,r2,32
1800b0f0:	da400417 	ldw	r9,16(sp)
1800b0f4:	d9c00217 	ldw	r7,8(sp)
1800b0f8:	d9800717 	ldw	r6,28(sp)
1800b0fc:	003eae06 	br	1800abb8 <__alt_data_end+0xf800abb8>
1800b100:	00c00044 	movi	r3,1
1800b104:	1887c83a 	sub	r3,r3,r2
1800b108:	01000e04 	movi	r4,56
1800b10c:	20fe8516 	blt	r4,r3,1800ab24 <__alt_data_end+0xf800ab24>
1800b110:	010007c4 	movi	r4,31
1800b114:	20c01b16 	blt	r4,r3,1800b184 <__muldf3+0x7cc>
1800b118:	00800804 	movi	r2,32
1800b11c:	10c5c83a 	sub	r2,r2,r3
1800b120:	888a983a 	sll	r5,r17,r2
1800b124:	90c8d83a 	srl	r4,r18,r3
1800b128:	9084983a 	sll	r2,r18,r2
1800b12c:	88e2d83a 	srl	r17,r17,r3
1800b130:	2906b03a 	or	r3,r5,r4
1800b134:	1004c03a 	cmpne	r2,r2,zero
1800b138:	1886b03a 	or	r3,r3,r2
1800b13c:	188001cc 	andi	r2,r3,7
1800b140:	10000726 	beq	r2,zero,1800b160 <__muldf3+0x7a8>
1800b144:	188003cc 	andi	r2,r3,15
1800b148:	01000104 	movi	r4,4
1800b14c:	11000426 	beq	r2,r4,1800b160 <__muldf3+0x7a8>
1800b150:	1805883a 	mov	r2,r3
1800b154:	10c00104 	addi	r3,r2,4
1800b158:	1885803a 	cmpltu	r2,r3,r2
1800b15c:	88a3883a 	add	r17,r17,r2
1800b160:	8880202c 	andhi	r2,r17,128
1800b164:	10001c26 	beq	r2,zero,1800b1d8 <__muldf3+0x820>
1800b168:	3027883a 	mov	r19,r6
1800b16c:	00800044 	movi	r2,1
1800b170:	0021883a 	mov	r16,zero
1800b174:	002d883a 	mov	r22,zero
1800b178:	003e6e06 	br	1800ab34 <__alt_data_end+0xf800ab34>
1800b17c:	4007883a 	mov	r3,r8
1800b180:	003f9706 	br	1800afe0 <__alt_data_end+0xf800afe0>
1800b184:	017ff844 	movi	r5,-31
1800b188:	2885c83a 	sub	r2,r5,r2
1800b18c:	888ad83a 	srl	r5,r17,r2
1800b190:	00800804 	movi	r2,32
1800b194:	18801a26 	beq	r3,r2,1800b200 <__muldf3+0x848>
1800b198:	01001004 	movi	r4,64
1800b19c:	20c7c83a 	sub	r3,r4,r3
1800b1a0:	88e2983a 	sll	r17,r17,r3
1800b1a4:	8ca4b03a 	or	r18,r17,r18
1800b1a8:	9004c03a 	cmpne	r2,r18,zero
1800b1ac:	2884b03a 	or	r2,r5,r2
1800b1b0:	144001cc 	andi	r17,r2,7
1800b1b4:	88000d1e 	bne	r17,zero,1800b1ec <__muldf3+0x834>
1800b1b8:	0021883a 	mov	r16,zero
1800b1bc:	102cd0fa 	srli	r22,r2,3
1800b1c0:	3027883a 	mov	r19,r6
1800b1c4:	0005883a 	mov	r2,zero
1800b1c8:	b46cb03a 	or	r22,r22,r17
1800b1cc:	003e5906 	br	1800ab34 <__alt_data_end+0xf800ab34>
1800b1d0:	1007883a 	mov	r3,r2
1800b1d4:	0023883a 	mov	r17,zero
1800b1d8:	8820927a 	slli	r16,r17,9
1800b1dc:	1805883a 	mov	r2,r3
1800b1e0:	8822977a 	slli	r17,r17,29
1800b1e4:	8020d33a 	srli	r16,r16,12
1800b1e8:	003ff406 	br	1800b1bc <__alt_data_end+0xf800b1bc>
1800b1ec:	10c003cc 	andi	r3,r2,15
1800b1f0:	01000104 	movi	r4,4
1800b1f4:	193ff626 	beq	r3,r4,1800b1d0 <__alt_data_end+0xf800b1d0>
1800b1f8:	0023883a 	mov	r17,zero
1800b1fc:	003fd506 	br	1800b154 <__alt_data_end+0xf800b154>
1800b200:	0023883a 	mov	r17,zero
1800b204:	003fe706 	br	1800b1a4 <__alt_data_end+0xf800b1a4>
1800b208:	00800434 	movhi	r2,16
1800b20c:	8c000234 	orhi	r16,r17,8
1800b210:	10bfffc4 	addi	r2,r2,-1
1800b214:	3027883a 	mov	r19,r6
1800b218:	80a0703a 	and	r16,r16,r2
1800b21c:	902d883a 	mov	r22,r18
1800b220:	003eac06 	br	1800acd4 <__alt_data_end+0xf800acd4>

1800b224 <__subdf3>:
1800b224:	02000434 	movhi	r8,16
1800b228:	423fffc4 	addi	r8,r8,-1
1800b22c:	defffb04 	addi	sp,sp,-20
1800b230:	2a14703a 	and	r10,r5,r8
1800b234:	3812d53a 	srli	r9,r7,20
1800b238:	3a10703a 	and	r8,r7,r8
1800b23c:	2006d77a 	srli	r3,r4,29
1800b240:	3004d77a 	srli	r2,r6,29
1800b244:	dc000015 	stw	r16,0(sp)
1800b248:	501490fa 	slli	r10,r10,3
1800b24c:	2820d53a 	srli	r16,r5,20
1800b250:	401090fa 	slli	r8,r8,3
1800b254:	dc800215 	stw	r18,8(sp)
1800b258:	dc400115 	stw	r17,4(sp)
1800b25c:	dfc00415 	stw	ra,16(sp)
1800b260:	202290fa 	slli	r17,r4,3
1800b264:	dcc00315 	stw	r19,12(sp)
1800b268:	4a41ffcc 	andi	r9,r9,2047
1800b26c:	0101ffc4 	movi	r4,2047
1800b270:	2824d7fa 	srli	r18,r5,31
1800b274:	8401ffcc 	andi	r16,r16,2047
1800b278:	50c6b03a 	or	r3,r10,r3
1800b27c:	380ed7fa 	srli	r7,r7,31
1800b280:	408ab03a 	or	r5,r8,r2
1800b284:	300c90fa 	slli	r6,r6,3
1800b288:	49009626 	beq	r9,r4,1800b4e4 <__subdf3+0x2c0>
1800b28c:	39c0005c 	xori	r7,r7,1
1800b290:	8245c83a 	sub	r2,r16,r9
1800b294:	3c807426 	beq	r7,r18,1800b468 <__subdf3+0x244>
1800b298:	0080af0e 	bge	zero,r2,1800b558 <__subdf3+0x334>
1800b29c:	48002a1e 	bne	r9,zero,1800b348 <__subdf3+0x124>
1800b2a0:	2988b03a 	or	r4,r5,r6
1800b2a4:	20009a1e 	bne	r4,zero,1800b510 <__subdf3+0x2ec>
1800b2a8:	888001cc 	andi	r2,r17,7
1800b2ac:	10000726 	beq	r2,zero,1800b2cc <__subdf3+0xa8>
1800b2b0:	888003cc 	andi	r2,r17,15
1800b2b4:	01000104 	movi	r4,4
1800b2b8:	11000426 	beq	r2,r4,1800b2cc <__subdf3+0xa8>
1800b2bc:	890b883a 	add	r5,r17,r4
1800b2c0:	2c63803a 	cmpltu	r17,r5,r17
1800b2c4:	1c47883a 	add	r3,r3,r17
1800b2c8:	2823883a 	mov	r17,r5
1800b2cc:	1880202c 	andhi	r2,r3,128
1800b2d0:	10005926 	beq	r2,zero,1800b438 <__subdf3+0x214>
1800b2d4:	84000044 	addi	r16,r16,1
1800b2d8:	0081ffc4 	movi	r2,2047
1800b2dc:	8080be26 	beq	r16,r2,1800b5d8 <__subdf3+0x3b4>
1800b2e0:	017fe034 	movhi	r5,65408
1800b2e4:	297fffc4 	addi	r5,r5,-1
1800b2e8:	1946703a 	and	r3,r3,r5
1800b2ec:	1804977a 	slli	r2,r3,29
1800b2f0:	1806927a 	slli	r3,r3,9
1800b2f4:	8822d0fa 	srli	r17,r17,3
1800b2f8:	8401ffcc 	andi	r16,r16,2047
1800b2fc:	180ad33a 	srli	r5,r3,12
1800b300:	9100004c 	andi	r4,r18,1
1800b304:	1444b03a 	or	r2,r2,r17
1800b308:	80c1ffcc 	andi	r3,r16,2047
1800b30c:	1820953a 	slli	r16,r3,20
1800b310:	20c03fcc 	andi	r3,r4,255
1800b314:	180897fa 	slli	r4,r3,31
1800b318:	00c00434 	movhi	r3,16
1800b31c:	18ffffc4 	addi	r3,r3,-1
1800b320:	28c6703a 	and	r3,r5,r3
1800b324:	1c06b03a 	or	r3,r3,r16
1800b328:	1906b03a 	or	r3,r3,r4
1800b32c:	dfc00417 	ldw	ra,16(sp)
1800b330:	dcc00317 	ldw	r19,12(sp)
1800b334:	dc800217 	ldw	r18,8(sp)
1800b338:	dc400117 	ldw	r17,4(sp)
1800b33c:	dc000017 	ldw	r16,0(sp)
1800b340:	dec00504 	addi	sp,sp,20
1800b344:	f800283a 	ret
1800b348:	0101ffc4 	movi	r4,2047
1800b34c:	813fd626 	beq	r16,r4,1800b2a8 <__alt_data_end+0xf800b2a8>
1800b350:	29402034 	orhi	r5,r5,128
1800b354:	01000e04 	movi	r4,56
1800b358:	2080a316 	blt	r4,r2,1800b5e8 <__subdf3+0x3c4>
1800b35c:	010007c4 	movi	r4,31
1800b360:	2080c616 	blt	r4,r2,1800b67c <__subdf3+0x458>
1800b364:	01000804 	movi	r4,32
1800b368:	2089c83a 	sub	r4,r4,r2
1800b36c:	2910983a 	sll	r8,r5,r4
1800b370:	308ed83a 	srl	r7,r6,r2
1800b374:	3108983a 	sll	r4,r6,r4
1800b378:	2884d83a 	srl	r2,r5,r2
1800b37c:	41ccb03a 	or	r6,r8,r7
1800b380:	2008c03a 	cmpne	r4,r4,zero
1800b384:	310cb03a 	or	r6,r6,r4
1800b388:	898dc83a 	sub	r6,r17,r6
1800b38c:	89a3803a 	cmpltu	r17,r17,r6
1800b390:	1887c83a 	sub	r3,r3,r2
1800b394:	1c47c83a 	sub	r3,r3,r17
1800b398:	3023883a 	mov	r17,r6
1800b39c:	1880202c 	andhi	r2,r3,128
1800b3a0:	10002326 	beq	r2,zero,1800b430 <__subdf3+0x20c>
1800b3a4:	04c02034 	movhi	r19,128
1800b3a8:	9cffffc4 	addi	r19,r19,-1
1800b3ac:	1ce6703a 	and	r19,r3,r19
1800b3b0:	98007a26 	beq	r19,zero,1800b59c <__subdf3+0x378>
1800b3b4:	9809883a 	mov	r4,r19
1800b3b8:	800bd240 	call	1800bd24 <__clzsi2>
1800b3bc:	113ffe04 	addi	r4,r2,-8
1800b3c0:	00c007c4 	movi	r3,31
1800b3c4:	19007b16 	blt	r3,r4,1800b5b4 <__subdf3+0x390>
1800b3c8:	00800804 	movi	r2,32
1800b3cc:	1105c83a 	sub	r2,r2,r4
1800b3d0:	8884d83a 	srl	r2,r17,r2
1800b3d4:	9906983a 	sll	r3,r19,r4
1800b3d8:	8922983a 	sll	r17,r17,r4
1800b3dc:	10c4b03a 	or	r2,r2,r3
1800b3e0:	24007816 	blt	r4,r16,1800b5c4 <__subdf3+0x3a0>
1800b3e4:	2421c83a 	sub	r16,r4,r16
1800b3e8:	80c00044 	addi	r3,r16,1
1800b3ec:	010007c4 	movi	r4,31
1800b3f0:	20c09516 	blt	r4,r3,1800b648 <__subdf3+0x424>
1800b3f4:	01400804 	movi	r5,32
1800b3f8:	28cbc83a 	sub	r5,r5,r3
1800b3fc:	88c8d83a 	srl	r4,r17,r3
1800b400:	8962983a 	sll	r17,r17,r5
1800b404:	114a983a 	sll	r5,r2,r5
1800b408:	10c6d83a 	srl	r3,r2,r3
1800b40c:	8804c03a 	cmpne	r2,r17,zero
1800b410:	290ab03a 	or	r5,r5,r4
1800b414:	28a2b03a 	or	r17,r5,r2
1800b418:	0021883a 	mov	r16,zero
1800b41c:	003fa206 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b420:	2090b03a 	or	r8,r4,r2
1800b424:	40018e26 	beq	r8,zero,1800ba60 <__subdf3+0x83c>
1800b428:	1007883a 	mov	r3,r2
1800b42c:	2023883a 	mov	r17,r4
1800b430:	888001cc 	andi	r2,r17,7
1800b434:	103f9e1e 	bne	r2,zero,1800b2b0 <__alt_data_end+0xf800b2b0>
1800b438:	1804977a 	slli	r2,r3,29
1800b43c:	8822d0fa 	srli	r17,r17,3
1800b440:	1810d0fa 	srli	r8,r3,3
1800b444:	9100004c 	andi	r4,r18,1
1800b448:	1444b03a 	or	r2,r2,r17
1800b44c:	00c1ffc4 	movi	r3,2047
1800b450:	80c02826 	beq	r16,r3,1800b4f4 <__subdf3+0x2d0>
1800b454:	01400434 	movhi	r5,16
1800b458:	297fffc4 	addi	r5,r5,-1
1800b45c:	80e0703a 	and	r16,r16,r3
1800b460:	414a703a 	and	r5,r8,r5
1800b464:	003fa806 	br	1800b308 <__alt_data_end+0xf800b308>
1800b468:	0080630e 	bge	zero,r2,1800b5f8 <__subdf3+0x3d4>
1800b46c:	48003026 	beq	r9,zero,1800b530 <__subdf3+0x30c>
1800b470:	0101ffc4 	movi	r4,2047
1800b474:	813f8c26 	beq	r16,r4,1800b2a8 <__alt_data_end+0xf800b2a8>
1800b478:	29402034 	orhi	r5,r5,128
1800b47c:	01000e04 	movi	r4,56
1800b480:	2080a90e 	bge	r4,r2,1800b728 <__subdf3+0x504>
1800b484:	298cb03a 	or	r6,r5,r6
1800b488:	3012c03a 	cmpne	r9,r6,zero
1800b48c:	0005883a 	mov	r2,zero
1800b490:	4c53883a 	add	r9,r9,r17
1800b494:	4c63803a 	cmpltu	r17,r9,r17
1800b498:	10c7883a 	add	r3,r2,r3
1800b49c:	88c7883a 	add	r3,r17,r3
1800b4a0:	4823883a 	mov	r17,r9
1800b4a4:	1880202c 	andhi	r2,r3,128
1800b4a8:	1000d026 	beq	r2,zero,1800b7ec <__subdf3+0x5c8>
1800b4ac:	84000044 	addi	r16,r16,1
1800b4b0:	0081ffc4 	movi	r2,2047
1800b4b4:	8080fe26 	beq	r16,r2,1800b8b0 <__subdf3+0x68c>
1800b4b8:	00bfe034 	movhi	r2,65408
1800b4bc:	10bfffc4 	addi	r2,r2,-1
1800b4c0:	1886703a 	and	r3,r3,r2
1800b4c4:	880ad07a 	srli	r5,r17,1
1800b4c8:	180497fa 	slli	r2,r3,31
1800b4cc:	8900004c 	andi	r4,r17,1
1800b4d0:	2922b03a 	or	r17,r5,r4
1800b4d4:	1806d07a 	srli	r3,r3,1
1800b4d8:	1462b03a 	or	r17,r2,r17
1800b4dc:	3825883a 	mov	r18,r7
1800b4e0:	003f7106 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b4e4:	2984b03a 	or	r2,r5,r6
1800b4e8:	103f6826 	beq	r2,zero,1800b28c <__alt_data_end+0xf800b28c>
1800b4ec:	39c03fcc 	andi	r7,r7,255
1800b4f0:	003f6706 	br	1800b290 <__alt_data_end+0xf800b290>
1800b4f4:	4086b03a 	or	r3,r8,r2
1800b4f8:	18015226 	beq	r3,zero,1800ba44 <__subdf3+0x820>
1800b4fc:	00c00434 	movhi	r3,16
1800b500:	41400234 	orhi	r5,r8,8
1800b504:	18ffffc4 	addi	r3,r3,-1
1800b508:	28ca703a 	and	r5,r5,r3
1800b50c:	003f7e06 	br	1800b308 <__alt_data_end+0xf800b308>
1800b510:	10bfffc4 	addi	r2,r2,-1
1800b514:	1000491e 	bne	r2,zero,1800b63c <__subdf3+0x418>
1800b518:	898fc83a 	sub	r7,r17,r6
1800b51c:	89e3803a 	cmpltu	r17,r17,r7
1800b520:	1947c83a 	sub	r3,r3,r5
1800b524:	1c47c83a 	sub	r3,r3,r17
1800b528:	3823883a 	mov	r17,r7
1800b52c:	003f9b06 	br	1800b39c <__alt_data_end+0xf800b39c>
1800b530:	2988b03a 	or	r4,r5,r6
1800b534:	203f5c26 	beq	r4,zero,1800b2a8 <__alt_data_end+0xf800b2a8>
1800b538:	10bfffc4 	addi	r2,r2,-1
1800b53c:	1000931e 	bne	r2,zero,1800b78c <__subdf3+0x568>
1800b540:	898d883a 	add	r6,r17,r6
1800b544:	3463803a 	cmpltu	r17,r6,r17
1800b548:	1947883a 	add	r3,r3,r5
1800b54c:	88c7883a 	add	r3,r17,r3
1800b550:	3023883a 	mov	r17,r6
1800b554:	003fd306 	br	1800b4a4 <__alt_data_end+0xf800b4a4>
1800b558:	1000541e 	bne	r2,zero,1800b6ac <__subdf3+0x488>
1800b55c:	80800044 	addi	r2,r16,1
1800b560:	1081ffcc 	andi	r2,r2,2047
1800b564:	01000044 	movi	r4,1
1800b568:	2080a20e 	bge	r4,r2,1800b7f4 <__subdf3+0x5d0>
1800b56c:	8989c83a 	sub	r4,r17,r6
1800b570:	8905803a 	cmpltu	r2,r17,r4
1800b574:	1967c83a 	sub	r19,r3,r5
1800b578:	98a7c83a 	sub	r19,r19,r2
1800b57c:	9880202c 	andhi	r2,r19,128
1800b580:	10006326 	beq	r2,zero,1800b710 <__subdf3+0x4ec>
1800b584:	3463c83a 	sub	r17,r6,r17
1800b588:	28c7c83a 	sub	r3,r5,r3
1800b58c:	344d803a 	cmpltu	r6,r6,r17
1800b590:	19a7c83a 	sub	r19,r3,r6
1800b594:	3825883a 	mov	r18,r7
1800b598:	983f861e 	bne	r19,zero,1800b3b4 <__alt_data_end+0xf800b3b4>
1800b59c:	8809883a 	mov	r4,r17
1800b5a0:	800bd240 	call	1800bd24 <__clzsi2>
1800b5a4:	10800804 	addi	r2,r2,32
1800b5a8:	113ffe04 	addi	r4,r2,-8
1800b5ac:	00c007c4 	movi	r3,31
1800b5b0:	193f850e 	bge	r3,r4,1800b3c8 <__alt_data_end+0xf800b3c8>
1800b5b4:	10bff604 	addi	r2,r2,-40
1800b5b8:	8884983a 	sll	r2,r17,r2
1800b5bc:	0023883a 	mov	r17,zero
1800b5c0:	243f880e 	bge	r4,r16,1800b3e4 <__alt_data_end+0xf800b3e4>
1800b5c4:	00ffe034 	movhi	r3,65408
1800b5c8:	18ffffc4 	addi	r3,r3,-1
1800b5cc:	8121c83a 	sub	r16,r16,r4
1800b5d0:	10c6703a 	and	r3,r2,r3
1800b5d4:	003f3406 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b5d8:	9100004c 	andi	r4,r18,1
1800b5dc:	000b883a 	mov	r5,zero
1800b5e0:	0005883a 	mov	r2,zero
1800b5e4:	003f4806 	br	1800b308 <__alt_data_end+0xf800b308>
1800b5e8:	298cb03a 	or	r6,r5,r6
1800b5ec:	300cc03a 	cmpne	r6,r6,zero
1800b5f0:	0005883a 	mov	r2,zero
1800b5f4:	003f6406 	br	1800b388 <__alt_data_end+0xf800b388>
1800b5f8:	10009a1e 	bne	r2,zero,1800b864 <__subdf3+0x640>
1800b5fc:	82400044 	addi	r9,r16,1
1800b600:	4881ffcc 	andi	r2,r9,2047
1800b604:	02800044 	movi	r10,1
1800b608:	5080670e 	bge	r10,r2,1800b7a8 <__subdf3+0x584>
1800b60c:	0081ffc4 	movi	r2,2047
1800b610:	4880af26 	beq	r9,r2,1800b8d0 <__subdf3+0x6ac>
1800b614:	898d883a 	add	r6,r17,r6
1800b618:	1945883a 	add	r2,r3,r5
1800b61c:	3447803a 	cmpltu	r3,r6,r17
1800b620:	1887883a 	add	r3,r3,r2
1800b624:	182297fa 	slli	r17,r3,31
1800b628:	300cd07a 	srli	r6,r6,1
1800b62c:	1806d07a 	srli	r3,r3,1
1800b630:	4821883a 	mov	r16,r9
1800b634:	89a2b03a 	or	r17,r17,r6
1800b638:	003f1b06 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b63c:	0101ffc4 	movi	r4,2047
1800b640:	813f441e 	bne	r16,r4,1800b354 <__alt_data_end+0xf800b354>
1800b644:	003f1806 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b648:	843ff844 	addi	r16,r16,-31
1800b64c:	01400804 	movi	r5,32
1800b650:	1408d83a 	srl	r4,r2,r16
1800b654:	19405026 	beq	r3,r5,1800b798 <__subdf3+0x574>
1800b658:	01401004 	movi	r5,64
1800b65c:	28c7c83a 	sub	r3,r5,r3
1800b660:	10c4983a 	sll	r2,r2,r3
1800b664:	88a2b03a 	or	r17,r17,r2
1800b668:	8822c03a 	cmpne	r17,r17,zero
1800b66c:	2462b03a 	or	r17,r4,r17
1800b670:	0007883a 	mov	r3,zero
1800b674:	0021883a 	mov	r16,zero
1800b678:	003f6d06 	br	1800b430 <__alt_data_end+0xf800b430>
1800b67c:	11fff804 	addi	r7,r2,-32
1800b680:	01000804 	movi	r4,32
1800b684:	29ced83a 	srl	r7,r5,r7
1800b688:	11004526 	beq	r2,r4,1800b7a0 <__subdf3+0x57c>
1800b68c:	01001004 	movi	r4,64
1800b690:	2089c83a 	sub	r4,r4,r2
1800b694:	2904983a 	sll	r2,r5,r4
1800b698:	118cb03a 	or	r6,r2,r6
1800b69c:	300cc03a 	cmpne	r6,r6,zero
1800b6a0:	398cb03a 	or	r6,r7,r6
1800b6a4:	0005883a 	mov	r2,zero
1800b6a8:	003f3706 	br	1800b388 <__alt_data_end+0xf800b388>
1800b6ac:	80002a26 	beq	r16,zero,1800b758 <__subdf3+0x534>
1800b6b0:	0101ffc4 	movi	r4,2047
1800b6b4:	49006626 	beq	r9,r4,1800b850 <__subdf3+0x62c>
1800b6b8:	0085c83a 	sub	r2,zero,r2
1800b6bc:	18c02034 	orhi	r3,r3,128
1800b6c0:	01000e04 	movi	r4,56
1800b6c4:	20807e16 	blt	r4,r2,1800b8c0 <__subdf3+0x69c>
1800b6c8:	010007c4 	movi	r4,31
1800b6cc:	2080e716 	blt	r4,r2,1800ba6c <__subdf3+0x848>
1800b6d0:	01000804 	movi	r4,32
1800b6d4:	2089c83a 	sub	r4,r4,r2
1800b6d8:	1914983a 	sll	r10,r3,r4
1800b6dc:	8890d83a 	srl	r8,r17,r2
1800b6e0:	8908983a 	sll	r4,r17,r4
1800b6e4:	1884d83a 	srl	r2,r3,r2
1800b6e8:	5222b03a 	or	r17,r10,r8
1800b6ec:	2006c03a 	cmpne	r3,r4,zero
1800b6f0:	88e2b03a 	or	r17,r17,r3
1800b6f4:	3463c83a 	sub	r17,r6,r17
1800b6f8:	2885c83a 	sub	r2,r5,r2
1800b6fc:	344d803a 	cmpltu	r6,r6,r17
1800b700:	1187c83a 	sub	r3,r2,r6
1800b704:	4821883a 	mov	r16,r9
1800b708:	3825883a 	mov	r18,r7
1800b70c:	003f2306 	br	1800b39c <__alt_data_end+0xf800b39c>
1800b710:	24d0b03a 	or	r8,r4,r19
1800b714:	40001b1e 	bne	r8,zero,1800b784 <__subdf3+0x560>
1800b718:	0005883a 	mov	r2,zero
1800b71c:	0009883a 	mov	r4,zero
1800b720:	0021883a 	mov	r16,zero
1800b724:	003f4906 	br	1800b44c <__alt_data_end+0xf800b44c>
1800b728:	010007c4 	movi	r4,31
1800b72c:	20803a16 	blt	r4,r2,1800b818 <__subdf3+0x5f4>
1800b730:	01000804 	movi	r4,32
1800b734:	2089c83a 	sub	r4,r4,r2
1800b738:	2912983a 	sll	r9,r5,r4
1800b73c:	3090d83a 	srl	r8,r6,r2
1800b740:	3108983a 	sll	r4,r6,r4
1800b744:	2884d83a 	srl	r2,r5,r2
1800b748:	4a12b03a 	or	r9,r9,r8
1800b74c:	2008c03a 	cmpne	r4,r4,zero
1800b750:	4912b03a 	or	r9,r9,r4
1800b754:	003f4e06 	br	1800b490 <__alt_data_end+0xf800b490>
1800b758:	1c48b03a 	or	r4,r3,r17
1800b75c:	20003c26 	beq	r4,zero,1800b850 <__subdf3+0x62c>
1800b760:	0084303a 	nor	r2,zero,r2
1800b764:	1000381e 	bne	r2,zero,1800b848 <__subdf3+0x624>
1800b768:	3463c83a 	sub	r17,r6,r17
1800b76c:	28c5c83a 	sub	r2,r5,r3
1800b770:	344d803a 	cmpltu	r6,r6,r17
1800b774:	1187c83a 	sub	r3,r2,r6
1800b778:	4821883a 	mov	r16,r9
1800b77c:	3825883a 	mov	r18,r7
1800b780:	003f0606 	br	1800b39c <__alt_data_end+0xf800b39c>
1800b784:	2023883a 	mov	r17,r4
1800b788:	003f0906 	br	1800b3b0 <__alt_data_end+0xf800b3b0>
1800b78c:	0101ffc4 	movi	r4,2047
1800b790:	813f3a1e 	bne	r16,r4,1800b47c <__alt_data_end+0xf800b47c>
1800b794:	003ec406 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b798:	0005883a 	mov	r2,zero
1800b79c:	003fb106 	br	1800b664 <__alt_data_end+0xf800b664>
1800b7a0:	0005883a 	mov	r2,zero
1800b7a4:	003fbc06 	br	1800b698 <__alt_data_end+0xf800b698>
1800b7a8:	1c44b03a 	or	r2,r3,r17
1800b7ac:	80008e1e 	bne	r16,zero,1800b9e8 <__subdf3+0x7c4>
1800b7b0:	1000c826 	beq	r2,zero,1800bad4 <__subdf3+0x8b0>
1800b7b4:	2984b03a 	or	r2,r5,r6
1800b7b8:	103ebb26 	beq	r2,zero,1800b2a8 <__alt_data_end+0xf800b2a8>
1800b7bc:	8989883a 	add	r4,r17,r6
1800b7c0:	1945883a 	add	r2,r3,r5
1800b7c4:	2447803a 	cmpltu	r3,r4,r17
1800b7c8:	1887883a 	add	r3,r3,r2
1800b7cc:	1880202c 	andhi	r2,r3,128
1800b7d0:	2023883a 	mov	r17,r4
1800b7d4:	103f1626 	beq	r2,zero,1800b430 <__alt_data_end+0xf800b430>
1800b7d8:	00bfe034 	movhi	r2,65408
1800b7dc:	10bfffc4 	addi	r2,r2,-1
1800b7e0:	5021883a 	mov	r16,r10
1800b7e4:	1886703a 	and	r3,r3,r2
1800b7e8:	003eaf06 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b7ec:	3825883a 	mov	r18,r7
1800b7f0:	003f0f06 	br	1800b430 <__alt_data_end+0xf800b430>
1800b7f4:	1c44b03a 	or	r2,r3,r17
1800b7f8:	8000251e 	bne	r16,zero,1800b890 <__subdf3+0x66c>
1800b7fc:	1000661e 	bne	r2,zero,1800b998 <__subdf3+0x774>
1800b800:	2990b03a 	or	r8,r5,r6
1800b804:	40009626 	beq	r8,zero,1800ba60 <__subdf3+0x83c>
1800b808:	2807883a 	mov	r3,r5
1800b80c:	3023883a 	mov	r17,r6
1800b810:	3825883a 	mov	r18,r7
1800b814:	003ea406 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b818:	127ff804 	addi	r9,r2,-32
1800b81c:	01000804 	movi	r4,32
1800b820:	2a52d83a 	srl	r9,r5,r9
1800b824:	11008c26 	beq	r2,r4,1800ba58 <__subdf3+0x834>
1800b828:	01001004 	movi	r4,64
1800b82c:	2085c83a 	sub	r2,r4,r2
1800b830:	2884983a 	sll	r2,r5,r2
1800b834:	118cb03a 	or	r6,r2,r6
1800b838:	300cc03a 	cmpne	r6,r6,zero
1800b83c:	4992b03a 	or	r9,r9,r6
1800b840:	0005883a 	mov	r2,zero
1800b844:	003f1206 	br	1800b490 <__alt_data_end+0xf800b490>
1800b848:	0101ffc4 	movi	r4,2047
1800b84c:	493f9c1e 	bne	r9,r4,1800b6c0 <__alt_data_end+0xf800b6c0>
1800b850:	2807883a 	mov	r3,r5
1800b854:	3023883a 	mov	r17,r6
1800b858:	4821883a 	mov	r16,r9
1800b85c:	3825883a 	mov	r18,r7
1800b860:	003e9106 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b864:	80001f1e 	bne	r16,zero,1800b8e4 <__subdf3+0x6c0>
1800b868:	1c48b03a 	or	r4,r3,r17
1800b86c:	20005a26 	beq	r4,zero,1800b9d8 <__subdf3+0x7b4>
1800b870:	0084303a 	nor	r2,zero,r2
1800b874:	1000561e 	bne	r2,zero,1800b9d0 <__subdf3+0x7ac>
1800b878:	89a3883a 	add	r17,r17,r6
1800b87c:	1945883a 	add	r2,r3,r5
1800b880:	898d803a 	cmpltu	r6,r17,r6
1800b884:	3087883a 	add	r3,r6,r2
1800b888:	4821883a 	mov	r16,r9
1800b88c:	003f0506 	br	1800b4a4 <__alt_data_end+0xf800b4a4>
1800b890:	10002b1e 	bne	r2,zero,1800b940 <__subdf3+0x71c>
1800b894:	2984b03a 	or	r2,r5,r6
1800b898:	10008026 	beq	r2,zero,1800ba9c <__subdf3+0x878>
1800b89c:	2807883a 	mov	r3,r5
1800b8a0:	3023883a 	mov	r17,r6
1800b8a4:	3825883a 	mov	r18,r7
1800b8a8:	0401ffc4 	movi	r16,2047
1800b8ac:	003e7e06 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b8b0:	3809883a 	mov	r4,r7
1800b8b4:	0011883a 	mov	r8,zero
1800b8b8:	0005883a 	mov	r2,zero
1800b8bc:	003ee306 	br	1800b44c <__alt_data_end+0xf800b44c>
1800b8c0:	1c62b03a 	or	r17,r3,r17
1800b8c4:	8822c03a 	cmpne	r17,r17,zero
1800b8c8:	0005883a 	mov	r2,zero
1800b8cc:	003f8906 	br	1800b6f4 <__alt_data_end+0xf800b6f4>
1800b8d0:	3809883a 	mov	r4,r7
1800b8d4:	4821883a 	mov	r16,r9
1800b8d8:	0011883a 	mov	r8,zero
1800b8dc:	0005883a 	mov	r2,zero
1800b8e0:	003eda06 	br	1800b44c <__alt_data_end+0xf800b44c>
1800b8e4:	0101ffc4 	movi	r4,2047
1800b8e8:	49003b26 	beq	r9,r4,1800b9d8 <__subdf3+0x7b4>
1800b8ec:	0085c83a 	sub	r2,zero,r2
1800b8f0:	18c02034 	orhi	r3,r3,128
1800b8f4:	01000e04 	movi	r4,56
1800b8f8:	20806e16 	blt	r4,r2,1800bab4 <__subdf3+0x890>
1800b8fc:	010007c4 	movi	r4,31
1800b900:	20807716 	blt	r4,r2,1800bae0 <__subdf3+0x8bc>
1800b904:	01000804 	movi	r4,32
1800b908:	2089c83a 	sub	r4,r4,r2
1800b90c:	1914983a 	sll	r10,r3,r4
1800b910:	8890d83a 	srl	r8,r17,r2
1800b914:	8908983a 	sll	r4,r17,r4
1800b918:	1884d83a 	srl	r2,r3,r2
1800b91c:	5222b03a 	or	r17,r10,r8
1800b920:	2006c03a 	cmpne	r3,r4,zero
1800b924:	88e2b03a 	or	r17,r17,r3
1800b928:	89a3883a 	add	r17,r17,r6
1800b92c:	1145883a 	add	r2,r2,r5
1800b930:	898d803a 	cmpltu	r6,r17,r6
1800b934:	3087883a 	add	r3,r6,r2
1800b938:	4821883a 	mov	r16,r9
1800b93c:	003ed906 	br	1800b4a4 <__alt_data_end+0xf800b4a4>
1800b940:	2984b03a 	or	r2,r5,r6
1800b944:	10004226 	beq	r2,zero,1800ba50 <__subdf3+0x82c>
1800b948:	1808d0fa 	srli	r4,r3,3
1800b94c:	8822d0fa 	srli	r17,r17,3
1800b950:	1806977a 	slli	r3,r3,29
1800b954:	2080022c 	andhi	r2,r4,8
1800b958:	1c62b03a 	or	r17,r3,r17
1800b95c:	10000826 	beq	r2,zero,1800b980 <__subdf3+0x75c>
1800b960:	2812d0fa 	srli	r9,r5,3
1800b964:	4880022c 	andhi	r2,r9,8
1800b968:	1000051e 	bne	r2,zero,1800b980 <__subdf3+0x75c>
1800b96c:	300cd0fa 	srli	r6,r6,3
1800b970:	2804977a 	slli	r2,r5,29
1800b974:	4809883a 	mov	r4,r9
1800b978:	3825883a 	mov	r18,r7
1800b97c:	11a2b03a 	or	r17,r2,r6
1800b980:	8806d77a 	srli	r3,r17,29
1800b984:	200890fa 	slli	r4,r4,3
1800b988:	882290fa 	slli	r17,r17,3
1800b98c:	0401ffc4 	movi	r16,2047
1800b990:	1906b03a 	or	r3,r3,r4
1800b994:	003e4406 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b998:	2984b03a 	or	r2,r5,r6
1800b99c:	103e4226 	beq	r2,zero,1800b2a8 <__alt_data_end+0xf800b2a8>
1800b9a0:	8989c83a 	sub	r4,r17,r6
1800b9a4:	8911803a 	cmpltu	r8,r17,r4
1800b9a8:	1945c83a 	sub	r2,r3,r5
1800b9ac:	1205c83a 	sub	r2,r2,r8
1800b9b0:	1200202c 	andhi	r8,r2,128
1800b9b4:	403e9a26 	beq	r8,zero,1800b420 <__alt_data_end+0xf800b420>
1800b9b8:	3463c83a 	sub	r17,r6,r17
1800b9bc:	28c5c83a 	sub	r2,r5,r3
1800b9c0:	344d803a 	cmpltu	r6,r6,r17
1800b9c4:	1187c83a 	sub	r3,r2,r6
1800b9c8:	3825883a 	mov	r18,r7
1800b9cc:	003e3606 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b9d0:	0101ffc4 	movi	r4,2047
1800b9d4:	493fc71e 	bne	r9,r4,1800b8f4 <__alt_data_end+0xf800b8f4>
1800b9d8:	2807883a 	mov	r3,r5
1800b9dc:	3023883a 	mov	r17,r6
1800b9e0:	4821883a 	mov	r16,r9
1800b9e4:	003e3006 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800b9e8:	10003626 	beq	r2,zero,1800bac4 <__subdf3+0x8a0>
1800b9ec:	2984b03a 	or	r2,r5,r6
1800b9f0:	10001726 	beq	r2,zero,1800ba50 <__subdf3+0x82c>
1800b9f4:	1808d0fa 	srli	r4,r3,3
1800b9f8:	8822d0fa 	srli	r17,r17,3
1800b9fc:	1806977a 	slli	r3,r3,29
1800ba00:	2080022c 	andhi	r2,r4,8
1800ba04:	1c62b03a 	or	r17,r3,r17
1800ba08:	10000726 	beq	r2,zero,1800ba28 <__subdf3+0x804>
1800ba0c:	2812d0fa 	srli	r9,r5,3
1800ba10:	4880022c 	andhi	r2,r9,8
1800ba14:	1000041e 	bne	r2,zero,1800ba28 <__subdf3+0x804>
1800ba18:	300cd0fa 	srli	r6,r6,3
1800ba1c:	2804977a 	slli	r2,r5,29
1800ba20:	4809883a 	mov	r4,r9
1800ba24:	11a2b03a 	or	r17,r2,r6
1800ba28:	8806d77a 	srli	r3,r17,29
1800ba2c:	200890fa 	slli	r4,r4,3
1800ba30:	882290fa 	slli	r17,r17,3
1800ba34:	3825883a 	mov	r18,r7
1800ba38:	1906b03a 	or	r3,r3,r4
1800ba3c:	0401ffc4 	movi	r16,2047
1800ba40:	003e1906 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800ba44:	000b883a 	mov	r5,zero
1800ba48:	0005883a 	mov	r2,zero
1800ba4c:	003e2e06 	br	1800b308 <__alt_data_end+0xf800b308>
1800ba50:	0401ffc4 	movi	r16,2047
1800ba54:	003e1406 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800ba58:	0005883a 	mov	r2,zero
1800ba5c:	003f7506 	br	1800b834 <__alt_data_end+0xf800b834>
1800ba60:	0005883a 	mov	r2,zero
1800ba64:	0009883a 	mov	r4,zero
1800ba68:	003e7806 	br	1800b44c <__alt_data_end+0xf800b44c>
1800ba6c:	123ff804 	addi	r8,r2,-32
1800ba70:	01000804 	movi	r4,32
1800ba74:	1a10d83a 	srl	r8,r3,r8
1800ba78:	11002526 	beq	r2,r4,1800bb10 <__subdf3+0x8ec>
1800ba7c:	01001004 	movi	r4,64
1800ba80:	2085c83a 	sub	r2,r4,r2
1800ba84:	1884983a 	sll	r2,r3,r2
1800ba88:	1444b03a 	or	r2,r2,r17
1800ba8c:	1004c03a 	cmpne	r2,r2,zero
1800ba90:	40a2b03a 	or	r17,r8,r2
1800ba94:	0005883a 	mov	r2,zero
1800ba98:	003f1606 	br	1800b6f4 <__alt_data_end+0xf800b6f4>
1800ba9c:	02000434 	movhi	r8,16
1800baa0:	0009883a 	mov	r4,zero
1800baa4:	423fffc4 	addi	r8,r8,-1
1800baa8:	00bfffc4 	movi	r2,-1
1800baac:	0401ffc4 	movi	r16,2047
1800bab0:	003e6606 	br	1800b44c <__alt_data_end+0xf800b44c>
1800bab4:	1c62b03a 	or	r17,r3,r17
1800bab8:	8822c03a 	cmpne	r17,r17,zero
1800babc:	0005883a 	mov	r2,zero
1800bac0:	003f9906 	br	1800b928 <__alt_data_end+0xf800b928>
1800bac4:	2807883a 	mov	r3,r5
1800bac8:	3023883a 	mov	r17,r6
1800bacc:	0401ffc4 	movi	r16,2047
1800bad0:	003df506 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800bad4:	2807883a 	mov	r3,r5
1800bad8:	3023883a 	mov	r17,r6
1800badc:	003df206 	br	1800b2a8 <__alt_data_end+0xf800b2a8>
1800bae0:	123ff804 	addi	r8,r2,-32
1800bae4:	01000804 	movi	r4,32
1800bae8:	1a10d83a 	srl	r8,r3,r8
1800baec:	11000a26 	beq	r2,r4,1800bb18 <__subdf3+0x8f4>
1800baf0:	01001004 	movi	r4,64
1800baf4:	2085c83a 	sub	r2,r4,r2
1800baf8:	1884983a 	sll	r2,r3,r2
1800bafc:	1444b03a 	or	r2,r2,r17
1800bb00:	1004c03a 	cmpne	r2,r2,zero
1800bb04:	40a2b03a 	or	r17,r8,r2
1800bb08:	0005883a 	mov	r2,zero
1800bb0c:	003f8606 	br	1800b928 <__alt_data_end+0xf800b928>
1800bb10:	0005883a 	mov	r2,zero
1800bb14:	003fdc06 	br	1800ba88 <__alt_data_end+0xf800ba88>
1800bb18:	0005883a 	mov	r2,zero
1800bb1c:	003ff706 	br	1800bafc <__alt_data_end+0xf800bafc>

1800bb20 <__fixdfsi>:
1800bb20:	280cd53a 	srli	r6,r5,20
1800bb24:	00c00434 	movhi	r3,16
1800bb28:	18ffffc4 	addi	r3,r3,-1
1800bb2c:	3181ffcc 	andi	r6,r6,2047
1800bb30:	01c0ff84 	movi	r7,1022
1800bb34:	28c6703a 	and	r3,r5,r3
1800bb38:	280ad7fa 	srli	r5,r5,31
1800bb3c:	3980120e 	bge	r7,r6,1800bb88 <__fixdfsi+0x68>
1800bb40:	00810744 	movi	r2,1053
1800bb44:	11800c16 	blt	r2,r6,1800bb78 <__fixdfsi+0x58>
1800bb48:	00810cc4 	movi	r2,1075
1800bb4c:	1185c83a 	sub	r2,r2,r6
1800bb50:	01c007c4 	movi	r7,31
1800bb54:	18c00434 	orhi	r3,r3,16
1800bb58:	38800d16 	blt	r7,r2,1800bb90 <__fixdfsi+0x70>
1800bb5c:	31befb44 	addi	r6,r6,-1043
1800bb60:	2084d83a 	srl	r2,r4,r2
1800bb64:	1986983a 	sll	r3,r3,r6
1800bb68:	1884b03a 	or	r2,r3,r2
1800bb6c:	28000726 	beq	r5,zero,1800bb8c <__fixdfsi+0x6c>
1800bb70:	0085c83a 	sub	r2,zero,r2
1800bb74:	f800283a 	ret
1800bb78:	00a00034 	movhi	r2,32768
1800bb7c:	10bfffc4 	addi	r2,r2,-1
1800bb80:	2885883a 	add	r2,r5,r2
1800bb84:	f800283a 	ret
1800bb88:	0005883a 	mov	r2,zero
1800bb8c:	f800283a 	ret
1800bb90:	008104c4 	movi	r2,1043
1800bb94:	1185c83a 	sub	r2,r2,r6
1800bb98:	1884d83a 	srl	r2,r3,r2
1800bb9c:	003ff306 	br	1800bb6c <__alt_data_end+0xf800bb6c>

1800bba0 <__floatsidf>:
1800bba0:	defffd04 	addi	sp,sp,-12
1800bba4:	dfc00215 	stw	ra,8(sp)
1800bba8:	dc400115 	stw	r17,4(sp)
1800bbac:	dc000015 	stw	r16,0(sp)
1800bbb0:	20002b26 	beq	r4,zero,1800bc60 <__floatsidf+0xc0>
1800bbb4:	2023883a 	mov	r17,r4
1800bbb8:	2020d7fa 	srli	r16,r4,31
1800bbbc:	20002d16 	blt	r4,zero,1800bc74 <__floatsidf+0xd4>
1800bbc0:	8809883a 	mov	r4,r17
1800bbc4:	800bd240 	call	1800bd24 <__clzsi2>
1800bbc8:	01410784 	movi	r5,1054
1800bbcc:	288bc83a 	sub	r5,r5,r2
1800bbd0:	01010cc4 	movi	r4,1075
1800bbd4:	2149c83a 	sub	r4,r4,r5
1800bbd8:	00c007c4 	movi	r3,31
1800bbdc:	1900160e 	bge	r3,r4,1800bc38 <__floatsidf+0x98>
1800bbe0:	00c104c4 	movi	r3,1043
1800bbe4:	1947c83a 	sub	r3,r3,r5
1800bbe8:	88c6983a 	sll	r3,r17,r3
1800bbec:	00800434 	movhi	r2,16
1800bbf0:	10bfffc4 	addi	r2,r2,-1
1800bbf4:	1886703a 	and	r3,r3,r2
1800bbf8:	2941ffcc 	andi	r5,r5,2047
1800bbfc:	800d883a 	mov	r6,r16
1800bc00:	0005883a 	mov	r2,zero
1800bc04:	280a953a 	slli	r5,r5,20
1800bc08:	31803fcc 	andi	r6,r6,255
1800bc0c:	01000434 	movhi	r4,16
1800bc10:	300c97fa 	slli	r6,r6,31
1800bc14:	213fffc4 	addi	r4,r4,-1
1800bc18:	1906703a 	and	r3,r3,r4
1800bc1c:	1946b03a 	or	r3,r3,r5
1800bc20:	1986b03a 	or	r3,r3,r6
1800bc24:	dfc00217 	ldw	ra,8(sp)
1800bc28:	dc400117 	ldw	r17,4(sp)
1800bc2c:	dc000017 	ldw	r16,0(sp)
1800bc30:	dec00304 	addi	sp,sp,12
1800bc34:	f800283a 	ret
1800bc38:	00c002c4 	movi	r3,11
1800bc3c:	1887c83a 	sub	r3,r3,r2
1800bc40:	88c6d83a 	srl	r3,r17,r3
1800bc44:	8904983a 	sll	r2,r17,r4
1800bc48:	01000434 	movhi	r4,16
1800bc4c:	213fffc4 	addi	r4,r4,-1
1800bc50:	2941ffcc 	andi	r5,r5,2047
1800bc54:	1906703a 	and	r3,r3,r4
1800bc58:	800d883a 	mov	r6,r16
1800bc5c:	003fe906 	br	1800bc04 <__alt_data_end+0xf800bc04>
1800bc60:	000d883a 	mov	r6,zero
1800bc64:	000b883a 	mov	r5,zero
1800bc68:	0007883a 	mov	r3,zero
1800bc6c:	0005883a 	mov	r2,zero
1800bc70:	003fe406 	br	1800bc04 <__alt_data_end+0xf800bc04>
1800bc74:	0123c83a 	sub	r17,zero,r4
1800bc78:	003fd106 	br	1800bbc0 <__alt_data_end+0xf800bbc0>

1800bc7c <__floatunsidf>:
1800bc7c:	defffe04 	addi	sp,sp,-8
1800bc80:	dc000015 	stw	r16,0(sp)
1800bc84:	dfc00115 	stw	ra,4(sp)
1800bc88:	2021883a 	mov	r16,r4
1800bc8c:	20002226 	beq	r4,zero,1800bd18 <__floatunsidf+0x9c>
1800bc90:	800bd240 	call	1800bd24 <__clzsi2>
1800bc94:	01010784 	movi	r4,1054
1800bc98:	2089c83a 	sub	r4,r4,r2
1800bc9c:	01810cc4 	movi	r6,1075
1800bca0:	310dc83a 	sub	r6,r6,r4
1800bca4:	00c007c4 	movi	r3,31
1800bca8:	1980120e 	bge	r3,r6,1800bcf4 <__floatunsidf+0x78>
1800bcac:	00c104c4 	movi	r3,1043
1800bcb0:	1907c83a 	sub	r3,r3,r4
1800bcb4:	80ca983a 	sll	r5,r16,r3
1800bcb8:	00800434 	movhi	r2,16
1800bcbc:	10bfffc4 	addi	r2,r2,-1
1800bcc0:	2101ffcc 	andi	r4,r4,2047
1800bcc4:	0021883a 	mov	r16,zero
1800bcc8:	288a703a 	and	r5,r5,r2
1800bccc:	2008953a 	slli	r4,r4,20
1800bcd0:	00c00434 	movhi	r3,16
1800bcd4:	18ffffc4 	addi	r3,r3,-1
1800bcd8:	28c6703a 	and	r3,r5,r3
1800bcdc:	8005883a 	mov	r2,r16
1800bce0:	1906b03a 	or	r3,r3,r4
1800bce4:	dfc00117 	ldw	ra,4(sp)
1800bce8:	dc000017 	ldw	r16,0(sp)
1800bcec:	dec00204 	addi	sp,sp,8
1800bcf0:	f800283a 	ret
1800bcf4:	00c002c4 	movi	r3,11
1800bcf8:	188bc83a 	sub	r5,r3,r2
1800bcfc:	814ad83a 	srl	r5,r16,r5
1800bd00:	00c00434 	movhi	r3,16
1800bd04:	18ffffc4 	addi	r3,r3,-1
1800bd08:	81a0983a 	sll	r16,r16,r6
1800bd0c:	2101ffcc 	andi	r4,r4,2047
1800bd10:	28ca703a 	and	r5,r5,r3
1800bd14:	003fed06 	br	1800bccc <__alt_data_end+0xf800bccc>
1800bd18:	0009883a 	mov	r4,zero
1800bd1c:	000b883a 	mov	r5,zero
1800bd20:	003fea06 	br	1800bccc <__alt_data_end+0xf800bccc>

1800bd24 <__clzsi2>:
1800bd24:	00bfffd4 	movui	r2,65535
1800bd28:	11000536 	bltu	r2,r4,1800bd40 <__clzsi2+0x1c>
1800bd2c:	00803fc4 	movi	r2,255
1800bd30:	11000f36 	bltu	r2,r4,1800bd70 <__clzsi2+0x4c>
1800bd34:	00800804 	movi	r2,32
1800bd38:	0007883a 	mov	r3,zero
1800bd3c:	00000506 	br	1800bd54 <__clzsi2+0x30>
1800bd40:	00804034 	movhi	r2,256
1800bd44:	10bfffc4 	addi	r2,r2,-1
1800bd48:	11000c2e 	bgeu	r2,r4,1800bd7c <__clzsi2+0x58>
1800bd4c:	00800204 	movi	r2,8
1800bd50:	00c00604 	movi	r3,24
1800bd54:	20c8d83a 	srl	r4,r4,r3
1800bd58:	00c60074 	movhi	r3,6145
1800bd5c:	18f89504 	addi	r3,r3,-7596
1800bd60:	1909883a 	add	r4,r3,r4
1800bd64:	20c00003 	ldbu	r3,0(r4)
1800bd68:	10c5c83a 	sub	r2,r2,r3
1800bd6c:	f800283a 	ret
1800bd70:	00800604 	movi	r2,24
1800bd74:	00c00204 	movi	r3,8
1800bd78:	003ff606 	br	1800bd54 <__alt_data_end+0xf800bd54>
1800bd7c:	00800404 	movi	r2,16
1800bd80:	1007883a 	mov	r3,r2
1800bd84:	003ff306 	br	1800bd54 <__alt_data_end+0xf800bd54>

1800bd88 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1800bd88:	defffc04 	addi	sp,sp,-16
1800bd8c:	df000315 	stw	fp,12(sp)
1800bd90:	df000304 	addi	fp,sp,12
1800bd94:	e13ffd15 	stw	r4,-12(fp)
1800bd98:	e17ffe15 	stw	r5,-8(fp)
1800bd9c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1800bda0:	e0fffe17 	ldw	r3,-8(fp)
1800bda4:	e0bffd17 	ldw	r2,-12(fp)
1800bda8:	18800c26 	beq	r3,r2,1800bddc <alt_load_section+0x54>
  {
    while( to != end )
1800bdac:	00000806 	br	1800bdd0 <alt_load_section+0x48>
    {
      *to++ = *from++;
1800bdb0:	e0bffe17 	ldw	r2,-8(fp)
1800bdb4:	10c00104 	addi	r3,r2,4
1800bdb8:	e0fffe15 	stw	r3,-8(fp)
1800bdbc:	e0fffd17 	ldw	r3,-12(fp)
1800bdc0:	19000104 	addi	r4,r3,4
1800bdc4:	e13ffd15 	stw	r4,-12(fp)
1800bdc8:	18c00017 	ldw	r3,0(r3)
1800bdcc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1800bdd0:	e0fffe17 	ldw	r3,-8(fp)
1800bdd4:	e0bfff17 	ldw	r2,-4(fp)
1800bdd8:	18bff51e 	bne	r3,r2,1800bdb0 <__alt_data_end+0xf800bdb0>
    {
      *to++ = *from++;
    }
  }
}
1800bddc:	0001883a 	nop
1800bde0:	e037883a 	mov	sp,fp
1800bde4:	df000017 	ldw	fp,0(sp)
1800bde8:	dec00104 	addi	sp,sp,4
1800bdec:	f800283a 	ret

1800bdf0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1800bdf0:	defffe04 	addi	sp,sp,-8
1800bdf4:	dfc00115 	stw	ra,4(sp)
1800bdf8:	df000015 	stw	fp,0(sp)
1800bdfc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1800be00:	01860074 	movhi	r6,6145
1800be04:	3180b304 	addi	r6,r6,716
1800be08:	01460074 	movhi	r5,6145
1800be0c:	2978e204 	addi	r5,r5,-7288
1800be10:	01060074 	movhi	r4,6145
1800be14:	2100b304 	addi	r4,r4,716
1800be18:	800bd880 	call	1800bd88 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1800be1c:	01860034 	movhi	r6,6144
1800be20:	31808c04 	addi	r6,r6,560
1800be24:	01460034 	movhi	r5,6144
1800be28:	29400804 	addi	r5,r5,32
1800be2c:	01060034 	movhi	r4,6144
1800be30:	21000804 	addi	r4,r4,32
1800be34:	800bd880 	call	1800bd88 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1800be38:	01860074 	movhi	r6,6145
1800be3c:	31b8e204 	addi	r6,r6,-7288
1800be40:	01460074 	movhi	r5,6145
1800be44:	29780e04 	addi	r5,r5,-8136
1800be48:	01060074 	movhi	r4,6145
1800be4c:	21380e04 	addi	r4,r4,-8136
1800be50:	800bd880 	call	1800bd88 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1800be54:	800ced00 	call	1800ced0 <alt_dcache_flush_all>
  alt_icache_flush_all();
1800be58:	800d0bc0 	call	1800d0bc <alt_icache_flush_all>
}
1800be5c:	0001883a 	nop
1800be60:	e037883a 	mov	sp,fp
1800be64:	dfc00117 	ldw	ra,4(sp)
1800be68:	df000017 	ldw	fp,0(sp)
1800be6c:	dec00204 	addi	sp,sp,8
1800be70:	f800283a 	ret

1800be74 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1800be74:	defffd04 	addi	sp,sp,-12
1800be78:	dfc00215 	stw	ra,8(sp)
1800be7c:	df000115 	stw	fp,4(sp)
1800be80:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1800be84:	0009883a 	mov	r4,zero
1800be88:	800c04c0 	call	1800c04c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1800be8c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1800be90:	800c0840 	call	1800c084 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1800be94:	01860074 	movhi	r6,6145
1800be98:	31b8d504 	addi	r6,r6,-7340
1800be9c:	01460074 	movhi	r5,6145
1800bea0:	2978d504 	addi	r5,r5,-7340
1800bea4:	01060074 	movhi	r4,6145
1800bea8:	2138d504 	addi	r4,r4,-7340
1800beac:	800d4600 	call	1800d460 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1800beb0:	800cffc0 	call	1800cffc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1800beb4:	01060074 	movhi	r4,6145
1800beb8:	21341704 	addi	r4,r4,-12196
1800bebc:	800dca40 	call	1800dca4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1800bec0:	d0a7ea17 	ldw	r2,-24664(gp)
1800bec4:	d0e7eb17 	ldw	r3,-24660(gp)
1800bec8:	d127ec17 	ldw	r4,-24656(gp)
1800becc:	200d883a 	mov	r6,r4
1800bed0:	180b883a 	mov	r5,r3
1800bed4:	1009883a 	mov	r4,r2
1800bed8:	800026c0 	call	1800026c <main>
1800bedc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1800bee0:	01000044 	movi	r4,1
1800bee4:	800cdf80 	call	1800cdf8 <close>
  exit (result);
1800bee8:	e13fff17 	ldw	r4,-4(fp)
1800beec:	800dcb80 	call	1800dcb8 <exit>

1800bef0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1800bef0:	defffe04 	addi	sp,sp,-8
1800bef4:	df000115 	stw	fp,4(sp)
1800bef8:	df000104 	addi	fp,sp,4
1800befc:	e13fff15 	stw	r4,-4(fp)
}
1800bf00:	0001883a 	nop
1800bf04:	e037883a 	mov	sp,fp
1800bf08:	df000017 	ldw	fp,0(sp)
1800bf0c:	dec00104 	addi	sp,sp,4
1800bf10:	f800283a 	ret

1800bf14 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1800bf14:	defffe04 	addi	sp,sp,-8
1800bf18:	df000115 	stw	fp,4(sp)
1800bf1c:	df000104 	addi	fp,sp,4
1800bf20:	e13fff15 	stw	r4,-4(fp)
}
1800bf24:	0001883a 	nop
1800bf28:	e037883a 	mov	sp,fp
1800bf2c:	df000017 	ldw	fp,0(sp)
1800bf30:	dec00104 	addi	sp,sp,4
1800bf34:	f800283a 	ret

1800bf38 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1800bf38:	defff904 	addi	sp,sp,-28
1800bf3c:	df000615 	stw	fp,24(sp)
1800bf40:	df000604 	addi	fp,sp,24
1800bf44:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800bf48:	0005303a 	rdctl	r2,status
1800bf4c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800bf50:	e0fffe17 	ldw	r3,-8(fp)
1800bf54:	00bfff84 	movi	r2,-2
1800bf58:	1884703a 	and	r2,r3,r2
1800bf5c:	1001703a 	wrctl	status,r2
  
  return context;
1800bf60:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1800bf64:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1800bf68:	d0a00817 	ldw	r2,-32736(gp)
1800bf6c:	10c000c4 	addi	r3,r2,3
1800bf70:	00bfff04 	movi	r2,-4
1800bf74:	1884703a 	and	r2,r3,r2
1800bf78:	d0a00815 	stw	r2,-32736(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1800bf7c:	d0e00817 	ldw	r3,-32736(gp)
1800bf80:	e0bfff17 	ldw	r2,-4(fp)
1800bf84:	1887883a 	add	r3,r3,r2
1800bf88:	00880034 	movhi	r2,8192
1800bf8c:	10800004 	addi	r2,r2,0
1800bf90:	10c0062e 	bgeu	r2,r3,1800bfac <sbrk+0x74>
1800bf94:	e0bffb17 	ldw	r2,-20(fp)
1800bf98:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800bf9c:	e0bffa17 	ldw	r2,-24(fp)
1800bfa0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1800bfa4:	00bfffc4 	movi	r2,-1
1800bfa8:	00000b06 	br	1800bfd8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1800bfac:	d0a00817 	ldw	r2,-32736(gp)
1800bfb0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1800bfb4:	d0e00817 	ldw	r3,-32736(gp)
1800bfb8:	e0bfff17 	ldw	r2,-4(fp)
1800bfbc:	1885883a 	add	r2,r3,r2
1800bfc0:	d0a00815 	stw	r2,-32736(gp)
1800bfc4:	e0bffb17 	ldw	r2,-20(fp)
1800bfc8:	e0bffc15 	stw	r2,-16(fp)
1800bfcc:	e0bffc17 	ldw	r2,-16(fp)
1800bfd0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1800bfd4:	e0bffd17 	ldw	r2,-12(fp)
} 
1800bfd8:	e037883a 	mov	sp,fp
1800bfdc:	df000017 	ldw	fp,0(sp)
1800bfe0:	dec00104 	addi	sp,sp,4
1800bfe4:	f800283a 	ret

1800bfe8 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
1800bfe8:	defffd04 	addi	sp,sp,-12
1800bfec:	dfc00215 	stw	ra,8(sp)
1800bff0:	df000115 	stw	fp,4(sp)
1800bff4:	df000104 	addi	fp,sp,4
1800bff8:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
1800bffc:	e13fff17 	ldw	r4,-4(fp)
1800c000:	800cc640 	call	1800cc64 <alt_busy_sleep>
}
1800c004:	e037883a 	mov	sp,fp
1800c008:	dfc00117 	ldw	ra,4(sp)
1800c00c:	df000017 	ldw	fp,0(sp)
1800c010:	dec00204 	addi	sp,sp,8
1800c014:	f800283a 	ret

1800c018 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1800c018:	defffd04 	addi	sp,sp,-12
1800c01c:	dfc00215 	stw	ra,8(sp)
1800c020:	df000115 	stw	fp,4(sp)
1800c024:	df000104 	addi	fp,sp,4
1800c028:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1800c02c:	d1600b04 	addi	r5,gp,-32724
1800c030:	e13fff17 	ldw	r4,-4(fp)
1800c034:	800cf580 	call	1800cf58 <alt_dev_llist_insert>
}
1800c038:	e037883a 	mov	sp,fp
1800c03c:	dfc00117 	ldw	ra,4(sp)
1800c040:	df000017 	ldw	fp,0(sp)
1800c044:	dec00204 	addi	sp,sp,8
1800c048:	f800283a 	ret

1800c04c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1800c04c:	defffd04 	addi	sp,sp,-12
1800c050:	dfc00215 	stw	ra,8(sp)
1800c054:	df000115 	stw	fp,4(sp)
1800c058:	df000104 	addi	fp,sp,4
1800c05c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1800c060:	800d9880 	call	1800d988 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1800c064:	00800044 	movi	r2,1
1800c068:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1800c06c:	0001883a 	nop
1800c070:	e037883a 	mov	sp,fp
1800c074:	dfc00117 	ldw	ra,4(sp)
1800c078:	df000017 	ldw	fp,0(sp)
1800c07c:	dec00204 	addi	sp,sp,8
1800c080:	f800283a 	ret

1800c084 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1800c084:	defffe04 	addi	sp,sp,-8
1800c088:	dfc00115 	stw	ra,4(sp)
1800c08c:	df000015 	stw	fp,0(sp)
1800c090:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1800c094:	01800144 	movi	r6,5
1800c098:	000b883a 	mov	r5,zero
1800c09c:	01060074 	movhi	r4,6145
1800c0a0:	213c2904 	addi	r4,r4,-3932
1800c0a4:	800c2340 	call	1800c234 <altera_avalon_jtag_uart_init>
1800c0a8:	01060074 	movhi	r4,6145
1800c0ac:	213c1f04 	addi	r4,r4,-3972
1800c0b0:	800c0180 	call	1800c018 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1800c0b4:	0001883a 	nop
}
1800c0b8:	0001883a 	nop
1800c0bc:	e037883a 	mov	sp,fp
1800c0c0:	dfc00117 	ldw	ra,4(sp)
1800c0c4:	df000017 	ldw	fp,0(sp)
1800c0c8:	dec00204 	addi	sp,sp,8
1800c0cc:	f800283a 	ret

1800c0d0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1800c0d0:	defffa04 	addi	sp,sp,-24
1800c0d4:	dfc00515 	stw	ra,20(sp)
1800c0d8:	df000415 	stw	fp,16(sp)
1800c0dc:	df000404 	addi	fp,sp,16
1800c0e0:	e13ffd15 	stw	r4,-12(fp)
1800c0e4:	e17ffe15 	stw	r5,-8(fp)
1800c0e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1800c0ec:	e0bffd17 	ldw	r2,-12(fp)
1800c0f0:	10800017 	ldw	r2,0(r2)
1800c0f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1800c0f8:	e0bffc17 	ldw	r2,-16(fp)
1800c0fc:	10c00a04 	addi	r3,r2,40
1800c100:	e0bffd17 	ldw	r2,-12(fp)
1800c104:	10800217 	ldw	r2,8(r2)
1800c108:	100f883a 	mov	r7,r2
1800c10c:	e1bfff17 	ldw	r6,-4(fp)
1800c110:	e17ffe17 	ldw	r5,-8(fp)
1800c114:	1809883a 	mov	r4,r3
1800c118:	800c6f80 	call	1800c6f8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1800c11c:	e037883a 	mov	sp,fp
1800c120:	dfc00117 	ldw	ra,4(sp)
1800c124:	df000017 	ldw	fp,0(sp)
1800c128:	dec00204 	addi	sp,sp,8
1800c12c:	f800283a 	ret

1800c130 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1800c130:	defffa04 	addi	sp,sp,-24
1800c134:	dfc00515 	stw	ra,20(sp)
1800c138:	df000415 	stw	fp,16(sp)
1800c13c:	df000404 	addi	fp,sp,16
1800c140:	e13ffd15 	stw	r4,-12(fp)
1800c144:	e17ffe15 	stw	r5,-8(fp)
1800c148:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1800c14c:	e0bffd17 	ldw	r2,-12(fp)
1800c150:	10800017 	ldw	r2,0(r2)
1800c154:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1800c158:	e0bffc17 	ldw	r2,-16(fp)
1800c15c:	10c00a04 	addi	r3,r2,40
1800c160:	e0bffd17 	ldw	r2,-12(fp)
1800c164:	10800217 	ldw	r2,8(r2)
1800c168:	100f883a 	mov	r7,r2
1800c16c:	e1bfff17 	ldw	r6,-4(fp)
1800c170:	e17ffe17 	ldw	r5,-8(fp)
1800c174:	1809883a 	mov	r4,r3
1800c178:	800c9140 	call	1800c914 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1800c17c:	e037883a 	mov	sp,fp
1800c180:	dfc00117 	ldw	ra,4(sp)
1800c184:	df000017 	ldw	fp,0(sp)
1800c188:	dec00204 	addi	sp,sp,8
1800c18c:	f800283a 	ret

1800c190 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1800c190:	defffc04 	addi	sp,sp,-16
1800c194:	dfc00315 	stw	ra,12(sp)
1800c198:	df000215 	stw	fp,8(sp)
1800c19c:	df000204 	addi	fp,sp,8
1800c1a0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1800c1a4:	e0bfff17 	ldw	r2,-4(fp)
1800c1a8:	10800017 	ldw	r2,0(r2)
1800c1ac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1800c1b0:	e0bffe17 	ldw	r2,-8(fp)
1800c1b4:	10c00a04 	addi	r3,r2,40
1800c1b8:	e0bfff17 	ldw	r2,-4(fp)
1800c1bc:	10800217 	ldw	r2,8(r2)
1800c1c0:	100b883a 	mov	r5,r2
1800c1c4:	1809883a 	mov	r4,r3
1800c1c8:	800c5a00 	call	1800c5a0 <altera_avalon_jtag_uart_close>
}
1800c1cc:	e037883a 	mov	sp,fp
1800c1d0:	dfc00117 	ldw	ra,4(sp)
1800c1d4:	df000017 	ldw	fp,0(sp)
1800c1d8:	dec00204 	addi	sp,sp,8
1800c1dc:	f800283a 	ret

1800c1e0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1800c1e0:	defffa04 	addi	sp,sp,-24
1800c1e4:	dfc00515 	stw	ra,20(sp)
1800c1e8:	df000415 	stw	fp,16(sp)
1800c1ec:	df000404 	addi	fp,sp,16
1800c1f0:	e13ffd15 	stw	r4,-12(fp)
1800c1f4:	e17ffe15 	stw	r5,-8(fp)
1800c1f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1800c1fc:	e0bffd17 	ldw	r2,-12(fp)
1800c200:	10800017 	ldw	r2,0(r2)
1800c204:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1800c208:	e0bffc17 	ldw	r2,-16(fp)
1800c20c:	10800a04 	addi	r2,r2,40
1800c210:	e1bfff17 	ldw	r6,-4(fp)
1800c214:	e17ffe17 	ldw	r5,-8(fp)
1800c218:	1009883a 	mov	r4,r2
1800c21c:	800c6080 	call	1800c608 <altera_avalon_jtag_uart_ioctl>
}
1800c220:	e037883a 	mov	sp,fp
1800c224:	dfc00117 	ldw	ra,4(sp)
1800c228:	df000017 	ldw	fp,0(sp)
1800c22c:	dec00204 	addi	sp,sp,8
1800c230:	f800283a 	ret

1800c234 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1800c234:	defffa04 	addi	sp,sp,-24
1800c238:	dfc00515 	stw	ra,20(sp)
1800c23c:	df000415 	stw	fp,16(sp)
1800c240:	df000404 	addi	fp,sp,16
1800c244:	e13ffd15 	stw	r4,-12(fp)
1800c248:	e17ffe15 	stw	r5,-8(fp)
1800c24c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1800c250:	e0bffd17 	ldw	r2,-12(fp)
1800c254:	00c00044 	movi	r3,1
1800c258:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1800c25c:	e0bffd17 	ldw	r2,-12(fp)
1800c260:	10800017 	ldw	r2,0(r2)
1800c264:	10800104 	addi	r2,r2,4
1800c268:	1007883a 	mov	r3,r2
1800c26c:	e0bffd17 	ldw	r2,-12(fp)
1800c270:	10800817 	ldw	r2,32(r2)
1800c274:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1800c278:	e0bffe17 	ldw	r2,-8(fp)
1800c27c:	e0ffff17 	ldw	r3,-4(fp)
1800c280:	d8000015 	stw	zero,0(sp)
1800c284:	e1fffd17 	ldw	r7,-12(fp)
1800c288:	01860074 	movhi	r6,6145
1800c28c:	31b0bd04 	addi	r6,r6,-15628
1800c290:	180b883a 	mov	r5,r3
1800c294:	1009883a 	mov	r4,r2
1800c298:	800d0dc0 	call	1800d0dc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1800c29c:	e0bffd17 	ldw	r2,-12(fp)
1800c2a0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1800c2a4:	e0bffd17 	ldw	r2,-12(fp)
1800c2a8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1800c2ac:	d0e7ee17 	ldw	r3,-24648(gp)
1800c2b0:	e1fffd17 	ldw	r7,-12(fp)
1800c2b4:	01860074 	movhi	r6,6145
1800c2b8:	31b14004 	addi	r6,r6,-15104
1800c2bc:	180b883a 	mov	r5,r3
1800c2c0:	1009883a 	mov	r4,r2
1800c2c4:	800cb380 	call	1800cb38 <alt_alarm_start>
1800c2c8:	1000040e 	bge	r2,zero,1800c2dc <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1800c2cc:	e0fffd17 	ldw	r3,-12(fp)
1800c2d0:	00a00034 	movhi	r2,32768
1800c2d4:	10bfffc4 	addi	r2,r2,-1
1800c2d8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1800c2dc:	0001883a 	nop
1800c2e0:	e037883a 	mov	sp,fp
1800c2e4:	dfc00117 	ldw	ra,4(sp)
1800c2e8:	df000017 	ldw	fp,0(sp)
1800c2ec:	dec00204 	addi	sp,sp,8
1800c2f0:	f800283a 	ret

1800c2f4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1800c2f4:	defff804 	addi	sp,sp,-32
1800c2f8:	df000715 	stw	fp,28(sp)
1800c2fc:	df000704 	addi	fp,sp,28
1800c300:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1800c304:	e0bfff17 	ldw	r2,-4(fp)
1800c308:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1800c30c:	e0bffb17 	ldw	r2,-20(fp)
1800c310:	10800017 	ldw	r2,0(r2)
1800c314:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1800c318:	e0bffc17 	ldw	r2,-16(fp)
1800c31c:	10800104 	addi	r2,r2,4
1800c320:	10800037 	ldwio	r2,0(r2)
1800c324:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1800c328:	e0bffd17 	ldw	r2,-12(fp)
1800c32c:	1080c00c 	andi	r2,r2,768
1800c330:	10006d26 	beq	r2,zero,1800c4e8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1800c334:	e0bffd17 	ldw	r2,-12(fp)
1800c338:	1080400c 	andi	r2,r2,256
1800c33c:	10003526 	beq	r2,zero,1800c414 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1800c340:	00800074 	movhi	r2,1
1800c344:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1800c348:	e0bffb17 	ldw	r2,-20(fp)
1800c34c:	10800a17 	ldw	r2,40(r2)
1800c350:	10800044 	addi	r2,r2,1
1800c354:	1081ffcc 	andi	r2,r2,2047
1800c358:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1800c35c:	e0bffb17 	ldw	r2,-20(fp)
1800c360:	10c00b17 	ldw	r3,44(r2)
1800c364:	e0bffe17 	ldw	r2,-8(fp)
1800c368:	18801526 	beq	r3,r2,1800c3c0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1800c36c:	e0bffc17 	ldw	r2,-16(fp)
1800c370:	10800037 	ldwio	r2,0(r2)
1800c374:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1800c378:	e0bff917 	ldw	r2,-28(fp)
1800c37c:	10a0000c 	andi	r2,r2,32768
1800c380:	10001126 	beq	r2,zero,1800c3c8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1800c384:	e0bffb17 	ldw	r2,-20(fp)
1800c388:	10800a17 	ldw	r2,40(r2)
1800c38c:	e0fff917 	ldw	r3,-28(fp)
1800c390:	1809883a 	mov	r4,r3
1800c394:	e0fffb17 	ldw	r3,-20(fp)
1800c398:	1885883a 	add	r2,r3,r2
1800c39c:	10800e04 	addi	r2,r2,56
1800c3a0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1800c3a4:	e0bffb17 	ldw	r2,-20(fp)
1800c3a8:	10800a17 	ldw	r2,40(r2)
1800c3ac:	10800044 	addi	r2,r2,1
1800c3b0:	10c1ffcc 	andi	r3,r2,2047
1800c3b4:	e0bffb17 	ldw	r2,-20(fp)
1800c3b8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1800c3bc:	003fe206 	br	1800c348 <__alt_data_end+0xf800c348>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1800c3c0:	0001883a 	nop
1800c3c4:	00000106 	br	1800c3cc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1800c3c8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1800c3cc:	e0bff917 	ldw	r2,-28(fp)
1800c3d0:	10bfffec 	andhi	r2,r2,65535
1800c3d4:	10000f26 	beq	r2,zero,1800c414 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1800c3d8:	e0bffb17 	ldw	r2,-20(fp)
1800c3dc:	10c00817 	ldw	r3,32(r2)
1800c3e0:	00bfff84 	movi	r2,-2
1800c3e4:	1886703a 	and	r3,r3,r2
1800c3e8:	e0bffb17 	ldw	r2,-20(fp)
1800c3ec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1800c3f0:	e0bffc17 	ldw	r2,-16(fp)
1800c3f4:	10800104 	addi	r2,r2,4
1800c3f8:	1007883a 	mov	r3,r2
1800c3fc:	e0bffb17 	ldw	r2,-20(fp)
1800c400:	10800817 	ldw	r2,32(r2)
1800c404:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1800c408:	e0bffc17 	ldw	r2,-16(fp)
1800c40c:	10800104 	addi	r2,r2,4
1800c410:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1800c414:	e0bffd17 	ldw	r2,-12(fp)
1800c418:	1080800c 	andi	r2,r2,512
1800c41c:	103fbe26 	beq	r2,zero,1800c318 <__alt_data_end+0xf800c318>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1800c420:	e0bffd17 	ldw	r2,-12(fp)
1800c424:	1004d43a 	srli	r2,r2,16
1800c428:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1800c42c:	00001406 	br	1800c480 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1800c430:	e0bffc17 	ldw	r2,-16(fp)
1800c434:	e0fffb17 	ldw	r3,-20(fp)
1800c438:	18c00d17 	ldw	r3,52(r3)
1800c43c:	e13ffb17 	ldw	r4,-20(fp)
1800c440:	20c7883a 	add	r3,r4,r3
1800c444:	18c20e04 	addi	r3,r3,2104
1800c448:	18c00003 	ldbu	r3,0(r3)
1800c44c:	18c03fcc 	andi	r3,r3,255
1800c450:	18c0201c 	xori	r3,r3,128
1800c454:	18ffe004 	addi	r3,r3,-128
1800c458:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1800c45c:	e0bffb17 	ldw	r2,-20(fp)
1800c460:	10800d17 	ldw	r2,52(r2)
1800c464:	10800044 	addi	r2,r2,1
1800c468:	10c1ffcc 	andi	r3,r2,2047
1800c46c:	e0bffb17 	ldw	r2,-20(fp)
1800c470:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1800c474:	e0bffa17 	ldw	r2,-24(fp)
1800c478:	10bfffc4 	addi	r2,r2,-1
1800c47c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1800c480:	e0bffa17 	ldw	r2,-24(fp)
1800c484:	10000526 	beq	r2,zero,1800c49c <altera_avalon_jtag_uart_irq+0x1a8>
1800c488:	e0bffb17 	ldw	r2,-20(fp)
1800c48c:	10c00d17 	ldw	r3,52(r2)
1800c490:	e0bffb17 	ldw	r2,-20(fp)
1800c494:	10800c17 	ldw	r2,48(r2)
1800c498:	18bfe51e 	bne	r3,r2,1800c430 <__alt_data_end+0xf800c430>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1800c49c:	e0bffa17 	ldw	r2,-24(fp)
1800c4a0:	103f9d26 	beq	r2,zero,1800c318 <__alt_data_end+0xf800c318>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1800c4a4:	e0bffb17 	ldw	r2,-20(fp)
1800c4a8:	10c00817 	ldw	r3,32(r2)
1800c4ac:	00bfff44 	movi	r2,-3
1800c4b0:	1886703a 	and	r3,r3,r2
1800c4b4:	e0bffb17 	ldw	r2,-20(fp)
1800c4b8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1800c4bc:	e0bffb17 	ldw	r2,-20(fp)
1800c4c0:	10800017 	ldw	r2,0(r2)
1800c4c4:	10800104 	addi	r2,r2,4
1800c4c8:	1007883a 	mov	r3,r2
1800c4cc:	e0bffb17 	ldw	r2,-20(fp)
1800c4d0:	10800817 	ldw	r2,32(r2)
1800c4d4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1800c4d8:	e0bffc17 	ldw	r2,-16(fp)
1800c4dc:	10800104 	addi	r2,r2,4
1800c4e0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1800c4e4:	003f8c06 	br	1800c318 <__alt_data_end+0xf800c318>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1800c4e8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1800c4ec:	0001883a 	nop
1800c4f0:	e037883a 	mov	sp,fp
1800c4f4:	df000017 	ldw	fp,0(sp)
1800c4f8:	dec00104 	addi	sp,sp,4
1800c4fc:	f800283a 	ret

1800c500 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1800c500:	defff804 	addi	sp,sp,-32
1800c504:	df000715 	stw	fp,28(sp)
1800c508:	df000704 	addi	fp,sp,28
1800c50c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1800c510:	e0bffb17 	ldw	r2,-20(fp)
1800c514:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1800c518:	e0bff917 	ldw	r2,-28(fp)
1800c51c:	10800017 	ldw	r2,0(r2)
1800c520:	10800104 	addi	r2,r2,4
1800c524:	10800037 	ldwio	r2,0(r2)
1800c528:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1800c52c:	e0bffa17 	ldw	r2,-24(fp)
1800c530:	1081000c 	andi	r2,r2,1024
1800c534:	10000b26 	beq	r2,zero,1800c564 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1800c538:	e0bff917 	ldw	r2,-28(fp)
1800c53c:	10800017 	ldw	r2,0(r2)
1800c540:	10800104 	addi	r2,r2,4
1800c544:	1007883a 	mov	r3,r2
1800c548:	e0bff917 	ldw	r2,-28(fp)
1800c54c:	10800817 	ldw	r2,32(r2)
1800c550:	10810014 	ori	r2,r2,1024
1800c554:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1800c558:	e0bff917 	ldw	r2,-28(fp)
1800c55c:	10000915 	stw	zero,36(r2)
1800c560:	00000a06 	br	1800c58c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1800c564:	e0bff917 	ldw	r2,-28(fp)
1800c568:	10c00917 	ldw	r3,36(r2)
1800c56c:	00a00034 	movhi	r2,32768
1800c570:	10bfff04 	addi	r2,r2,-4
1800c574:	10c00536 	bltu	r2,r3,1800c58c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1800c578:	e0bff917 	ldw	r2,-28(fp)
1800c57c:	10800917 	ldw	r2,36(r2)
1800c580:	10c00044 	addi	r3,r2,1
1800c584:	e0bff917 	ldw	r2,-28(fp)
1800c588:	10c00915 	stw	r3,36(r2)
1800c58c:	d0a7ee17 	ldw	r2,-24648(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1800c590:	e037883a 	mov	sp,fp
1800c594:	df000017 	ldw	fp,0(sp)
1800c598:	dec00104 	addi	sp,sp,4
1800c59c:	f800283a 	ret

1800c5a0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1800c5a0:	defffd04 	addi	sp,sp,-12
1800c5a4:	df000215 	stw	fp,8(sp)
1800c5a8:	df000204 	addi	fp,sp,8
1800c5ac:	e13ffe15 	stw	r4,-8(fp)
1800c5b0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1800c5b4:	00000506 	br	1800c5cc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1800c5b8:	e0bfff17 	ldw	r2,-4(fp)
1800c5bc:	1090000c 	andi	r2,r2,16384
1800c5c0:	10000226 	beq	r2,zero,1800c5cc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1800c5c4:	00bffd44 	movi	r2,-11
1800c5c8:	00000b06 	br	1800c5f8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1800c5cc:	e0bffe17 	ldw	r2,-8(fp)
1800c5d0:	10c00d17 	ldw	r3,52(r2)
1800c5d4:	e0bffe17 	ldw	r2,-8(fp)
1800c5d8:	10800c17 	ldw	r2,48(r2)
1800c5dc:	18800526 	beq	r3,r2,1800c5f4 <altera_avalon_jtag_uart_close+0x54>
1800c5e0:	e0bffe17 	ldw	r2,-8(fp)
1800c5e4:	10c00917 	ldw	r3,36(r2)
1800c5e8:	e0bffe17 	ldw	r2,-8(fp)
1800c5ec:	10800117 	ldw	r2,4(r2)
1800c5f0:	18bff136 	bltu	r3,r2,1800c5b8 <__alt_data_end+0xf800c5b8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1800c5f4:	0005883a 	mov	r2,zero
}
1800c5f8:	e037883a 	mov	sp,fp
1800c5fc:	df000017 	ldw	fp,0(sp)
1800c600:	dec00104 	addi	sp,sp,4
1800c604:	f800283a 	ret

1800c608 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1800c608:	defffa04 	addi	sp,sp,-24
1800c60c:	df000515 	stw	fp,20(sp)
1800c610:	df000504 	addi	fp,sp,20
1800c614:	e13ffd15 	stw	r4,-12(fp)
1800c618:	e17ffe15 	stw	r5,-8(fp)
1800c61c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1800c620:	00bff9c4 	movi	r2,-25
1800c624:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1800c628:	e0bffe17 	ldw	r2,-8(fp)
1800c62c:	10da8060 	cmpeqi	r3,r2,27137
1800c630:	1800031e 	bne	r3,zero,1800c640 <altera_avalon_jtag_uart_ioctl+0x38>
1800c634:	109a80a0 	cmpeqi	r2,r2,27138
1800c638:	1000181e 	bne	r2,zero,1800c69c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1800c63c:	00002906 	br	1800c6e4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1800c640:	e0bffd17 	ldw	r2,-12(fp)
1800c644:	10c00117 	ldw	r3,4(r2)
1800c648:	00a00034 	movhi	r2,32768
1800c64c:	10bfffc4 	addi	r2,r2,-1
1800c650:	18802126 	beq	r3,r2,1800c6d8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1800c654:	e0bfff17 	ldw	r2,-4(fp)
1800c658:	10800017 	ldw	r2,0(r2)
1800c65c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1800c660:	e0bffc17 	ldw	r2,-16(fp)
1800c664:	10800090 	cmplti	r2,r2,2
1800c668:	1000061e 	bne	r2,zero,1800c684 <altera_avalon_jtag_uart_ioctl+0x7c>
1800c66c:	e0fffc17 	ldw	r3,-16(fp)
1800c670:	00a00034 	movhi	r2,32768
1800c674:	10bfffc4 	addi	r2,r2,-1
1800c678:	18800226 	beq	r3,r2,1800c684 <altera_avalon_jtag_uart_ioctl+0x7c>
1800c67c:	e0bffc17 	ldw	r2,-16(fp)
1800c680:	00000206 	br	1800c68c <altera_avalon_jtag_uart_ioctl+0x84>
1800c684:	00a00034 	movhi	r2,32768
1800c688:	10bfff84 	addi	r2,r2,-2
1800c68c:	e0fffd17 	ldw	r3,-12(fp)
1800c690:	18800115 	stw	r2,4(r3)
      rc = 0;
1800c694:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1800c698:	00000f06 	br	1800c6d8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1800c69c:	e0bffd17 	ldw	r2,-12(fp)
1800c6a0:	10c00117 	ldw	r3,4(r2)
1800c6a4:	00a00034 	movhi	r2,32768
1800c6a8:	10bfffc4 	addi	r2,r2,-1
1800c6ac:	18800c26 	beq	r3,r2,1800c6e0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1800c6b0:	e0bffd17 	ldw	r2,-12(fp)
1800c6b4:	10c00917 	ldw	r3,36(r2)
1800c6b8:	e0bffd17 	ldw	r2,-12(fp)
1800c6bc:	10800117 	ldw	r2,4(r2)
1800c6c0:	1885803a 	cmpltu	r2,r3,r2
1800c6c4:	10c03fcc 	andi	r3,r2,255
1800c6c8:	e0bfff17 	ldw	r2,-4(fp)
1800c6cc:	10c00015 	stw	r3,0(r2)
      rc = 0;
1800c6d0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1800c6d4:	00000206 	br	1800c6e0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1800c6d8:	0001883a 	nop
1800c6dc:	00000106 	br	1800c6e4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1800c6e0:	0001883a 	nop

  default:
    break;
  }

  return rc;
1800c6e4:	e0bffb17 	ldw	r2,-20(fp)
}
1800c6e8:	e037883a 	mov	sp,fp
1800c6ec:	df000017 	ldw	fp,0(sp)
1800c6f0:	dec00104 	addi	sp,sp,4
1800c6f4:	f800283a 	ret

1800c6f8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1800c6f8:	defff304 	addi	sp,sp,-52
1800c6fc:	dfc00c15 	stw	ra,48(sp)
1800c700:	df000b15 	stw	fp,44(sp)
1800c704:	df000b04 	addi	fp,sp,44
1800c708:	e13ffc15 	stw	r4,-16(fp)
1800c70c:	e17ffd15 	stw	r5,-12(fp)
1800c710:	e1bffe15 	stw	r6,-8(fp)
1800c714:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1800c718:	e0bffd17 	ldw	r2,-12(fp)
1800c71c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1800c720:	00004706 	br	1800c840 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1800c724:	e0bffc17 	ldw	r2,-16(fp)
1800c728:	10800a17 	ldw	r2,40(r2)
1800c72c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1800c730:	e0bffc17 	ldw	r2,-16(fp)
1800c734:	10800b17 	ldw	r2,44(r2)
1800c738:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1800c73c:	e0fff717 	ldw	r3,-36(fp)
1800c740:	e0bff817 	ldw	r2,-32(fp)
1800c744:	18800536 	bltu	r3,r2,1800c75c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1800c748:	e0fff717 	ldw	r3,-36(fp)
1800c74c:	e0bff817 	ldw	r2,-32(fp)
1800c750:	1885c83a 	sub	r2,r3,r2
1800c754:	e0bff615 	stw	r2,-40(fp)
1800c758:	00000406 	br	1800c76c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1800c75c:	00c20004 	movi	r3,2048
1800c760:	e0bff817 	ldw	r2,-32(fp)
1800c764:	1885c83a 	sub	r2,r3,r2
1800c768:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1800c76c:	e0bff617 	ldw	r2,-40(fp)
1800c770:	10001e26 	beq	r2,zero,1800c7ec <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1800c774:	e0fffe17 	ldw	r3,-8(fp)
1800c778:	e0bff617 	ldw	r2,-40(fp)
1800c77c:	1880022e 	bgeu	r3,r2,1800c788 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1800c780:	e0bffe17 	ldw	r2,-8(fp)
1800c784:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1800c788:	e0bffc17 	ldw	r2,-16(fp)
1800c78c:	10c00e04 	addi	r3,r2,56
1800c790:	e0bff817 	ldw	r2,-32(fp)
1800c794:	1885883a 	add	r2,r3,r2
1800c798:	e1bff617 	ldw	r6,-40(fp)
1800c79c:	100b883a 	mov	r5,r2
1800c7a0:	e13ff517 	ldw	r4,-44(fp)
1800c7a4:	800520c0 	call	1800520c <memcpy>
      ptr   += n;
1800c7a8:	e0fff517 	ldw	r3,-44(fp)
1800c7ac:	e0bff617 	ldw	r2,-40(fp)
1800c7b0:	1885883a 	add	r2,r3,r2
1800c7b4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1800c7b8:	e0fffe17 	ldw	r3,-8(fp)
1800c7bc:	e0bff617 	ldw	r2,-40(fp)
1800c7c0:	1885c83a 	sub	r2,r3,r2
1800c7c4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1800c7c8:	e0fff817 	ldw	r3,-32(fp)
1800c7cc:	e0bff617 	ldw	r2,-40(fp)
1800c7d0:	1885883a 	add	r2,r3,r2
1800c7d4:	10c1ffcc 	andi	r3,r2,2047
1800c7d8:	e0bffc17 	ldw	r2,-16(fp)
1800c7dc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1800c7e0:	e0bffe17 	ldw	r2,-8(fp)
1800c7e4:	00bfcf16 	blt	zero,r2,1800c724 <__alt_data_end+0xf800c724>
1800c7e8:	00000106 	br	1800c7f0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1800c7ec:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1800c7f0:	e0fff517 	ldw	r3,-44(fp)
1800c7f4:	e0bffd17 	ldw	r2,-12(fp)
1800c7f8:	1880141e 	bne	r3,r2,1800c84c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1800c7fc:	e0bfff17 	ldw	r2,-4(fp)
1800c800:	1090000c 	andi	r2,r2,16384
1800c804:	1000131e 	bne	r2,zero,1800c854 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1800c808:	0001883a 	nop
1800c80c:	e0bffc17 	ldw	r2,-16(fp)
1800c810:	10c00a17 	ldw	r3,40(r2)
1800c814:	e0bff717 	ldw	r2,-36(fp)
1800c818:	1880051e 	bne	r3,r2,1800c830 <altera_avalon_jtag_uart_read+0x138>
1800c81c:	e0bffc17 	ldw	r2,-16(fp)
1800c820:	10c00917 	ldw	r3,36(r2)
1800c824:	e0bffc17 	ldw	r2,-16(fp)
1800c828:	10800117 	ldw	r2,4(r2)
1800c82c:	18bff736 	bltu	r3,r2,1800c80c <__alt_data_end+0xf800c80c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1800c830:	e0bffc17 	ldw	r2,-16(fp)
1800c834:	10c00a17 	ldw	r3,40(r2)
1800c838:	e0bff717 	ldw	r2,-36(fp)
1800c83c:	18800726 	beq	r3,r2,1800c85c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1800c840:	e0bffe17 	ldw	r2,-8(fp)
1800c844:	00bfb716 	blt	zero,r2,1800c724 <__alt_data_end+0xf800c724>
1800c848:	00000506 	br	1800c860 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1800c84c:	0001883a 	nop
1800c850:	00000306 	br	1800c860 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1800c854:	0001883a 	nop
1800c858:	00000106 	br	1800c860 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1800c85c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1800c860:	e0fff517 	ldw	r3,-44(fp)
1800c864:	e0bffd17 	ldw	r2,-12(fp)
1800c868:	18801826 	beq	r3,r2,1800c8cc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800c86c:	0005303a 	rdctl	r2,status
1800c870:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800c874:	e0fffb17 	ldw	r3,-20(fp)
1800c878:	00bfff84 	movi	r2,-2
1800c87c:	1884703a 	and	r2,r3,r2
1800c880:	1001703a 	wrctl	status,r2
  
  return context;
1800c884:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1800c888:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1800c88c:	e0bffc17 	ldw	r2,-16(fp)
1800c890:	10800817 	ldw	r2,32(r2)
1800c894:	10c00054 	ori	r3,r2,1
1800c898:	e0bffc17 	ldw	r2,-16(fp)
1800c89c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1800c8a0:	e0bffc17 	ldw	r2,-16(fp)
1800c8a4:	10800017 	ldw	r2,0(r2)
1800c8a8:	10800104 	addi	r2,r2,4
1800c8ac:	1007883a 	mov	r3,r2
1800c8b0:	e0bffc17 	ldw	r2,-16(fp)
1800c8b4:	10800817 	ldw	r2,32(r2)
1800c8b8:	18800035 	stwio	r2,0(r3)
1800c8bc:	e0bffa17 	ldw	r2,-24(fp)
1800c8c0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800c8c4:	e0bff917 	ldw	r2,-28(fp)
1800c8c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1800c8cc:	e0fff517 	ldw	r3,-44(fp)
1800c8d0:	e0bffd17 	ldw	r2,-12(fp)
1800c8d4:	18800426 	beq	r3,r2,1800c8e8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1800c8d8:	e0fff517 	ldw	r3,-44(fp)
1800c8dc:	e0bffd17 	ldw	r2,-12(fp)
1800c8e0:	1885c83a 	sub	r2,r3,r2
1800c8e4:	00000606 	br	1800c900 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1800c8e8:	e0bfff17 	ldw	r2,-4(fp)
1800c8ec:	1090000c 	andi	r2,r2,16384
1800c8f0:	10000226 	beq	r2,zero,1800c8fc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1800c8f4:	00bffd44 	movi	r2,-11
1800c8f8:	00000106 	br	1800c900 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1800c8fc:	00bffec4 	movi	r2,-5
}
1800c900:	e037883a 	mov	sp,fp
1800c904:	dfc00117 	ldw	ra,4(sp)
1800c908:	df000017 	ldw	fp,0(sp)
1800c90c:	dec00204 	addi	sp,sp,8
1800c910:	f800283a 	ret

1800c914 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1800c914:	defff304 	addi	sp,sp,-52
1800c918:	dfc00c15 	stw	ra,48(sp)
1800c91c:	df000b15 	stw	fp,44(sp)
1800c920:	df000b04 	addi	fp,sp,44
1800c924:	e13ffc15 	stw	r4,-16(fp)
1800c928:	e17ffd15 	stw	r5,-12(fp)
1800c92c:	e1bffe15 	stw	r6,-8(fp)
1800c930:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1800c934:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1800c938:	e0bffd17 	ldw	r2,-12(fp)
1800c93c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1800c940:	00003706 	br	1800ca20 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1800c944:	e0bffc17 	ldw	r2,-16(fp)
1800c948:	10800c17 	ldw	r2,48(r2)
1800c94c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1800c950:	e0bffc17 	ldw	r2,-16(fp)
1800c954:	10800d17 	ldw	r2,52(r2)
1800c958:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1800c95c:	e0fff917 	ldw	r3,-28(fp)
1800c960:	e0bff517 	ldw	r2,-44(fp)
1800c964:	1880062e 	bgeu	r3,r2,1800c980 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1800c968:	e0fff517 	ldw	r3,-44(fp)
1800c96c:	e0bff917 	ldw	r2,-28(fp)
1800c970:	1885c83a 	sub	r2,r3,r2
1800c974:	10bfffc4 	addi	r2,r2,-1
1800c978:	e0bff615 	stw	r2,-40(fp)
1800c97c:	00000b06 	br	1800c9ac <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1800c980:	e0bff517 	ldw	r2,-44(fp)
1800c984:	10000526 	beq	r2,zero,1800c99c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1800c988:	00c20004 	movi	r3,2048
1800c98c:	e0bff917 	ldw	r2,-28(fp)
1800c990:	1885c83a 	sub	r2,r3,r2
1800c994:	e0bff615 	stw	r2,-40(fp)
1800c998:	00000406 	br	1800c9ac <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1800c99c:	00c1ffc4 	movi	r3,2047
1800c9a0:	e0bff917 	ldw	r2,-28(fp)
1800c9a4:	1885c83a 	sub	r2,r3,r2
1800c9a8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1800c9ac:	e0bff617 	ldw	r2,-40(fp)
1800c9b0:	10001e26 	beq	r2,zero,1800ca2c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1800c9b4:	e0fffe17 	ldw	r3,-8(fp)
1800c9b8:	e0bff617 	ldw	r2,-40(fp)
1800c9bc:	1880022e 	bgeu	r3,r2,1800c9c8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1800c9c0:	e0bffe17 	ldw	r2,-8(fp)
1800c9c4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1800c9c8:	e0bffc17 	ldw	r2,-16(fp)
1800c9cc:	10c20e04 	addi	r3,r2,2104
1800c9d0:	e0bff917 	ldw	r2,-28(fp)
1800c9d4:	1885883a 	add	r2,r3,r2
1800c9d8:	e1bff617 	ldw	r6,-40(fp)
1800c9dc:	e17ffd17 	ldw	r5,-12(fp)
1800c9e0:	1009883a 	mov	r4,r2
1800c9e4:	800520c0 	call	1800520c <memcpy>
      ptr   += n;
1800c9e8:	e0fffd17 	ldw	r3,-12(fp)
1800c9ec:	e0bff617 	ldw	r2,-40(fp)
1800c9f0:	1885883a 	add	r2,r3,r2
1800c9f4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1800c9f8:	e0fffe17 	ldw	r3,-8(fp)
1800c9fc:	e0bff617 	ldw	r2,-40(fp)
1800ca00:	1885c83a 	sub	r2,r3,r2
1800ca04:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1800ca08:	e0fff917 	ldw	r3,-28(fp)
1800ca0c:	e0bff617 	ldw	r2,-40(fp)
1800ca10:	1885883a 	add	r2,r3,r2
1800ca14:	10c1ffcc 	andi	r3,r2,2047
1800ca18:	e0bffc17 	ldw	r2,-16(fp)
1800ca1c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1800ca20:	e0bffe17 	ldw	r2,-8(fp)
1800ca24:	00bfc716 	blt	zero,r2,1800c944 <__alt_data_end+0xf800c944>
1800ca28:	00000106 	br	1800ca30 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1800ca2c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800ca30:	0005303a 	rdctl	r2,status
1800ca34:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800ca38:	e0fffb17 	ldw	r3,-20(fp)
1800ca3c:	00bfff84 	movi	r2,-2
1800ca40:	1884703a 	and	r2,r3,r2
1800ca44:	1001703a 	wrctl	status,r2
  
  return context;
1800ca48:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1800ca4c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1800ca50:	e0bffc17 	ldw	r2,-16(fp)
1800ca54:	10800817 	ldw	r2,32(r2)
1800ca58:	10c00094 	ori	r3,r2,2
1800ca5c:	e0bffc17 	ldw	r2,-16(fp)
1800ca60:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1800ca64:	e0bffc17 	ldw	r2,-16(fp)
1800ca68:	10800017 	ldw	r2,0(r2)
1800ca6c:	10800104 	addi	r2,r2,4
1800ca70:	1007883a 	mov	r3,r2
1800ca74:	e0bffc17 	ldw	r2,-16(fp)
1800ca78:	10800817 	ldw	r2,32(r2)
1800ca7c:	18800035 	stwio	r2,0(r3)
1800ca80:	e0bffa17 	ldw	r2,-24(fp)
1800ca84:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800ca88:	e0bff817 	ldw	r2,-32(fp)
1800ca8c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1800ca90:	e0bffe17 	ldw	r2,-8(fp)
1800ca94:	0080100e 	bge	zero,r2,1800cad8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1800ca98:	e0bfff17 	ldw	r2,-4(fp)
1800ca9c:	1090000c 	andi	r2,r2,16384
1800caa0:	1000101e 	bne	r2,zero,1800cae4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1800caa4:	0001883a 	nop
1800caa8:	e0bffc17 	ldw	r2,-16(fp)
1800caac:	10c00d17 	ldw	r3,52(r2)
1800cab0:	e0bff517 	ldw	r2,-44(fp)
1800cab4:	1880051e 	bne	r3,r2,1800cacc <altera_avalon_jtag_uart_write+0x1b8>
1800cab8:	e0bffc17 	ldw	r2,-16(fp)
1800cabc:	10c00917 	ldw	r3,36(r2)
1800cac0:	e0bffc17 	ldw	r2,-16(fp)
1800cac4:	10800117 	ldw	r2,4(r2)
1800cac8:	18bff736 	bltu	r3,r2,1800caa8 <__alt_data_end+0xf800caa8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1800cacc:	e0bffc17 	ldw	r2,-16(fp)
1800cad0:	10800917 	ldw	r2,36(r2)
1800cad4:	1000051e 	bne	r2,zero,1800caec <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1800cad8:	e0bffe17 	ldw	r2,-8(fp)
1800cadc:	00bfd016 	blt	zero,r2,1800ca20 <__alt_data_end+0xf800ca20>
1800cae0:	00000306 	br	1800caf0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1800cae4:	0001883a 	nop
1800cae8:	00000106 	br	1800caf0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1800caec:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1800caf0:	e0fffd17 	ldw	r3,-12(fp)
1800caf4:	e0bff717 	ldw	r2,-36(fp)
1800caf8:	18800426 	beq	r3,r2,1800cb0c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1800cafc:	e0fffd17 	ldw	r3,-12(fp)
1800cb00:	e0bff717 	ldw	r2,-36(fp)
1800cb04:	1885c83a 	sub	r2,r3,r2
1800cb08:	00000606 	br	1800cb24 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1800cb0c:	e0bfff17 	ldw	r2,-4(fp)
1800cb10:	1090000c 	andi	r2,r2,16384
1800cb14:	10000226 	beq	r2,zero,1800cb20 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1800cb18:	00bffd44 	movi	r2,-11
1800cb1c:	00000106 	br	1800cb24 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1800cb20:	00bffec4 	movi	r2,-5
}
1800cb24:	e037883a 	mov	sp,fp
1800cb28:	dfc00117 	ldw	ra,4(sp)
1800cb2c:	df000017 	ldw	fp,0(sp)
1800cb30:	dec00204 	addi	sp,sp,8
1800cb34:	f800283a 	ret

1800cb38 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1800cb38:	defff504 	addi	sp,sp,-44
1800cb3c:	df000a15 	stw	fp,40(sp)
1800cb40:	df000a04 	addi	fp,sp,40
1800cb44:	e13ffc15 	stw	r4,-16(fp)
1800cb48:	e17ffd15 	stw	r5,-12(fp)
1800cb4c:	e1bffe15 	stw	r6,-8(fp)
1800cb50:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1800cb54:	e03ff615 	stw	zero,-40(fp)
1800cb58:	d0a7ee17 	ldw	r2,-24648(gp)
  
  if (alt_ticks_per_second ())
1800cb5c:	10003c26 	beq	r2,zero,1800cc50 <alt_alarm_start+0x118>
  {
    if (alarm)
1800cb60:	e0bffc17 	ldw	r2,-16(fp)
1800cb64:	10003826 	beq	r2,zero,1800cc48 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1800cb68:	e0bffc17 	ldw	r2,-16(fp)
1800cb6c:	e0fffe17 	ldw	r3,-8(fp)
1800cb70:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1800cb74:	e0bffc17 	ldw	r2,-16(fp)
1800cb78:	e0ffff17 	ldw	r3,-4(fp)
1800cb7c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800cb80:	0005303a 	rdctl	r2,status
1800cb84:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800cb88:	e0fff917 	ldw	r3,-28(fp)
1800cb8c:	00bfff84 	movi	r2,-2
1800cb90:	1884703a 	and	r2,r3,r2
1800cb94:	1001703a 	wrctl	status,r2
  
  return context;
1800cb98:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1800cb9c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1800cba0:	d0a7ef17 	ldw	r2,-24644(gp)
      
      current_nticks = alt_nticks();
1800cba4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1800cba8:	e0fffd17 	ldw	r3,-12(fp)
1800cbac:	e0bff617 	ldw	r2,-40(fp)
1800cbb0:	1885883a 	add	r2,r3,r2
1800cbb4:	10c00044 	addi	r3,r2,1
1800cbb8:	e0bffc17 	ldw	r2,-16(fp)
1800cbbc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1800cbc0:	e0bffc17 	ldw	r2,-16(fp)
1800cbc4:	10c00217 	ldw	r3,8(r2)
1800cbc8:	e0bff617 	ldw	r2,-40(fp)
1800cbcc:	1880042e 	bgeu	r3,r2,1800cbe0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1800cbd0:	e0bffc17 	ldw	r2,-16(fp)
1800cbd4:	00c00044 	movi	r3,1
1800cbd8:	10c00405 	stb	r3,16(r2)
1800cbdc:	00000206 	br	1800cbe8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1800cbe0:	e0bffc17 	ldw	r2,-16(fp)
1800cbe4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1800cbe8:	e0bffc17 	ldw	r2,-16(fp)
1800cbec:	d0e01004 	addi	r3,gp,-32704
1800cbf0:	e0fffa15 	stw	r3,-24(fp)
1800cbf4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1800cbf8:	e0bffb17 	ldw	r2,-20(fp)
1800cbfc:	e0fffa17 	ldw	r3,-24(fp)
1800cc00:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1800cc04:	e0bffa17 	ldw	r2,-24(fp)
1800cc08:	10c00017 	ldw	r3,0(r2)
1800cc0c:	e0bffb17 	ldw	r2,-20(fp)
1800cc10:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1800cc14:	e0bffa17 	ldw	r2,-24(fp)
1800cc18:	10800017 	ldw	r2,0(r2)
1800cc1c:	e0fffb17 	ldw	r3,-20(fp)
1800cc20:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1800cc24:	e0bffa17 	ldw	r2,-24(fp)
1800cc28:	e0fffb17 	ldw	r3,-20(fp)
1800cc2c:	10c00015 	stw	r3,0(r2)
1800cc30:	e0bff817 	ldw	r2,-32(fp)
1800cc34:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800cc38:	e0bff717 	ldw	r2,-36(fp)
1800cc3c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1800cc40:	0005883a 	mov	r2,zero
1800cc44:	00000306 	br	1800cc54 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1800cc48:	00bffa84 	movi	r2,-22
1800cc4c:	00000106 	br	1800cc54 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1800cc50:	00bfde84 	movi	r2,-134
  }
}
1800cc54:	e037883a 	mov	sp,fp
1800cc58:	df000017 	ldw	fp,0(sp)
1800cc5c:	dec00104 	addi	sp,sp,4
1800cc60:	f800283a 	ret

1800cc64 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
1800cc64:	defffa04 	addi	sp,sp,-24
1800cc68:	dfc00515 	stw	ra,20(sp)
1800cc6c:	df000415 	stw	fp,16(sp)
1800cc70:	df000404 	addi	fp,sp,16
1800cc74:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
1800cc78:	00800244 	movi	r2,9
1800cc7c:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
1800cc80:	014003f4 	movhi	r5,15
1800cc84:	29509004 	addi	r5,r5,16960
1800cc88:	e13ffd17 	ldw	r4,-12(fp)
1800cc8c:	8000ad40 	call	18000ad4 <__mulsi3>
1800cc90:	100b883a 	mov	r5,r2
1800cc94:	0100bef4 	movhi	r4,763
1800cc98:	213c2004 	addi	r4,r4,-3968
1800cc9c:	8000a180 	call	18000a18 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
1800cca0:	100b883a 	mov	r5,r2
1800cca4:	01200034 	movhi	r4,32768
1800cca8:	213fffc4 	addi	r4,r4,-1
1800ccac:	8000a180 	call	18000a18 <__udivsi3>
1800ccb0:	100b883a 	mov	r5,r2
1800ccb4:	e13fff17 	ldw	r4,-4(fp)
1800ccb8:	8000a180 	call	18000a18 <__udivsi3>
1800ccbc:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
1800ccc0:	e0bffe17 	ldw	r2,-8(fp)
1800ccc4:	10002a26 	beq	r2,zero,1800cd70 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
1800ccc8:	e03ffc15 	stw	zero,-16(fp)
1800cccc:	00001706 	br	1800cd2c <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
1800ccd0:	00a00034 	movhi	r2,32768
1800ccd4:	10bfffc4 	addi	r2,r2,-1
1800ccd8:	10bfffc4 	addi	r2,r2,-1
1800ccdc:	103ffe1e 	bne	r2,zero,1800ccd8 <__alt_data_end+0xf800ccd8>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
1800cce0:	014003f4 	movhi	r5,15
1800cce4:	29509004 	addi	r5,r5,16960
1800cce8:	e13ffd17 	ldw	r4,-12(fp)
1800ccec:	8000ad40 	call	18000ad4 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
1800ccf0:	100b883a 	mov	r5,r2
1800ccf4:	0100bef4 	movhi	r4,763
1800ccf8:	213c2004 	addi	r4,r4,-3968
1800ccfc:	8000a180 	call	18000a18 <__udivsi3>
1800cd00:	100b883a 	mov	r5,r2
1800cd04:	01200034 	movhi	r4,32768
1800cd08:	213fffc4 	addi	r4,r4,-1
1800cd0c:	8000a180 	call	18000a18 <__udivsi3>
1800cd10:	1007883a 	mov	r3,r2
1800cd14:	e0bfff17 	ldw	r2,-4(fp)
1800cd18:	10c5c83a 	sub	r2,r2,r3
1800cd1c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
1800cd20:	e0bffc17 	ldw	r2,-16(fp)
1800cd24:	10800044 	addi	r2,r2,1
1800cd28:	e0bffc15 	stw	r2,-16(fp)
1800cd2c:	e0fffc17 	ldw	r3,-16(fp)
1800cd30:	e0bffe17 	ldw	r2,-8(fp)
1800cd34:	18bfe616 	blt	r3,r2,1800ccd0 <__alt_data_end+0xf800ccd0>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1800cd38:	014003f4 	movhi	r5,15
1800cd3c:	29509004 	addi	r5,r5,16960
1800cd40:	e13ffd17 	ldw	r4,-12(fp)
1800cd44:	8000ad40 	call	18000ad4 <__mulsi3>
1800cd48:	100b883a 	mov	r5,r2
1800cd4c:	0100bef4 	movhi	r4,763
1800cd50:	213c2004 	addi	r4,r4,-3968
1800cd54:	8000a180 	call	18000a18 <__udivsi3>
1800cd58:	e17fff17 	ldw	r5,-4(fp)
1800cd5c:	1009883a 	mov	r4,r2
1800cd60:	8000ad40 	call	18000ad4 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
1800cd64:	10bfffc4 	addi	r2,r2,-1
1800cd68:	103ffe1e 	bne	r2,zero,1800cd64 <__alt_data_end+0xf800cd64>
1800cd6c:	00000d06 	br	1800cda4 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1800cd70:	014003f4 	movhi	r5,15
1800cd74:	29509004 	addi	r5,r5,16960
1800cd78:	e13ffd17 	ldw	r4,-12(fp)
1800cd7c:	8000ad40 	call	18000ad4 <__mulsi3>
1800cd80:	100b883a 	mov	r5,r2
1800cd84:	0100bef4 	movhi	r4,763
1800cd88:	213c2004 	addi	r4,r4,-3968
1800cd8c:	8000a180 	call	18000a18 <__udivsi3>
1800cd90:	e17fff17 	ldw	r5,-4(fp)
1800cd94:	1009883a 	mov	r4,r2
1800cd98:	8000ad40 	call	18000ad4 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
1800cd9c:	10bfffc4 	addi	r2,r2,-1
1800cda0:	00bffe16 	blt	zero,r2,1800cd9c <__alt_data_end+0xf800cd9c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
1800cda4:	0005883a 	mov	r2,zero
}
1800cda8:	e037883a 	mov	sp,fp
1800cdac:	dfc00117 	ldw	ra,4(sp)
1800cdb0:	df000017 	ldw	fp,0(sp)
1800cdb4:	dec00204 	addi	sp,sp,8
1800cdb8:	f800283a 	ret

1800cdbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1800cdbc:	defffe04 	addi	sp,sp,-8
1800cdc0:	dfc00115 	stw	ra,4(sp)
1800cdc4:	df000015 	stw	fp,0(sp)
1800cdc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1800cdcc:	d0a00e17 	ldw	r2,-32712(gp)
1800cdd0:	10000326 	beq	r2,zero,1800cde0 <alt_get_errno+0x24>
1800cdd4:	d0a00e17 	ldw	r2,-32712(gp)
1800cdd8:	103ee83a 	callr	r2
1800cddc:	00000106 	br	1800cde4 <alt_get_errno+0x28>
1800cde0:	d0a7e904 	addi	r2,gp,-24668
}
1800cde4:	e037883a 	mov	sp,fp
1800cde8:	dfc00117 	ldw	ra,4(sp)
1800cdec:	df000017 	ldw	fp,0(sp)
1800cdf0:	dec00204 	addi	sp,sp,8
1800cdf4:	f800283a 	ret

1800cdf8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1800cdf8:	defffb04 	addi	sp,sp,-20
1800cdfc:	dfc00415 	stw	ra,16(sp)
1800ce00:	df000315 	stw	fp,12(sp)
1800ce04:	df000304 	addi	fp,sp,12
1800ce08:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1800ce0c:	e0bfff17 	ldw	r2,-4(fp)
1800ce10:	10000816 	blt	r2,zero,1800ce34 <close+0x3c>
1800ce14:	01400304 	movi	r5,12
1800ce18:	e13fff17 	ldw	r4,-4(fp)
1800ce1c:	8000ad40 	call	18000ad4 <__mulsi3>
1800ce20:	1007883a 	mov	r3,r2
1800ce24:	00860074 	movhi	r2,6145
1800ce28:	10804104 	addi	r2,r2,260
1800ce2c:	1885883a 	add	r2,r3,r2
1800ce30:	00000106 	br	1800ce38 <close+0x40>
1800ce34:	0005883a 	mov	r2,zero
1800ce38:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1800ce3c:	e0bffd17 	ldw	r2,-12(fp)
1800ce40:	10001926 	beq	r2,zero,1800cea8 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1800ce44:	e0bffd17 	ldw	r2,-12(fp)
1800ce48:	10800017 	ldw	r2,0(r2)
1800ce4c:	10800417 	ldw	r2,16(r2)
1800ce50:	10000626 	beq	r2,zero,1800ce6c <close+0x74>
1800ce54:	e0bffd17 	ldw	r2,-12(fp)
1800ce58:	10800017 	ldw	r2,0(r2)
1800ce5c:	10800417 	ldw	r2,16(r2)
1800ce60:	e13ffd17 	ldw	r4,-12(fp)
1800ce64:	103ee83a 	callr	r2
1800ce68:	00000106 	br	1800ce70 <close+0x78>
1800ce6c:	0005883a 	mov	r2,zero
1800ce70:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1800ce74:	e13fff17 	ldw	r4,-4(fp)
1800ce78:	800d7600 	call	1800d760 <alt_release_fd>
    if (rval < 0)
1800ce7c:	e0bffe17 	ldw	r2,-8(fp)
1800ce80:	1000070e 	bge	r2,zero,1800cea0 <close+0xa8>
    {
      ALT_ERRNO = -rval;
1800ce84:	800cdbc0 	call	1800cdbc <alt_get_errno>
1800ce88:	1007883a 	mov	r3,r2
1800ce8c:	e0bffe17 	ldw	r2,-8(fp)
1800ce90:	0085c83a 	sub	r2,zero,r2
1800ce94:	18800015 	stw	r2,0(r3)
      return -1;
1800ce98:	00bfffc4 	movi	r2,-1
1800ce9c:	00000706 	br	1800cebc <close+0xc4>
    }
    return 0;
1800cea0:	0005883a 	mov	r2,zero
1800cea4:	00000506 	br	1800cebc <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1800cea8:	800cdbc0 	call	1800cdbc <alt_get_errno>
1800ceac:	1007883a 	mov	r3,r2
1800ceb0:	00801444 	movi	r2,81
1800ceb4:	18800015 	stw	r2,0(r3)
    return -1;
1800ceb8:	00bfffc4 	movi	r2,-1
  }
}
1800cebc:	e037883a 	mov	sp,fp
1800cec0:	dfc00117 	ldw	ra,4(sp)
1800cec4:	df000017 	ldw	fp,0(sp)
1800cec8:	dec00204 	addi	sp,sp,8
1800cecc:	f800283a 	ret

1800ced0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1800ced0:	deffff04 	addi	sp,sp,-4
1800ced4:	df000015 	stw	fp,0(sp)
1800ced8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1800cedc:	0001883a 	nop
1800cee0:	e037883a 	mov	sp,fp
1800cee4:	df000017 	ldw	fp,0(sp)
1800cee8:	dec00104 	addi	sp,sp,4
1800ceec:	f800283a 	ret

1800cef0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1800cef0:	defffc04 	addi	sp,sp,-16
1800cef4:	df000315 	stw	fp,12(sp)
1800cef8:	df000304 	addi	fp,sp,12
1800cefc:	e13ffd15 	stw	r4,-12(fp)
1800cf00:	e17ffe15 	stw	r5,-8(fp)
1800cf04:	e1bfff15 	stw	r6,-4(fp)
  return len;
1800cf08:	e0bfff17 	ldw	r2,-4(fp)
}
1800cf0c:	e037883a 	mov	sp,fp
1800cf10:	df000017 	ldw	fp,0(sp)
1800cf14:	dec00104 	addi	sp,sp,4
1800cf18:	f800283a 	ret

1800cf1c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1800cf1c:	defffe04 	addi	sp,sp,-8
1800cf20:	dfc00115 	stw	ra,4(sp)
1800cf24:	df000015 	stw	fp,0(sp)
1800cf28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1800cf2c:	d0a00e17 	ldw	r2,-32712(gp)
1800cf30:	10000326 	beq	r2,zero,1800cf40 <alt_get_errno+0x24>
1800cf34:	d0a00e17 	ldw	r2,-32712(gp)
1800cf38:	103ee83a 	callr	r2
1800cf3c:	00000106 	br	1800cf44 <alt_get_errno+0x28>
1800cf40:	d0a7e904 	addi	r2,gp,-24668
}
1800cf44:	e037883a 	mov	sp,fp
1800cf48:	dfc00117 	ldw	ra,4(sp)
1800cf4c:	df000017 	ldw	fp,0(sp)
1800cf50:	dec00204 	addi	sp,sp,8
1800cf54:	f800283a 	ret

1800cf58 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1800cf58:	defffa04 	addi	sp,sp,-24
1800cf5c:	dfc00515 	stw	ra,20(sp)
1800cf60:	df000415 	stw	fp,16(sp)
1800cf64:	df000404 	addi	fp,sp,16
1800cf68:	e13ffe15 	stw	r4,-8(fp)
1800cf6c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1800cf70:	e0bffe17 	ldw	r2,-8(fp)
1800cf74:	10000326 	beq	r2,zero,1800cf84 <alt_dev_llist_insert+0x2c>
1800cf78:	e0bffe17 	ldw	r2,-8(fp)
1800cf7c:	10800217 	ldw	r2,8(r2)
1800cf80:	1000061e 	bne	r2,zero,1800cf9c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1800cf84:	800cf1c0 	call	1800cf1c <alt_get_errno>
1800cf88:	1007883a 	mov	r3,r2
1800cf8c:	00800584 	movi	r2,22
1800cf90:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1800cf94:	00bffa84 	movi	r2,-22
1800cf98:	00001306 	br	1800cfe8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1800cf9c:	e0bffe17 	ldw	r2,-8(fp)
1800cfa0:	e0ffff17 	ldw	r3,-4(fp)
1800cfa4:	e0fffc15 	stw	r3,-16(fp)
1800cfa8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1800cfac:	e0bffd17 	ldw	r2,-12(fp)
1800cfb0:	e0fffc17 	ldw	r3,-16(fp)
1800cfb4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1800cfb8:	e0bffc17 	ldw	r2,-16(fp)
1800cfbc:	10c00017 	ldw	r3,0(r2)
1800cfc0:	e0bffd17 	ldw	r2,-12(fp)
1800cfc4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1800cfc8:	e0bffc17 	ldw	r2,-16(fp)
1800cfcc:	10800017 	ldw	r2,0(r2)
1800cfd0:	e0fffd17 	ldw	r3,-12(fp)
1800cfd4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1800cfd8:	e0bffc17 	ldw	r2,-16(fp)
1800cfdc:	e0fffd17 	ldw	r3,-12(fp)
1800cfe0:	10c00015 	stw	r3,0(r2)

  return 0;  
1800cfe4:	0005883a 	mov	r2,zero
}
1800cfe8:	e037883a 	mov	sp,fp
1800cfec:	dfc00117 	ldw	ra,4(sp)
1800cff0:	df000017 	ldw	fp,0(sp)
1800cff4:	dec00204 	addi	sp,sp,8
1800cff8:	f800283a 	ret

1800cffc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1800cffc:	defffd04 	addi	sp,sp,-12
1800d000:	dfc00215 	stw	ra,8(sp)
1800d004:	df000115 	stw	fp,4(sp)
1800d008:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1800d00c:	00860074 	movhi	r2,6145
1800d010:	10b80d04 	addi	r2,r2,-8140
1800d014:	e0bfff15 	stw	r2,-4(fp)
1800d018:	00000606 	br	1800d034 <_do_ctors+0x38>
        (*ctor) (); 
1800d01c:	e0bfff17 	ldw	r2,-4(fp)
1800d020:	10800017 	ldw	r2,0(r2)
1800d024:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1800d028:	e0bfff17 	ldw	r2,-4(fp)
1800d02c:	10bfff04 	addi	r2,r2,-4
1800d030:	e0bfff15 	stw	r2,-4(fp)
1800d034:	e0ffff17 	ldw	r3,-4(fp)
1800d038:	00860074 	movhi	r2,6145
1800d03c:	10b80e04 	addi	r2,r2,-8136
1800d040:	18bff62e 	bgeu	r3,r2,1800d01c <__alt_data_end+0xf800d01c>
        (*ctor) (); 
}
1800d044:	0001883a 	nop
1800d048:	e037883a 	mov	sp,fp
1800d04c:	dfc00117 	ldw	ra,4(sp)
1800d050:	df000017 	ldw	fp,0(sp)
1800d054:	dec00204 	addi	sp,sp,8
1800d058:	f800283a 	ret

1800d05c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1800d05c:	defffd04 	addi	sp,sp,-12
1800d060:	dfc00215 	stw	ra,8(sp)
1800d064:	df000115 	stw	fp,4(sp)
1800d068:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1800d06c:	00860074 	movhi	r2,6145
1800d070:	10b80d04 	addi	r2,r2,-8140
1800d074:	e0bfff15 	stw	r2,-4(fp)
1800d078:	00000606 	br	1800d094 <_do_dtors+0x38>
        (*dtor) (); 
1800d07c:	e0bfff17 	ldw	r2,-4(fp)
1800d080:	10800017 	ldw	r2,0(r2)
1800d084:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1800d088:	e0bfff17 	ldw	r2,-4(fp)
1800d08c:	10bfff04 	addi	r2,r2,-4
1800d090:	e0bfff15 	stw	r2,-4(fp)
1800d094:	e0ffff17 	ldw	r3,-4(fp)
1800d098:	00860074 	movhi	r2,6145
1800d09c:	10b80e04 	addi	r2,r2,-8136
1800d0a0:	18bff62e 	bgeu	r3,r2,1800d07c <__alt_data_end+0xf800d07c>
        (*dtor) (); 
}
1800d0a4:	0001883a 	nop
1800d0a8:	e037883a 	mov	sp,fp
1800d0ac:	dfc00117 	ldw	ra,4(sp)
1800d0b0:	df000017 	ldw	fp,0(sp)
1800d0b4:	dec00204 	addi	sp,sp,8
1800d0b8:	f800283a 	ret

1800d0bc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1800d0bc:	deffff04 	addi	sp,sp,-4
1800d0c0:	df000015 	stw	fp,0(sp)
1800d0c4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1800d0c8:	0001883a 	nop
1800d0cc:	e037883a 	mov	sp,fp
1800d0d0:	df000017 	ldw	fp,0(sp)
1800d0d4:	dec00104 	addi	sp,sp,4
1800d0d8:	f800283a 	ret

1800d0dc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1800d0dc:	defff904 	addi	sp,sp,-28
1800d0e0:	dfc00615 	stw	ra,24(sp)
1800d0e4:	df000515 	stw	fp,20(sp)
1800d0e8:	df000504 	addi	fp,sp,20
1800d0ec:	e13ffc15 	stw	r4,-16(fp)
1800d0f0:	e17ffd15 	stw	r5,-12(fp)
1800d0f4:	e1bffe15 	stw	r6,-8(fp)
1800d0f8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1800d0fc:	e0800217 	ldw	r2,8(fp)
1800d100:	d8800015 	stw	r2,0(sp)
1800d104:	e1ffff17 	ldw	r7,-4(fp)
1800d108:	e1bffe17 	ldw	r6,-8(fp)
1800d10c:	e17ffd17 	ldw	r5,-12(fp)
1800d110:	e13ffc17 	ldw	r4,-16(fp)
1800d114:	800d28c0 	call	1800d28c <alt_iic_isr_register>
}  
1800d118:	e037883a 	mov	sp,fp
1800d11c:	dfc00117 	ldw	ra,4(sp)
1800d120:	df000017 	ldw	fp,0(sp)
1800d124:	dec00204 	addi	sp,sp,8
1800d128:	f800283a 	ret

1800d12c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1800d12c:	defff904 	addi	sp,sp,-28
1800d130:	df000615 	stw	fp,24(sp)
1800d134:	df000604 	addi	fp,sp,24
1800d138:	e13ffe15 	stw	r4,-8(fp)
1800d13c:	e17fff15 	stw	r5,-4(fp)
1800d140:	e0bfff17 	ldw	r2,-4(fp)
1800d144:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800d148:	0005303a 	rdctl	r2,status
1800d14c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800d150:	e0fffb17 	ldw	r3,-20(fp)
1800d154:	00bfff84 	movi	r2,-2
1800d158:	1884703a 	and	r2,r3,r2
1800d15c:	1001703a 	wrctl	status,r2
  
  return context;
1800d160:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1800d164:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1800d168:	00c00044 	movi	r3,1
1800d16c:	e0bffa17 	ldw	r2,-24(fp)
1800d170:	1884983a 	sll	r2,r3,r2
1800d174:	1007883a 	mov	r3,r2
1800d178:	d0a7ed17 	ldw	r2,-24652(gp)
1800d17c:	1884b03a 	or	r2,r3,r2
1800d180:	d0a7ed15 	stw	r2,-24652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1800d184:	d0a7ed17 	ldw	r2,-24652(gp)
1800d188:	100170fa 	wrctl	ienable,r2
1800d18c:	e0bffc17 	ldw	r2,-16(fp)
1800d190:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800d194:	e0bffd17 	ldw	r2,-12(fp)
1800d198:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1800d19c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1800d1a0:	0001883a 	nop
}
1800d1a4:	e037883a 	mov	sp,fp
1800d1a8:	df000017 	ldw	fp,0(sp)
1800d1ac:	dec00104 	addi	sp,sp,4
1800d1b0:	f800283a 	ret

1800d1b4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1800d1b4:	defff904 	addi	sp,sp,-28
1800d1b8:	df000615 	stw	fp,24(sp)
1800d1bc:	df000604 	addi	fp,sp,24
1800d1c0:	e13ffe15 	stw	r4,-8(fp)
1800d1c4:	e17fff15 	stw	r5,-4(fp)
1800d1c8:	e0bfff17 	ldw	r2,-4(fp)
1800d1cc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800d1d0:	0005303a 	rdctl	r2,status
1800d1d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800d1d8:	e0fffb17 	ldw	r3,-20(fp)
1800d1dc:	00bfff84 	movi	r2,-2
1800d1e0:	1884703a 	and	r2,r3,r2
1800d1e4:	1001703a 	wrctl	status,r2
  
  return context;
1800d1e8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1800d1ec:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1800d1f0:	00c00044 	movi	r3,1
1800d1f4:	e0bffa17 	ldw	r2,-24(fp)
1800d1f8:	1884983a 	sll	r2,r3,r2
1800d1fc:	0084303a 	nor	r2,zero,r2
1800d200:	1007883a 	mov	r3,r2
1800d204:	d0a7ed17 	ldw	r2,-24652(gp)
1800d208:	1884703a 	and	r2,r3,r2
1800d20c:	d0a7ed15 	stw	r2,-24652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1800d210:	d0a7ed17 	ldw	r2,-24652(gp)
1800d214:	100170fa 	wrctl	ienable,r2
1800d218:	e0bffc17 	ldw	r2,-16(fp)
1800d21c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800d220:	e0bffd17 	ldw	r2,-12(fp)
1800d224:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1800d228:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1800d22c:	0001883a 	nop
}
1800d230:	e037883a 	mov	sp,fp
1800d234:	df000017 	ldw	fp,0(sp)
1800d238:	dec00104 	addi	sp,sp,4
1800d23c:	f800283a 	ret

1800d240 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1800d240:	defffc04 	addi	sp,sp,-16
1800d244:	df000315 	stw	fp,12(sp)
1800d248:	df000304 	addi	fp,sp,12
1800d24c:	e13ffe15 	stw	r4,-8(fp)
1800d250:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1800d254:	000530fa 	rdctl	r2,ienable
1800d258:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1800d25c:	00c00044 	movi	r3,1
1800d260:	e0bfff17 	ldw	r2,-4(fp)
1800d264:	1884983a 	sll	r2,r3,r2
1800d268:	1007883a 	mov	r3,r2
1800d26c:	e0bffd17 	ldw	r2,-12(fp)
1800d270:	1884703a 	and	r2,r3,r2
1800d274:	1004c03a 	cmpne	r2,r2,zero
1800d278:	10803fcc 	andi	r2,r2,255
}
1800d27c:	e037883a 	mov	sp,fp
1800d280:	df000017 	ldw	fp,0(sp)
1800d284:	dec00104 	addi	sp,sp,4
1800d288:	f800283a 	ret

1800d28c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1800d28c:	defff504 	addi	sp,sp,-44
1800d290:	dfc00a15 	stw	ra,40(sp)
1800d294:	df000915 	stw	fp,36(sp)
1800d298:	df000904 	addi	fp,sp,36
1800d29c:	e13ffc15 	stw	r4,-16(fp)
1800d2a0:	e17ffd15 	stw	r5,-12(fp)
1800d2a4:	e1bffe15 	stw	r6,-8(fp)
1800d2a8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1800d2ac:	00bffa84 	movi	r2,-22
1800d2b0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1800d2b4:	e0bffd17 	ldw	r2,-12(fp)
1800d2b8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1800d2bc:	e0bff817 	ldw	r2,-32(fp)
1800d2c0:	10800808 	cmpgei	r2,r2,32
1800d2c4:	1000271e 	bne	r2,zero,1800d364 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800d2c8:	0005303a 	rdctl	r2,status
1800d2cc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800d2d0:	e0fffb17 	ldw	r3,-20(fp)
1800d2d4:	00bfff84 	movi	r2,-2
1800d2d8:	1884703a 	and	r2,r3,r2
1800d2dc:	1001703a 	wrctl	status,r2
  
  return context;
1800d2e0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1800d2e4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1800d2e8:	00860074 	movhi	r2,6145
1800d2ec:	10889c04 	addi	r2,r2,8816
1800d2f0:	e0fff817 	ldw	r3,-32(fp)
1800d2f4:	180690fa 	slli	r3,r3,3
1800d2f8:	10c5883a 	add	r2,r2,r3
1800d2fc:	e0fffe17 	ldw	r3,-8(fp)
1800d300:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1800d304:	00860074 	movhi	r2,6145
1800d308:	10889c04 	addi	r2,r2,8816
1800d30c:	e0fff817 	ldw	r3,-32(fp)
1800d310:	180690fa 	slli	r3,r3,3
1800d314:	10c5883a 	add	r2,r2,r3
1800d318:	10800104 	addi	r2,r2,4
1800d31c:	e0ffff17 	ldw	r3,-4(fp)
1800d320:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1800d324:	e0bffe17 	ldw	r2,-8(fp)
1800d328:	10000526 	beq	r2,zero,1800d340 <alt_iic_isr_register+0xb4>
1800d32c:	e0bff817 	ldw	r2,-32(fp)
1800d330:	100b883a 	mov	r5,r2
1800d334:	e13ffc17 	ldw	r4,-16(fp)
1800d338:	800d12c0 	call	1800d12c <alt_ic_irq_enable>
1800d33c:	00000406 	br	1800d350 <alt_iic_isr_register+0xc4>
1800d340:	e0bff817 	ldw	r2,-32(fp)
1800d344:	100b883a 	mov	r5,r2
1800d348:	e13ffc17 	ldw	r4,-16(fp)
1800d34c:	800d1b40 	call	1800d1b4 <alt_ic_irq_disable>
1800d350:	e0bff715 	stw	r2,-36(fp)
1800d354:	e0bffa17 	ldw	r2,-24(fp)
1800d358:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800d35c:	e0bff917 	ldw	r2,-28(fp)
1800d360:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1800d364:	e0bff717 	ldw	r2,-36(fp)
}
1800d368:	e037883a 	mov	sp,fp
1800d36c:	dfc00117 	ldw	ra,4(sp)
1800d370:	df000017 	ldw	fp,0(sp)
1800d374:	dec00204 	addi	sp,sp,8
1800d378:	f800283a 	ret

1800d37c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1800d37c:	defff804 	addi	sp,sp,-32
1800d380:	dfc00715 	stw	ra,28(sp)
1800d384:	df000615 	stw	fp,24(sp)
1800d388:	dc000515 	stw	r16,20(sp)
1800d38c:	df000604 	addi	fp,sp,24
1800d390:	e13ffb15 	stw	r4,-20(fp)
1800d394:	e17ffc15 	stw	r5,-16(fp)
1800d398:	e1bffd15 	stw	r6,-12(fp)
1800d39c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1800d3a0:	e1bffe17 	ldw	r6,-8(fp)
1800d3a4:	e17ffd17 	ldw	r5,-12(fp)
1800d3a8:	e13ffc17 	ldw	r4,-16(fp)
1800d3ac:	800d6040 	call	1800d604 <open>
1800d3b0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1800d3b4:	e0bffa17 	ldw	r2,-24(fp)
1800d3b8:	10002216 	blt	r2,zero,1800d444 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1800d3bc:	04060074 	movhi	r16,6145
1800d3c0:	84004104 	addi	r16,r16,260
1800d3c4:	e0bffa17 	ldw	r2,-24(fp)
1800d3c8:	01400304 	movi	r5,12
1800d3cc:	1009883a 	mov	r4,r2
1800d3d0:	8000ad40 	call	18000ad4 <__mulsi3>
1800d3d4:	8085883a 	add	r2,r16,r2
1800d3d8:	10c00017 	ldw	r3,0(r2)
1800d3dc:	e0bffb17 	ldw	r2,-20(fp)
1800d3e0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1800d3e4:	04060074 	movhi	r16,6145
1800d3e8:	84004104 	addi	r16,r16,260
1800d3ec:	e0bffa17 	ldw	r2,-24(fp)
1800d3f0:	01400304 	movi	r5,12
1800d3f4:	1009883a 	mov	r4,r2
1800d3f8:	8000ad40 	call	18000ad4 <__mulsi3>
1800d3fc:	8085883a 	add	r2,r16,r2
1800d400:	10800104 	addi	r2,r2,4
1800d404:	10c00017 	ldw	r3,0(r2)
1800d408:	e0bffb17 	ldw	r2,-20(fp)
1800d40c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1800d410:	04060074 	movhi	r16,6145
1800d414:	84004104 	addi	r16,r16,260
1800d418:	e0bffa17 	ldw	r2,-24(fp)
1800d41c:	01400304 	movi	r5,12
1800d420:	1009883a 	mov	r4,r2
1800d424:	8000ad40 	call	18000ad4 <__mulsi3>
1800d428:	8085883a 	add	r2,r16,r2
1800d42c:	10800204 	addi	r2,r2,8
1800d430:	10c00017 	ldw	r3,0(r2)
1800d434:	e0bffb17 	ldw	r2,-20(fp)
1800d438:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1800d43c:	e13ffa17 	ldw	r4,-24(fp)
1800d440:	800d7600 	call	1800d760 <alt_release_fd>
  }
} 
1800d444:	0001883a 	nop
1800d448:	e6ffff04 	addi	sp,fp,-4
1800d44c:	dfc00217 	ldw	ra,8(sp)
1800d450:	df000117 	ldw	fp,4(sp)
1800d454:	dc000017 	ldw	r16,0(sp)
1800d458:	dec00304 	addi	sp,sp,12
1800d45c:	f800283a 	ret

1800d460 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1800d460:	defffb04 	addi	sp,sp,-20
1800d464:	dfc00415 	stw	ra,16(sp)
1800d468:	df000315 	stw	fp,12(sp)
1800d46c:	df000304 	addi	fp,sp,12
1800d470:	e13ffd15 	stw	r4,-12(fp)
1800d474:	e17ffe15 	stw	r5,-8(fp)
1800d478:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1800d47c:	01c07fc4 	movi	r7,511
1800d480:	01800044 	movi	r6,1
1800d484:	e17ffd17 	ldw	r5,-12(fp)
1800d488:	01060074 	movhi	r4,6145
1800d48c:	21004404 	addi	r4,r4,272
1800d490:	800d37c0 	call	1800d37c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1800d494:	01c07fc4 	movi	r7,511
1800d498:	000d883a 	mov	r6,zero
1800d49c:	e17ffe17 	ldw	r5,-8(fp)
1800d4a0:	01060074 	movhi	r4,6145
1800d4a4:	21004104 	addi	r4,r4,260
1800d4a8:	800d37c0 	call	1800d37c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1800d4ac:	01c07fc4 	movi	r7,511
1800d4b0:	01800044 	movi	r6,1
1800d4b4:	e17fff17 	ldw	r5,-4(fp)
1800d4b8:	01060074 	movhi	r4,6145
1800d4bc:	21004704 	addi	r4,r4,284
1800d4c0:	800d37c0 	call	1800d37c <alt_open_fd>
}  
1800d4c4:	0001883a 	nop
1800d4c8:	e037883a 	mov	sp,fp
1800d4cc:	dfc00117 	ldw	ra,4(sp)
1800d4d0:	df000017 	ldw	fp,0(sp)
1800d4d4:	dec00204 	addi	sp,sp,8
1800d4d8:	f800283a 	ret

1800d4dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1800d4dc:	defffe04 	addi	sp,sp,-8
1800d4e0:	dfc00115 	stw	ra,4(sp)
1800d4e4:	df000015 	stw	fp,0(sp)
1800d4e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1800d4ec:	d0a00e17 	ldw	r2,-32712(gp)
1800d4f0:	10000326 	beq	r2,zero,1800d500 <alt_get_errno+0x24>
1800d4f4:	d0a00e17 	ldw	r2,-32712(gp)
1800d4f8:	103ee83a 	callr	r2
1800d4fc:	00000106 	br	1800d504 <alt_get_errno+0x28>
1800d500:	d0a7e904 	addi	r2,gp,-24668
}
1800d504:	e037883a 	mov	sp,fp
1800d508:	dfc00117 	ldw	ra,4(sp)
1800d50c:	df000017 	ldw	fp,0(sp)
1800d510:	dec00204 	addi	sp,sp,8
1800d514:	f800283a 	ret

1800d518 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1800d518:	defffb04 	addi	sp,sp,-20
1800d51c:	dfc00415 	stw	ra,16(sp)
1800d520:	df000315 	stw	fp,12(sp)
1800d524:	dc000215 	stw	r16,8(sp)
1800d528:	df000304 	addi	fp,sp,12
1800d52c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1800d530:	e0bffe17 	ldw	r2,-8(fp)
1800d534:	10800217 	ldw	r2,8(r2)
1800d538:	10d00034 	orhi	r3,r2,16384
1800d53c:	e0bffe17 	ldw	r2,-8(fp)
1800d540:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1800d544:	e03ffd15 	stw	zero,-12(fp)
1800d548:	00002306 	br	1800d5d8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1800d54c:	04060074 	movhi	r16,6145
1800d550:	84004104 	addi	r16,r16,260
1800d554:	e0bffd17 	ldw	r2,-12(fp)
1800d558:	01400304 	movi	r5,12
1800d55c:	1009883a 	mov	r4,r2
1800d560:	8000ad40 	call	18000ad4 <__mulsi3>
1800d564:	8085883a 	add	r2,r16,r2
1800d568:	10c00017 	ldw	r3,0(r2)
1800d56c:	e0bffe17 	ldw	r2,-8(fp)
1800d570:	10800017 	ldw	r2,0(r2)
1800d574:	1880151e 	bne	r3,r2,1800d5cc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1800d578:	04060074 	movhi	r16,6145
1800d57c:	84004104 	addi	r16,r16,260
1800d580:	e0bffd17 	ldw	r2,-12(fp)
1800d584:	01400304 	movi	r5,12
1800d588:	1009883a 	mov	r4,r2
1800d58c:	8000ad40 	call	18000ad4 <__mulsi3>
1800d590:	8085883a 	add	r2,r16,r2
1800d594:	10800204 	addi	r2,r2,8
1800d598:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1800d59c:	10000b0e 	bge	r2,zero,1800d5cc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1800d5a0:	01400304 	movi	r5,12
1800d5a4:	e13ffd17 	ldw	r4,-12(fp)
1800d5a8:	8000ad40 	call	18000ad4 <__mulsi3>
1800d5ac:	1007883a 	mov	r3,r2
1800d5b0:	00860074 	movhi	r2,6145
1800d5b4:	10804104 	addi	r2,r2,260
1800d5b8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1800d5bc:	e0bffe17 	ldw	r2,-8(fp)
1800d5c0:	18800226 	beq	r3,r2,1800d5cc <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1800d5c4:	00bffcc4 	movi	r2,-13
1800d5c8:	00000806 	br	1800d5ec <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1800d5cc:	e0bffd17 	ldw	r2,-12(fp)
1800d5d0:	10800044 	addi	r2,r2,1
1800d5d4:	e0bffd15 	stw	r2,-12(fp)
1800d5d8:	d0a00d17 	ldw	r2,-32716(gp)
1800d5dc:	1007883a 	mov	r3,r2
1800d5e0:	e0bffd17 	ldw	r2,-12(fp)
1800d5e4:	18bfd92e 	bgeu	r3,r2,1800d54c <__alt_data_end+0xf800d54c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1800d5e8:	0005883a 	mov	r2,zero
}
1800d5ec:	e6ffff04 	addi	sp,fp,-4
1800d5f0:	dfc00217 	ldw	ra,8(sp)
1800d5f4:	df000117 	ldw	fp,4(sp)
1800d5f8:	dc000017 	ldw	r16,0(sp)
1800d5fc:	dec00304 	addi	sp,sp,12
1800d600:	f800283a 	ret

1800d604 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1800d604:	defff604 	addi	sp,sp,-40
1800d608:	dfc00915 	stw	ra,36(sp)
1800d60c:	df000815 	stw	fp,32(sp)
1800d610:	df000804 	addi	fp,sp,32
1800d614:	e13ffd15 	stw	r4,-12(fp)
1800d618:	e17ffe15 	stw	r5,-8(fp)
1800d61c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1800d620:	00bfffc4 	movi	r2,-1
1800d624:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1800d628:	00bffb44 	movi	r2,-19
1800d62c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1800d630:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1800d634:	d1600b04 	addi	r5,gp,-32724
1800d638:	e13ffd17 	ldw	r4,-12(fp)
1800d63c:	800d9ac0 	call	1800d9ac <alt_find_dev>
1800d640:	e0bff815 	stw	r2,-32(fp)
1800d644:	e0bff817 	ldw	r2,-32(fp)
1800d648:	1000051e 	bne	r2,zero,1800d660 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1800d64c:	e13ffd17 	ldw	r4,-12(fp)
1800d650:	800da3c0 	call	1800da3c <alt_find_file>
1800d654:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1800d658:	00800044 	movi	r2,1
1800d65c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1800d660:	e0bff817 	ldw	r2,-32(fp)
1800d664:	10002b26 	beq	r2,zero,1800d714 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
1800d668:	e13ff817 	ldw	r4,-32(fp)
1800d66c:	800db440 	call	1800db44 <alt_get_fd>
1800d670:	e0bff915 	stw	r2,-28(fp)
1800d674:	e0bff917 	ldw	r2,-28(fp)
1800d678:	1000030e 	bge	r2,zero,1800d688 <open+0x84>
    {
      status = index;
1800d67c:	e0bff917 	ldw	r2,-28(fp)
1800d680:	e0bffa15 	stw	r2,-24(fp)
1800d684:	00002506 	br	1800d71c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
1800d688:	01400304 	movi	r5,12
1800d68c:	e13ff917 	ldw	r4,-28(fp)
1800d690:	8000ad40 	call	18000ad4 <__mulsi3>
1800d694:	1007883a 	mov	r3,r2
1800d698:	00860074 	movhi	r2,6145
1800d69c:	10804104 	addi	r2,r2,260
1800d6a0:	1885883a 	add	r2,r3,r2
1800d6a4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1800d6a8:	e0fffe17 	ldw	r3,-8(fp)
1800d6ac:	00900034 	movhi	r2,16384
1800d6b0:	10bfffc4 	addi	r2,r2,-1
1800d6b4:	1886703a 	and	r3,r3,r2
1800d6b8:	e0bffc17 	ldw	r2,-16(fp)
1800d6bc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1800d6c0:	e0bffb17 	ldw	r2,-20(fp)
1800d6c4:	1000051e 	bne	r2,zero,1800d6dc <open+0xd8>
1800d6c8:	e13ffc17 	ldw	r4,-16(fp)
1800d6cc:	800d5180 	call	1800d518 <alt_file_locked>
1800d6d0:	e0bffa15 	stw	r2,-24(fp)
1800d6d4:	e0bffa17 	ldw	r2,-24(fp)
1800d6d8:	10001016 	blt	r2,zero,1800d71c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1800d6dc:	e0bff817 	ldw	r2,-32(fp)
1800d6e0:	10800317 	ldw	r2,12(r2)
1800d6e4:	10000826 	beq	r2,zero,1800d708 <open+0x104>
1800d6e8:	e0bff817 	ldw	r2,-32(fp)
1800d6ec:	10800317 	ldw	r2,12(r2)
1800d6f0:	e1ffff17 	ldw	r7,-4(fp)
1800d6f4:	e1bffe17 	ldw	r6,-8(fp)
1800d6f8:	e17ffd17 	ldw	r5,-12(fp)
1800d6fc:	e13ffc17 	ldw	r4,-16(fp)
1800d700:	103ee83a 	callr	r2
1800d704:	00000106 	br	1800d70c <open+0x108>
1800d708:	0005883a 	mov	r2,zero
1800d70c:	e0bffa15 	stw	r2,-24(fp)
1800d710:	00000206 	br	1800d71c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1800d714:	00bffb44 	movi	r2,-19
1800d718:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1800d71c:	e0bffa17 	ldw	r2,-24(fp)
1800d720:	1000090e 	bge	r2,zero,1800d748 <open+0x144>
  {
    alt_release_fd (index);  
1800d724:	e13ff917 	ldw	r4,-28(fp)
1800d728:	800d7600 	call	1800d760 <alt_release_fd>
    ALT_ERRNO = -status;
1800d72c:	800d4dc0 	call	1800d4dc <alt_get_errno>
1800d730:	1007883a 	mov	r3,r2
1800d734:	e0bffa17 	ldw	r2,-24(fp)
1800d738:	0085c83a 	sub	r2,zero,r2
1800d73c:	18800015 	stw	r2,0(r3)
    return -1;
1800d740:	00bfffc4 	movi	r2,-1
1800d744:	00000106 	br	1800d74c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
1800d748:	e0bff917 	ldw	r2,-28(fp)
}
1800d74c:	e037883a 	mov	sp,fp
1800d750:	dfc00117 	ldw	ra,4(sp)
1800d754:	df000017 	ldw	fp,0(sp)
1800d758:	dec00204 	addi	sp,sp,8
1800d75c:	f800283a 	ret

1800d760 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1800d760:	defffc04 	addi	sp,sp,-16
1800d764:	dfc00315 	stw	ra,12(sp)
1800d768:	df000215 	stw	fp,8(sp)
1800d76c:	dc000115 	stw	r16,4(sp)
1800d770:	df000204 	addi	fp,sp,8
1800d774:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
1800d778:	e0bffe17 	ldw	r2,-8(fp)
1800d77c:	108000d0 	cmplti	r2,r2,3
1800d780:	1000111e 	bne	r2,zero,1800d7c8 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
1800d784:	04060074 	movhi	r16,6145
1800d788:	84004104 	addi	r16,r16,260
1800d78c:	e0bffe17 	ldw	r2,-8(fp)
1800d790:	01400304 	movi	r5,12
1800d794:	1009883a 	mov	r4,r2
1800d798:	8000ad40 	call	18000ad4 <__mulsi3>
1800d79c:	8085883a 	add	r2,r16,r2
1800d7a0:	10800204 	addi	r2,r2,8
1800d7a4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1800d7a8:	04060074 	movhi	r16,6145
1800d7ac:	84004104 	addi	r16,r16,260
1800d7b0:	e0bffe17 	ldw	r2,-8(fp)
1800d7b4:	01400304 	movi	r5,12
1800d7b8:	1009883a 	mov	r4,r2
1800d7bc:	8000ad40 	call	18000ad4 <__mulsi3>
1800d7c0:	8085883a 	add	r2,r16,r2
1800d7c4:	10000015 	stw	zero,0(r2)
  }
}
1800d7c8:	0001883a 	nop
1800d7cc:	e6ffff04 	addi	sp,fp,-4
1800d7d0:	dfc00217 	ldw	ra,8(sp)
1800d7d4:	df000117 	ldw	fp,4(sp)
1800d7d8:	dc000017 	ldw	r16,0(sp)
1800d7dc:	dec00304 	addi	sp,sp,12
1800d7e0:	f800283a 	ret

1800d7e4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1800d7e4:	defffa04 	addi	sp,sp,-24
1800d7e8:	df000515 	stw	fp,20(sp)
1800d7ec:	df000504 	addi	fp,sp,20
1800d7f0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1800d7f4:	0005303a 	rdctl	r2,status
1800d7f8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1800d7fc:	e0fffc17 	ldw	r3,-16(fp)
1800d800:	00bfff84 	movi	r2,-2
1800d804:	1884703a 	and	r2,r3,r2
1800d808:	1001703a 	wrctl	status,r2
  
  return context;
1800d80c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1800d810:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1800d814:	e0bfff17 	ldw	r2,-4(fp)
1800d818:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1800d81c:	e0bffd17 	ldw	r2,-12(fp)
1800d820:	10800017 	ldw	r2,0(r2)
1800d824:	e0fffd17 	ldw	r3,-12(fp)
1800d828:	18c00117 	ldw	r3,4(r3)
1800d82c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1800d830:	e0bffd17 	ldw	r2,-12(fp)
1800d834:	10800117 	ldw	r2,4(r2)
1800d838:	e0fffd17 	ldw	r3,-12(fp)
1800d83c:	18c00017 	ldw	r3,0(r3)
1800d840:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1800d844:	e0bffd17 	ldw	r2,-12(fp)
1800d848:	e0fffd17 	ldw	r3,-12(fp)
1800d84c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1800d850:	e0bffd17 	ldw	r2,-12(fp)
1800d854:	e0fffd17 	ldw	r3,-12(fp)
1800d858:	10c00015 	stw	r3,0(r2)
1800d85c:	e0bffb17 	ldw	r2,-20(fp)
1800d860:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1800d864:	e0bffe17 	ldw	r2,-8(fp)
1800d868:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1800d86c:	0001883a 	nop
1800d870:	e037883a 	mov	sp,fp
1800d874:	df000017 	ldw	fp,0(sp)
1800d878:	dec00104 	addi	sp,sp,4
1800d87c:	f800283a 	ret

1800d880 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1800d880:	defffb04 	addi	sp,sp,-20
1800d884:	dfc00415 	stw	ra,16(sp)
1800d888:	df000315 	stw	fp,12(sp)
1800d88c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1800d890:	d0a01017 	ldw	r2,-32704(gp)
1800d894:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1800d898:	d0a7ef17 	ldw	r2,-24644(gp)
1800d89c:	10800044 	addi	r2,r2,1
1800d8a0:	d0a7ef15 	stw	r2,-24644(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1800d8a4:	00002e06 	br	1800d960 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1800d8a8:	e0bffd17 	ldw	r2,-12(fp)
1800d8ac:	10800017 	ldw	r2,0(r2)
1800d8b0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1800d8b4:	e0bffd17 	ldw	r2,-12(fp)
1800d8b8:	10800403 	ldbu	r2,16(r2)
1800d8bc:	10803fcc 	andi	r2,r2,255
1800d8c0:	10000426 	beq	r2,zero,1800d8d4 <alt_tick+0x54>
1800d8c4:	d0a7ef17 	ldw	r2,-24644(gp)
1800d8c8:	1000021e 	bne	r2,zero,1800d8d4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1800d8cc:	e0bffd17 	ldw	r2,-12(fp)
1800d8d0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1800d8d4:	e0bffd17 	ldw	r2,-12(fp)
1800d8d8:	10800217 	ldw	r2,8(r2)
1800d8dc:	d0e7ef17 	ldw	r3,-24644(gp)
1800d8e0:	18801d36 	bltu	r3,r2,1800d958 <alt_tick+0xd8>
1800d8e4:	e0bffd17 	ldw	r2,-12(fp)
1800d8e8:	10800403 	ldbu	r2,16(r2)
1800d8ec:	10803fcc 	andi	r2,r2,255
1800d8f0:	1000191e 	bne	r2,zero,1800d958 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1800d8f4:	e0bffd17 	ldw	r2,-12(fp)
1800d8f8:	10800317 	ldw	r2,12(r2)
1800d8fc:	e0fffd17 	ldw	r3,-12(fp)
1800d900:	18c00517 	ldw	r3,20(r3)
1800d904:	1809883a 	mov	r4,r3
1800d908:	103ee83a 	callr	r2
1800d90c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1800d910:	e0bfff17 	ldw	r2,-4(fp)
1800d914:	1000031e 	bne	r2,zero,1800d924 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1800d918:	e13ffd17 	ldw	r4,-12(fp)
1800d91c:	800d7e40 	call	1800d7e4 <alt_alarm_stop>
1800d920:	00000d06 	br	1800d958 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1800d924:	e0bffd17 	ldw	r2,-12(fp)
1800d928:	10c00217 	ldw	r3,8(r2)
1800d92c:	e0bfff17 	ldw	r2,-4(fp)
1800d930:	1887883a 	add	r3,r3,r2
1800d934:	e0bffd17 	ldw	r2,-12(fp)
1800d938:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1800d93c:	e0bffd17 	ldw	r2,-12(fp)
1800d940:	10c00217 	ldw	r3,8(r2)
1800d944:	d0a7ef17 	ldw	r2,-24644(gp)
1800d948:	1880032e 	bgeu	r3,r2,1800d958 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1800d94c:	e0bffd17 	ldw	r2,-12(fp)
1800d950:	00c00044 	movi	r3,1
1800d954:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1800d958:	e0bffe17 	ldw	r2,-8(fp)
1800d95c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1800d960:	e0fffd17 	ldw	r3,-12(fp)
1800d964:	d0a01004 	addi	r2,gp,-32704
1800d968:	18bfcf1e 	bne	r3,r2,1800d8a8 <__alt_data_end+0xf800d8a8>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1800d96c:	0001883a 	nop
}
1800d970:	0001883a 	nop
1800d974:	e037883a 	mov	sp,fp
1800d978:	dfc00117 	ldw	ra,4(sp)
1800d97c:	df000017 	ldw	fp,0(sp)
1800d980:	dec00204 	addi	sp,sp,8
1800d984:	f800283a 	ret

1800d988 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1800d988:	deffff04 	addi	sp,sp,-4
1800d98c:	df000015 	stw	fp,0(sp)
1800d990:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1800d994:	000170fa 	wrctl	ienable,zero
}
1800d998:	0001883a 	nop
1800d99c:	e037883a 	mov	sp,fp
1800d9a0:	df000017 	ldw	fp,0(sp)
1800d9a4:	dec00104 	addi	sp,sp,4
1800d9a8:	f800283a 	ret

1800d9ac <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1800d9ac:	defffa04 	addi	sp,sp,-24
1800d9b0:	dfc00515 	stw	ra,20(sp)
1800d9b4:	df000415 	stw	fp,16(sp)
1800d9b8:	df000404 	addi	fp,sp,16
1800d9bc:	e13ffe15 	stw	r4,-8(fp)
1800d9c0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1800d9c4:	e0bfff17 	ldw	r2,-4(fp)
1800d9c8:	10800017 	ldw	r2,0(r2)
1800d9cc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1800d9d0:	e13ffe17 	ldw	r4,-8(fp)
1800d9d4:	8000c3c0 	call	18000c3c <strlen>
1800d9d8:	10800044 	addi	r2,r2,1
1800d9dc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1800d9e0:	00000d06 	br	1800da18 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1800d9e4:	e0bffc17 	ldw	r2,-16(fp)
1800d9e8:	10800217 	ldw	r2,8(r2)
1800d9ec:	e0fffd17 	ldw	r3,-12(fp)
1800d9f0:	180d883a 	mov	r6,r3
1800d9f4:	e17ffe17 	ldw	r5,-8(fp)
1800d9f8:	1009883a 	mov	r4,r2
1800d9fc:	800dcf00 	call	1800dcf0 <memcmp>
1800da00:	1000021e 	bne	r2,zero,1800da0c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1800da04:	e0bffc17 	ldw	r2,-16(fp)
1800da08:	00000706 	br	1800da28 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1800da0c:	e0bffc17 	ldw	r2,-16(fp)
1800da10:	10800017 	ldw	r2,0(r2)
1800da14:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1800da18:	e0fffc17 	ldw	r3,-16(fp)
1800da1c:	e0bfff17 	ldw	r2,-4(fp)
1800da20:	18bff01e 	bne	r3,r2,1800d9e4 <__alt_data_end+0xf800d9e4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1800da24:	0005883a 	mov	r2,zero
}
1800da28:	e037883a 	mov	sp,fp
1800da2c:	dfc00117 	ldw	ra,4(sp)
1800da30:	df000017 	ldw	fp,0(sp)
1800da34:	dec00204 	addi	sp,sp,8
1800da38:	f800283a 	ret

1800da3c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1800da3c:	defffb04 	addi	sp,sp,-20
1800da40:	dfc00415 	stw	ra,16(sp)
1800da44:	df000315 	stw	fp,12(sp)
1800da48:	df000304 	addi	fp,sp,12
1800da4c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1800da50:	d0a00917 	ldw	r2,-32732(gp)
1800da54:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1800da58:	00003106 	br	1800db20 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1800da5c:	e0bffd17 	ldw	r2,-12(fp)
1800da60:	10800217 	ldw	r2,8(r2)
1800da64:	1009883a 	mov	r4,r2
1800da68:	8000c3c0 	call	18000c3c <strlen>
1800da6c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1800da70:	e0bffd17 	ldw	r2,-12(fp)
1800da74:	10c00217 	ldw	r3,8(r2)
1800da78:	e0bffe17 	ldw	r2,-8(fp)
1800da7c:	10bfffc4 	addi	r2,r2,-1
1800da80:	1885883a 	add	r2,r3,r2
1800da84:	10800003 	ldbu	r2,0(r2)
1800da88:	10803fcc 	andi	r2,r2,255
1800da8c:	1080201c 	xori	r2,r2,128
1800da90:	10bfe004 	addi	r2,r2,-128
1800da94:	10800bd8 	cmpnei	r2,r2,47
1800da98:	1000031e 	bne	r2,zero,1800daa8 <alt_find_file+0x6c>
    {
      len -= 1;
1800da9c:	e0bffe17 	ldw	r2,-8(fp)
1800daa0:	10bfffc4 	addi	r2,r2,-1
1800daa4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1800daa8:	e0bffe17 	ldw	r2,-8(fp)
1800daac:	e0ffff17 	ldw	r3,-4(fp)
1800dab0:	1885883a 	add	r2,r3,r2
1800dab4:	10800003 	ldbu	r2,0(r2)
1800dab8:	10803fcc 	andi	r2,r2,255
1800dabc:	1080201c 	xori	r2,r2,128
1800dac0:	10bfe004 	addi	r2,r2,-128
1800dac4:	10800be0 	cmpeqi	r2,r2,47
1800dac8:	1000081e 	bne	r2,zero,1800daec <alt_find_file+0xb0>
1800dacc:	e0bffe17 	ldw	r2,-8(fp)
1800dad0:	e0ffff17 	ldw	r3,-4(fp)
1800dad4:	1885883a 	add	r2,r3,r2
1800dad8:	10800003 	ldbu	r2,0(r2)
1800dadc:	10803fcc 	andi	r2,r2,255
1800dae0:	1080201c 	xori	r2,r2,128
1800dae4:	10bfe004 	addi	r2,r2,-128
1800dae8:	10000a1e 	bne	r2,zero,1800db14 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1800daec:	e0bffd17 	ldw	r2,-12(fp)
1800daf0:	10800217 	ldw	r2,8(r2)
1800daf4:	e0fffe17 	ldw	r3,-8(fp)
1800daf8:	180d883a 	mov	r6,r3
1800dafc:	e17fff17 	ldw	r5,-4(fp)
1800db00:	1009883a 	mov	r4,r2
1800db04:	800dcf00 	call	1800dcf0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1800db08:	1000021e 	bne	r2,zero,1800db14 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1800db0c:	e0bffd17 	ldw	r2,-12(fp)
1800db10:	00000706 	br	1800db30 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1800db14:	e0bffd17 	ldw	r2,-12(fp)
1800db18:	10800017 	ldw	r2,0(r2)
1800db1c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1800db20:	e0fffd17 	ldw	r3,-12(fp)
1800db24:	d0a00904 	addi	r2,gp,-32732
1800db28:	18bfcc1e 	bne	r3,r2,1800da5c <__alt_data_end+0xf800da5c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1800db2c:	0005883a 	mov	r2,zero
}
1800db30:	e037883a 	mov	sp,fp
1800db34:	dfc00117 	ldw	ra,4(sp)
1800db38:	df000017 	ldw	fp,0(sp)
1800db3c:	dec00204 	addi	sp,sp,8
1800db40:	f800283a 	ret

1800db44 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1800db44:	defffa04 	addi	sp,sp,-24
1800db48:	dfc00515 	stw	ra,20(sp)
1800db4c:	df000415 	stw	fp,16(sp)
1800db50:	dc000315 	stw	r16,12(sp)
1800db54:	df000404 	addi	fp,sp,16
1800db58:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
1800db5c:	00bffa04 	movi	r2,-24
1800db60:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1800db64:	e03ffc15 	stw	zero,-16(fp)
1800db68:	00001d06 	br	1800dbe0 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
1800db6c:	04060074 	movhi	r16,6145
1800db70:	84004104 	addi	r16,r16,260
1800db74:	e0bffc17 	ldw	r2,-16(fp)
1800db78:	01400304 	movi	r5,12
1800db7c:	1009883a 	mov	r4,r2
1800db80:	8000ad40 	call	18000ad4 <__mulsi3>
1800db84:	8085883a 	add	r2,r16,r2
1800db88:	10800017 	ldw	r2,0(r2)
1800db8c:	1000111e 	bne	r2,zero,1800dbd4 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
1800db90:	04060074 	movhi	r16,6145
1800db94:	84004104 	addi	r16,r16,260
1800db98:	e0bffc17 	ldw	r2,-16(fp)
1800db9c:	01400304 	movi	r5,12
1800dba0:	1009883a 	mov	r4,r2
1800dba4:	8000ad40 	call	18000ad4 <__mulsi3>
1800dba8:	8085883a 	add	r2,r16,r2
1800dbac:	e0fffe17 	ldw	r3,-8(fp)
1800dbb0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1800dbb4:	d0e00d17 	ldw	r3,-32716(gp)
1800dbb8:	e0bffc17 	ldw	r2,-16(fp)
1800dbbc:	1880020e 	bge	r3,r2,1800dbc8 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
1800dbc0:	e0bffc17 	ldw	r2,-16(fp)
1800dbc4:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
1800dbc8:	e0bffc17 	ldw	r2,-16(fp)
1800dbcc:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
1800dbd0:	00000606 	br	1800dbec <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1800dbd4:	e0bffc17 	ldw	r2,-16(fp)
1800dbd8:	10800044 	addi	r2,r2,1
1800dbdc:	e0bffc15 	stw	r2,-16(fp)
1800dbe0:	e0bffc17 	ldw	r2,-16(fp)
1800dbe4:	10800810 	cmplti	r2,r2,32
1800dbe8:	103fe01e 	bne	r2,zero,1800db6c <__alt_data_end+0xf800db6c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1800dbec:	e0bffd17 	ldw	r2,-12(fp)
}
1800dbf0:	e6ffff04 	addi	sp,fp,-4
1800dbf4:	dfc00217 	ldw	ra,8(sp)
1800dbf8:	df000117 	ldw	fp,4(sp)
1800dbfc:	dc000017 	ldw	r16,0(sp)
1800dc00:	dec00304 	addi	sp,sp,12
1800dc04:	f800283a 	ret

1800dc08 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1800dc08:	defffe04 	addi	sp,sp,-8
1800dc0c:	df000115 	stw	fp,4(sp)
1800dc10:	df000104 	addi	fp,sp,4
1800dc14:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1800dc18:	e0bfff17 	ldw	r2,-4(fp)
1800dc1c:	10bffe84 	addi	r2,r2,-6
1800dc20:	10c00428 	cmpgeui	r3,r2,16
1800dc24:	18001a1e 	bne	r3,zero,1800dc90 <alt_exception_cause_generated_bad_addr+0x88>
1800dc28:	100690ba 	slli	r3,r2,2
1800dc2c:	00860074 	movhi	r2,6145
1800dc30:	10b71004 	addi	r2,r2,-9152
1800dc34:	1885883a 	add	r2,r3,r2
1800dc38:	10800017 	ldw	r2,0(r2)
1800dc3c:	1000683a 	jmp	r2
1800dc40:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
1800dc44:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
1800dc48:	1800dc90 	cmplti	zero,r3,882
1800dc4c:	1800dc90 	cmplti	zero,r3,882
1800dc50:	1800dc90 	cmplti	zero,r3,882
1800dc54:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
1800dc58:	1800dc88 	cmpgei	zero,r3,882
1800dc5c:	1800dc90 	cmplti	zero,r3,882
1800dc60:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
1800dc64:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
1800dc68:	1800dc90 	cmplti	zero,r3,882
1800dc6c:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
1800dc70:	1800dc88 	cmpgei	zero,r3,882
1800dc74:	1800dc90 	cmplti	zero,r3,882
1800dc78:	1800dc90 	cmplti	zero,r3,882
1800dc7c:	1800dc80 	call	11800dc8 <__alt_mem_onchip_memory2_0+0x11800dc8>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1800dc80:	00800044 	movi	r2,1
1800dc84:	00000306 	br	1800dc94 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1800dc88:	0005883a 	mov	r2,zero
1800dc8c:	00000106 	br	1800dc94 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1800dc90:	0005883a 	mov	r2,zero
  }
}
1800dc94:	e037883a 	mov	sp,fp
1800dc98:	df000017 	ldw	fp,0(sp)
1800dc9c:	dec00104 	addi	sp,sp,4
1800dca0:	f800283a 	ret

1800dca4 <atexit>:
1800dca4:	200b883a 	mov	r5,r4
1800dca8:	000f883a 	mov	r7,zero
1800dcac:	000d883a 	mov	r6,zero
1800dcb0:	0009883a 	mov	r4,zero
1800dcb4:	800dd6c1 	jmpi	1800dd6c <__register_exitproc>

1800dcb8 <exit>:
1800dcb8:	defffe04 	addi	sp,sp,-8
1800dcbc:	000b883a 	mov	r5,zero
1800dcc0:	dc000015 	stw	r16,0(sp)
1800dcc4:	dfc00115 	stw	ra,4(sp)
1800dcc8:	2021883a 	mov	r16,r4
1800dccc:	800de840 	call	1800de84 <__call_exitprocs>
1800dcd0:	00860074 	movhi	r2,6145
1800dcd4:	1080a404 	addi	r2,r2,656
1800dcd8:	11000017 	ldw	r4,0(r2)
1800dcdc:	20800f17 	ldw	r2,60(r4)
1800dce0:	10000126 	beq	r2,zero,1800dce8 <exit+0x30>
1800dce4:	103ee83a 	callr	r2
1800dce8:	8009883a 	mov	r4,r16
1800dcec:	800e0040 	call	1800e004 <_exit>

1800dcf0 <memcmp>:
1800dcf0:	01c000c4 	movi	r7,3
1800dcf4:	3980192e 	bgeu	r7,r6,1800dd5c <memcmp+0x6c>
1800dcf8:	2144b03a 	or	r2,r4,r5
1800dcfc:	11c4703a 	and	r2,r2,r7
1800dd00:	10000f26 	beq	r2,zero,1800dd40 <memcmp+0x50>
1800dd04:	20800003 	ldbu	r2,0(r4)
1800dd08:	28c00003 	ldbu	r3,0(r5)
1800dd0c:	10c0151e 	bne	r2,r3,1800dd64 <memcmp+0x74>
1800dd10:	31bfff84 	addi	r6,r6,-2
1800dd14:	01ffffc4 	movi	r7,-1
1800dd18:	00000406 	br	1800dd2c <memcmp+0x3c>
1800dd1c:	20800003 	ldbu	r2,0(r4)
1800dd20:	28c00003 	ldbu	r3,0(r5)
1800dd24:	31bfffc4 	addi	r6,r6,-1
1800dd28:	10c00e1e 	bne	r2,r3,1800dd64 <memcmp+0x74>
1800dd2c:	21000044 	addi	r4,r4,1
1800dd30:	29400044 	addi	r5,r5,1
1800dd34:	31fff91e 	bne	r6,r7,1800dd1c <__alt_data_end+0xf800dd1c>
1800dd38:	0005883a 	mov	r2,zero
1800dd3c:	f800283a 	ret
1800dd40:	20c00017 	ldw	r3,0(r4)
1800dd44:	28800017 	ldw	r2,0(r5)
1800dd48:	18bfee1e 	bne	r3,r2,1800dd04 <__alt_data_end+0xf800dd04>
1800dd4c:	31bfff04 	addi	r6,r6,-4
1800dd50:	21000104 	addi	r4,r4,4
1800dd54:	29400104 	addi	r5,r5,4
1800dd58:	39bff936 	bltu	r7,r6,1800dd40 <__alt_data_end+0xf800dd40>
1800dd5c:	303fe91e 	bne	r6,zero,1800dd04 <__alt_data_end+0xf800dd04>
1800dd60:	003ff506 	br	1800dd38 <__alt_data_end+0xf800dd38>
1800dd64:	10c5c83a 	sub	r2,r2,r3
1800dd68:	f800283a 	ret

1800dd6c <__register_exitproc>:
1800dd6c:	defffa04 	addi	sp,sp,-24
1800dd70:	dc000315 	stw	r16,12(sp)
1800dd74:	04060074 	movhi	r16,6145
1800dd78:	8400a404 	addi	r16,r16,656
1800dd7c:	80c00017 	ldw	r3,0(r16)
1800dd80:	dc400415 	stw	r17,16(sp)
1800dd84:	dfc00515 	stw	ra,20(sp)
1800dd88:	18805217 	ldw	r2,328(r3)
1800dd8c:	2023883a 	mov	r17,r4
1800dd90:	10003726 	beq	r2,zero,1800de70 <__register_exitproc+0x104>
1800dd94:	10c00117 	ldw	r3,4(r2)
1800dd98:	010007c4 	movi	r4,31
1800dd9c:	20c00e16 	blt	r4,r3,1800ddd8 <__register_exitproc+0x6c>
1800dda0:	1a000044 	addi	r8,r3,1
1800dda4:	8800221e 	bne	r17,zero,1800de30 <__register_exitproc+0xc4>
1800dda8:	18c00084 	addi	r3,r3,2
1800ddac:	18c7883a 	add	r3,r3,r3
1800ddb0:	18c7883a 	add	r3,r3,r3
1800ddb4:	12000115 	stw	r8,4(r2)
1800ddb8:	10c7883a 	add	r3,r2,r3
1800ddbc:	19400015 	stw	r5,0(r3)
1800ddc0:	0005883a 	mov	r2,zero
1800ddc4:	dfc00517 	ldw	ra,20(sp)
1800ddc8:	dc400417 	ldw	r17,16(sp)
1800ddcc:	dc000317 	ldw	r16,12(sp)
1800ddd0:	dec00604 	addi	sp,sp,24
1800ddd4:	f800283a 	ret
1800ddd8:	00800034 	movhi	r2,0
1800dddc:	10800004 	addi	r2,r2,0
1800dde0:	10002626 	beq	r2,zero,1800de7c <__register_exitproc+0x110>
1800dde4:	01006404 	movi	r4,400
1800dde8:	d9400015 	stw	r5,0(sp)
1800ddec:	d9800115 	stw	r6,4(sp)
1800ddf0:	d9c00215 	stw	r7,8(sp)
1800ddf4:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0+0x10000000>
1800ddf8:	d9400017 	ldw	r5,0(sp)
1800ddfc:	d9800117 	ldw	r6,4(sp)
1800de00:	d9c00217 	ldw	r7,8(sp)
1800de04:	10001d26 	beq	r2,zero,1800de7c <__register_exitproc+0x110>
1800de08:	81000017 	ldw	r4,0(r16)
1800de0c:	10000115 	stw	zero,4(r2)
1800de10:	02000044 	movi	r8,1
1800de14:	22405217 	ldw	r9,328(r4)
1800de18:	0007883a 	mov	r3,zero
1800de1c:	12400015 	stw	r9,0(r2)
1800de20:	20805215 	stw	r2,328(r4)
1800de24:	10006215 	stw	zero,392(r2)
1800de28:	10006315 	stw	zero,396(r2)
1800de2c:	883fde26 	beq	r17,zero,1800dda8 <__alt_data_end+0xf800dda8>
1800de30:	18c9883a 	add	r4,r3,r3
1800de34:	2109883a 	add	r4,r4,r4
1800de38:	1109883a 	add	r4,r2,r4
1800de3c:	21802215 	stw	r6,136(r4)
1800de40:	01800044 	movi	r6,1
1800de44:	12406217 	ldw	r9,392(r2)
1800de48:	30cc983a 	sll	r6,r6,r3
1800de4c:	4992b03a 	or	r9,r9,r6
1800de50:	12406215 	stw	r9,392(r2)
1800de54:	21c04215 	stw	r7,264(r4)
1800de58:	01000084 	movi	r4,2
1800de5c:	893fd21e 	bne	r17,r4,1800dda8 <__alt_data_end+0xf800dda8>
1800de60:	11006317 	ldw	r4,396(r2)
1800de64:	218cb03a 	or	r6,r4,r6
1800de68:	11806315 	stw	r6,396(r2)
1800de6c:	003fce06 	br	1800dda8 <__alt_data_end+0xf800dda8>
1800de70:	18805304 	addi	r2,r3,332
1800de74:	18805215 	stw	r2,328(r3)
1800de78:	003fc606 	br	1800dd94 <__alt_data_end+0xf800dd94>
1800de7c:	00bfffc4 	movi	r2,-1
1800de80:	003fd006 	br	1800ddc4 <__alt_data_end+0xf800ddc4>

1800de84 <__call_exitprocs>:
1800de84:	defff504 	addi	sp,sp,-44
1800de88:	df000915 	stw	fp,36(sp)
1800de8c:	dd400615 	stw	r21,24(sp)
1800de90:	dc800315 	stw	r18,12(sp)
1800de94:	dfc00a15 	stw	ra,40(sp)
1800de98:	ddc00815 	stw	r23,32(sp)
1800de9c:	dd800715 	stw	r22,28(sp)
1800dea0:	dd000515 	stw	r20,20(sp)
1800dea4:	dcc00415 	stw	r19,16(sp)
1800dea8:	dc400215 	stw	r17,8(sp)
1800deac:	dc000115 	stw	r16,4(sp)
1800deb0:	d9000015 	stw	r4,0(sp)
1800deb4:	2839883a 	mov	fp,r5
1800deb8:	04800044 	movi	r18,1
1800debc:	057fffc4 	movi	r21,-1
1800dec0:	00860074 	movhi	r2,6145
1800dec4:	1080a404 	addi	r2,r2,656
1800dec8:	12000017 	ldw	r8,0(r2)
1800decc:	45005217 	ldw	r20,328(r8)
1800ded0:	44c05204 	addi	r19,r8,328
1800ded4:	a0001c26 	beq	r20,zero,1800df48 <__call_exitprocs+0xc4>
1800ded8:	a0800117 	ldw	r2,4(r20)
1800dedc:	15ffffc4 	addi	r23,r2,-1
1800dee0:	b8000d16 	blt	r23,zero,1800df18 <__call_exitprocs+0x94>
1800dee4:	14000044 	addi	r16,r2,1
1800dee8:	8421883a 	add	r16,r16,r16
1800deec:	8421883a 	add	r16,r16,r16
1800def0:	84402004 	addi	r17,r16,128
1800def4:	a463883a 	add	r17,r20,r17
1800def8:	a421883a 	add	r16,r20,r16
1800defc:	e0001e26 	beq	fp,zero,1800df78 <__call_exitprocs+0xf4>
1800df00:	80804017 	ldw	r2,256(r16)
1800df04:	e0801c26 	beq	fp,r2,1800df78 <__call_exitprocs+0xf4>
1800df08:	bdffffc4 	addi	r23,r23,-1
1800df0c:	843fff04 	addi	r16,r16,-4
1800df10:	8c7fff04 	addi	r17,r17,-4
1800df14:	bd7ff91e 	bne	r23,r21,1800defc <__alt_data_end+0xf800defc>
1800df18:	00800034 	movhi	r2,0
1800df1c:	10800004 	addi	r2,r2,0
1800df20:	10000926 	beq	r2,zero,1800df48 <__call_exitprocs+0xc4>
1800df24:	a0800117 	ldw	r2,4(r20)
1800df28:	1000301e 	bne	r2,zero,1800dfec <__call_exitprocs+0x168>
1800df2c:	a0800017 	ldw	r2,0(r20)
1800df30:	10003226 	beq	r2,zero,1800dffc <__call_exitprocs+0x178>
1800df34:	a009883a 	mov	r4,r20
1800df38:	98800015 	stw	r2,0(r19)
1800df3c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0+0x10000000>
1800df40:	9d000017 	ldw	r20,0(r19)
1800df44:	a03fe41e 	bne	r20,zero,1800ded8 <__alt_data_end+0xf800ded8>
1800df48:	dfc00a17 	ldw	ra,40(sp)
1800df4c:	df000917 	ldw	fp,36(sp)
1800df50:	ddc00817 	ldw	r23,32(sp)
1800df54:	dd800717 	ldw	r22,28(sp)
1800df58:	dd400617 	ldw	r21,24(sp)
1800df5c:	dd000517 	ldw	r20,20(sp)
1800df60:	dcc00417 	ldw	r19,16(sp)
1800df64:	dc800317 	ldw	r18,12(sp)
1800df68:	dc400217 	ldw	r17,8(sp)
1800df6c:	dc000117 	ldw	r16,4(sp)
1800df70:	dec00b04 	addi	sp,sp,44
1800df74:	f800283a 	ret
1800df78:	a0800117 	ldw	r2,4(r20)
1800df7c:	80c00017 	ldw	r3,0(r16)
1800df80:	10bfffc4 	addi	r2,r2,-1
1800df84:	15c01426 	beq	r2,r23,1800dfd8 <__call_exitprocs+0x154>
1800df88:	80000015 	stw	zero,0(r16)
1800df8c:	183fde26 	beq	r3,zero,1800df08 <__alt_data_end+0xf800df08>
1800df90:	95c8983a 	sll	r4,r18,r23
1800df94:	a0806217 	ldw	r2,392(r20)
1800df98:	a5800117 	ldw	r22,4(r20)
1800df9c:	2084703a 	and	r2,r4,r2
1800dfa0:	10000b26 	beq	r2,zero,1800dfd0 <__call_exitprocs+0x14c>
1800dfa4:	a0806317 	ldw	r2,396(r20)
1800dfa8:	2088703a 	and	r4,r4,r2
1800dfac:	20000c1e 	bne	r4,zero,1800dfe0 <__call_exitprocs+0x15c>
1800dfb0:	89400017 	ldw	r5,0(r17)
1800dfb4:	d9000017 	ldw	r4,0(sp)
1800dfb8:	183ee83a 	callr	r3
1800dfbc:	a0800117 	ldw	r2,4(r20)
1800dfc0:	15bfbf1e 	bne	r2,r22,1800dec0 <__alt_data_end+0xf800dec0>
1800dfc4:	98800017 	ldw	r2,0(r19)
1800dfc8:	153fcf26 	beq	r2,r20,1800df08 <__alt_data_end+0xf800df08>
1800dfcc:	003fbc06 	br	1800dec0 <__alt_data_end+0xf800dec0>
1800dfd0:	183ee83a 	callr	r3
1800dfd4:	003ff906 	br	1800dfbc <__alt_data_end+0xf800dfbc>
1800dfd8:	a5c00115 	stw	r23,4(r20)
1800dfdc:	003feb06 	br	1800df8c <__alt_data_end+0xf800df8c>
1800dfe0:	89000017 	ldw	r4,0(r17)
1800dfe4:	183ee83a 	callr	r3
1800dfe8:	003ff406 	br	1800dfbc <__alt_data_end+0xf800dfbc>
1800dfec:	a0800017 	ldw	r2,0(r20)
1800dff0:	a027883a 	mov	r19,r20
1800dff4:	1029883a 	mov	r20,r2
1800dff8:	003fb606 	br	1800ded4 <__alt_data_end+0xf800ded4>
1800dffc:	0005883a 	mov	r2,zero
1800e000:	003ffb06 	br	1800dff0 <__alt_data_end+0xf800dff0>

1800e004 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1800e004:	defffd04 	addi	sp,sp,-12
1800e008:	df000215 	stw	fp,8(sp)
1800e00c:	df000204 	addi	fp,sp,8
1800e010:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1800e014:	0001883a 	nop
1800e018:	e0bfff17 	ldw	r2,-4(fp)
1800e01c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1800e020:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1800e024:	10000226 	beq	r2,zero,1800e030 <_exit+0x2c>
    ALT_SIM_FAIL();
1800e028:	002af070 	cmpltui	zero,zero,43969
1800e02c:	00000106 	br	1800e034 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1800e030:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1800e034:	003fff06 	br	1800e034 <__alt_data_end+0xf800e034>
