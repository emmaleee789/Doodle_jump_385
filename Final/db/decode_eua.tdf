--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=27 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_eua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[26..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[26..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3537w[2..0]	: WIRE;
	w_anode3550w[3..0]	: WIRE;
	w_anode3567w[3..0]	: WIRE;
	w_anode3577w[3..0]	: WIRE;
	w_anode3587w[3..0]	: WIRE;
	w_anode3597w[3..0]	: WIRE;
	w_anode3607w[3..0]	: WIRE;
	w_anode3617w[3..0]	: WIRE;
	w_anode3627w[3..0]	: WIRE;
	w_anode3639w[2..0]	: WIRE;
	w_anode3648w[3..0]	: WIRE;
	w_anode3659w[3..0]	: WIRE;
	w_anode3669w[3..0]	: WIRE;
	w_anode3679w[3..0]	: WIRE;
	w_anode3689w[3..0]	: WIRE;
	w_anode3699w[3..0]	: WIRE;
	w_anode3709w[3..0]	: WIRE;
	w_anode3719w[3..0]	: WIRE;
	w_anode3730w[2..0]	: WIRE;
	w_anode3739w[3..0]	: WIRE;
	w_anode3750w[3..0]	: WIRE;
	w_anode3760w[3..0]	: WIRE;
	w_anode3770w[3..0]	: WIRE;
	w_anode3780w[3..0]	: WIRE;
	w_anode3790w[3..0]	: WIRE;
	w_anode3800w[3..0]	: WIRE;
	w_anode3810w[3..0]	: WIRE;
	w_anode3821w[2..0]	: WIRE;
	w_anode3830w[3..0]	: WIRE;
	w_anode3841w[3..0]	: WIRE;
	w_anode3851w[3..0]	: WIRE;
	w_anode3861w[3..0]	: WIRE;
	w_anode3871w[3..0]	: WIRE;
	w_anode3881w[3..0]	: WIRE;
	w_anode3891w[3..0]	: WIRE;
	w_anode3901w[3..0]	: WIRE;
	w_data3535w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[26..0] = eq_wire[26..0];
	eq_wire[] = ( ( w_anode3901w[3..3], w_anode3891w[3..3], w_anode3881w[3..3], w_anode3871w[3..3], w_anode3861w[3..3], w_anode3851w[3..3], w_anode3841w[3..3], w_anode3830w[3..3]), ( w_anode3810w[3..3], w_anode3800w[3..3], w_anode3790w[3..3], w_anode3780w[3..3], w_anode3770w[3..3], w_anode3760w[3..3], w_anode3750w[3..3], w_anode3739w[3..3]), ( w_anode3719w[3..3], w_anode3709w[3..3], w_anode3699w[3..3], w_anode3689w[3..3], w_anode3679w[3..3], w_anode3669w[3..3], w_anode3659w[3..3], w_anode3648w[3..3]), ( w_anode3627w[3..3], w_anode3617w[3..3], w_anode3607w[3..3], w_anode3597w[3..3], w_anode3587w[3..3], w_anode3577w[3..3], w_anode3567w[3..3], w_anode3550w[3..3]));
	w_anode3537w[] = ( (w_anode3537w[1..1] & (! data_wire[4..4])), (w_anode3537w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3550w[] = ( (w_anode3550w[2..2] & (! w_data3535w[2..2])), (w_anode3550w[1..1] & (! w_data3535w[1..1])), (w_anode3550w[0..0] & (! w_data3535w[0..0])), w_anode3537w[2..2]);
	w_anode3567w[] = ( (w_anode3567w[2..2] & (! w_data3535w[2..2])), (w_anode3567w[1..1] & (! w_data3535w[1..1])), (w_anode3567w[0..0] & w_data3535w[0..0]), w_anode3537w[2..2]);
	w_anode3577w[] = ( (w_anode3577w[2..2] & (! w_data3535w[2..2])), (w_anode3577w[1..1] & w_data3535w[1..1]), (w_anode3577w[0..0] & (! w_data3535w[0..0])), w_anode3537w[2..2]);
	w_anode3587w[] = ( (w_anode3587w[2..2] & (! w_data3535w[2..2])), (w_anode3587w[1..1] & w_data3535w[1..1]), (w_anode3587w[0..0] & w_data3535w[0..0]), w_anode3537w[2..2]);
	w_anode3597w[] = ( (w_anode3597w[2..2] & w_data3535w[2..2]), (w_anode3597w[1..1] & (! w_data3535w[1..1])), (w_anode3597w[0..0] & (! w_data3535w[0..0])), w_anode3537w[2..2]);
	w_anode3607w[] = ( (w_anode3607w[2..2] & w_data3535w[2..2]), (w_anode3607w[1..1] & (! w_data3535w[1..1])), (w_anode3607w[0..0] & w_data3535w[0..0]), w_anode3537w[2..2]);
	w_anode3617w[] = ( (w_anode3617w[2..2] & w_data3535w[2..2]), (w_anode3617w[1..1] & w_data3535w[1..1]), (w_anode3617w[0..0] & (! w_data3535w[0..0])), w_anode3537w[2..2]);
	w_anode3627w[] = ( (w_anode3627w[2..2] & w_data3535w[2..2]), (w_anode3627w[1..1] & w_data3535w[1..1]), (w_anode3627w[0..0] & w_data3535w[0..0]), w_anode3537w[2..2]);
	w_anode3639w[] = ( (w_anode3639w[1..1] & (! data_wire[4..4])), (w_anode3639w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3648w[] = ( (w_anode3648w[2..2] & (! w_data3535w[2..2])), (w_anode3648w[1..1] & (! w_data3535w[1..1])), (w_anode3648w[0..0] & (! w_data3535w[0..0])), w_anode3639w[2..2]);
	w_anode3659w[] = ( (w_anode3659w[2..2] & (! w_data3535w[2..2])), (w_anode3659w[1..1] & (! w_data3535w[1..1])), (w_anode3659w[0..0] & w_data3535w[0..0]), w_anode3639w[2..2]);
	w_anode3669w[] = ( (w_anode3669w[2..2] & (! w_data3535w[2..2])), (w_anode3669w[1..1] & w_data3535w[1..1]), (w_anode3669w[0..0] & (! w_data3535w[0..0])), w_anode3639w[2..2]);
	w_anode3679w[] = ( (w_anode3679w[2..2] & (! w_data3535w[2..2])), (w_anode3679w[1..1] & w_data3535w[1..1]), (w_anode3679w[0..0] & w_data3535w[0..0]), w_anode3639w[2..2]);
	w_anode3689w[] = ( (w_anode3689w[2..2] & w_data3535w[2..2]), (w_anode3689w[1..1] & (! w_data3535w[1..1])), (w_anode3689w[0..0] & (! w_data3535w[0..0])), w_anode3639w[2..2]);
	w_anode3699w[] = ( (w_anode3699w[2..2] & w_data3535w[2..2]), (w_anode3699w[1..1] & (! w_data3535w[1..1])), (w_anode3699w[0..0] & w_data3535w[0..0]), w_anode3639w[2..2]);
	w_anode3709w[] = ( (w_anode3709w[2..2] & w_data3535w[2..2]), (w_anode3709w[1..1] & w_data3535w[1..1]), (w_anode3709w[0..0] & (! w_data3535w[0..0])), w_anode3639w[2..2]);
	w_anode3719w[] = ( (w_anode3719w[2..2] & w_data3535w[2..2]), (w_anode3719w[1..1] & w_data3535w[1..1]), (w_anode3719w[0..0] & w_data3535w[0..0]), w_anode3639w[2..2]);
	w_anode3730w[] = ( (w_anode3730w[1..1] & data_wire[4..4]), (w_anode3730w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3739w[] = ( (w_anode3739w[2..2] & (! w_data3535w[2..2])), (w_anode3739w[1..1] & (! w_data3535w[1..1])), (w_anode3739w[0..0] & (! w_data3535w[0..0])), w_anode3730w[2..2]);
	w_anode3750w[] = ( (w_anode3750w[2..2] & (! w_data3535w[2..2])), (w_anode3750w[1..1] & (! w_data3535w[1..1])), (w_anode3750w[0..0] & w_data3535w[0..0]), w_anode3730w[2..2]);
	w_anode3760w[] = ( (w_anode3760w[2..2] & (! w_data3535w[2..2])), (w_anode3760w[1..1] & w_data3535w[1..1]), (w_anode3760w[0..0] & (! w_data3535w[0..0])), w_anode3730w[2..2]);
	w_anode3770w[] = ( (w_anode3770w[2..2] & (! w_data3535w[2..2])), (w_anode3770w[1..1] & w_data3535w[1..1]), (w_anode3770w[0..0] & w_data3535w[0..0]), w_anode3730w[2..2]);
	w_anode3780w[] = ( (w_anode3780w[2..2] & w_data3535w[2..2]), (w_anode3780w[1..1] & (! w_data3535w[1..1])), (w_anode3780w[0..0] & (! w_data3535w[0..0])), w_anode3730w[2..2]);
	w_anode3790w[] = ( (w_anode3790w[2..2] & w_data3535w[2..2]), (w_anode3790w[1..1] & (! w_data3535w[1..1])), (w_anode3790w[0..0] & w_data3535w[0..0]), w_anode3730w[2..2]);
	w_anode3800w[] = ( (w_anode3800w[2..2] & w_data3535w[2..2]), (w_anode3800w[1..1] & w_data3535w[1..1]), (w_anode3800w[0..0] & (! w_data3535w[0..0])), w_anode3730w[2..2]);
	w_anode3810w[] = ( (w_anode3810w[2..2] & w_data3535w[2..2]), (w_anode3810w[1..1] & w_data3535w[1..1]), (w_anode3810w[0..0] & w_data3535w[0..0]), w_anode3730w[2..2]);
	w_anode3821w[] = ( (w_anode3821w[1..1] & data_wire[4..4]), (w_anode3821w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3830w[] = ( (w_anode3830w[2..2] & (! w_data3535w[2..2])), (w_anode3830w[1..1] & (! w_data3535w[1..1])), (w_anode3830w[0..0] & (! w_data3535w[0..0])), w_anode3821w[2..2]);
	w_anode3841w[] = ( (w_anode3841w[2..2] & (! w_data3535w[2..2])), (w_anode3841w[1..1] & (! w_data3535w[1..1])), (w_anode3841w[0..0] & w_data3535w[0..0]), w_anode3821w[2..2]);
	w_anode3851w[] = ( (w_anode3851w[2..2] & (! w_data3535w[2..2])), (w_anode3851w[1..1] & w_data3535w[1..1]), (w_anode3851w[0..0] & (! w_data3535w[0..0])), w_anode3821w[2..2]);
	w_anode3861w[] = ( (w_anode3861w[2..2] & (! w_data3535w[2..2])), (w_anode3861w[1..1] & w_data3535w[1..1]), (w_anode3861w[0..0] & w_data3535w[0..0]), w_anode3821w[2..2]);
	w_anode3871w[] = ( (w_anode3871w[2..2] & w_data3535w[2..2]), (w_anode3871w[1..1] & (! w_data3535w[1..1])), (w_anode3871w[0..0] & (! w_data3535w[0..0])), w_anode3821w[2..2]);
	w_anode3881w[] = ( (w_anode3881w[2..2] & w_data3535w[2..2]), (w_anode3881w[1..1] & (! w_data3535w[1..1])), (w_anode3881w[0..0] & w_data3535w[0..0]), w_anode3821w[2..2]);
	w_anode3891w[] = ( (w_anode3891w[2..2] & w_data3535w[2..2]), (w_anode3891w[1..1] & w_data3535w[1..1]), (w_anode3891w[0..0] & (! w_data3535w[0..0])), w_anode3821w[2..2]);
	w_anode3901w[] = ( (w_anode3901w[2..2] & w_data3535w[2..2]), (w_anode3901w[1..1] & w_data3535w[1..1]), (w_anode3901w[0..0] & w_data3535w[0..0]), w_anode3821w[2..2]);
	w_data3535w[2..0] = data_wire[2..0];
END;
--VALID FILE
