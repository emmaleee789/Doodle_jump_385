--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_fua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2498w[2..0]	: WIRE;
	w_anode2511w[3..0]	: WIRE;
	w_anode2528w[3..0]	: WIRE;
	w_anode2538w[3..0]	: WIRE;
	w_anode2548w[3..0]	: WIRE;
	w_anode2558w[3..0]	: WIRE;
	w_anode2568w[3..0]	: WIRE;
	w_anode2578w[3..0]	: WIRE;
	w_anode2588w[3..0]	: WIRE;
	w_anode2600w[2..0]	: WIRE;
	w_anode2609w[3..0]	: WIRE;
	w_anode2620w[3..0]	: WIRE;
	w_anode2630w[3..0]	: WIRE;
	w_anode2640w[3..0]	: WIRE;
	w_anode2650w[3..0]	: WIRE;
	w_anode2660w[3..0]	: WIRE;
	w_anode2670w[3..0]	: WIRE;
	w_anode2680w[3..0]	: WIRE;
	w_anode2691w[2..0]	: WIRE;
	w_anode2700w[3..0]	: WIRE;
	w_anode2711w[3..0]	: WIRE;
	w_anode2721w[3..0]	: WIRE;
	w_anode2731w[3..0]	: WIRE;
	w_anode2741w[3..0]	: WIRE;
	w_anode2751w[3..0]	: WIRE;
	w_anode2761w[3..0]	: WIRE;
	w_anode2771w[3..0]	: WIRE;
	w_anode2782w[2..0]	: WIRE;
	w_anode2791w[3..0]	: WIRE;
	w_anode2802w[3..0]	: WIRE;
	w_anode2812w[3..0]	: WIRE;
	w_anode2822w[3..0]	: WIRE;
	w_anode2832w[3..0]	: WIRE;
	w_anode2842w[3..0]	: WIRE;
	w_anode2852w[3..0]	: WIRE;
	w_anode2862w[3..0]	: WIRE;
	w_data2496w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode2862w[3..3], w_anode2852w[3..3], w_anode2842w[3..3], w_anode2832w[3..3], w_anode2822w[3..3], w_anode2812w[3..3], w_anode2802w[3..3], w_anode2791w[3..3]), ( w_anode2771w[3..3], w_anode2761w[3..3], w_anode2751w[3..3], w_anode2741w[3..3], w_anode2731w[3..3], w_anode2721w[3..3], w_anode2711w[3..3], w_anode2700w[3..3]), ( w_anode2680w[3..3], w_anode2670w[3..3], w_anode2660w[3..3], w_anode2650w[3..3], w_anode2640w[3..3], w_anode2630w[3..3], w_anode2620w[3..3], w_anode2609w[3..3]), ( w_anode2588w[3..3], w_anode2578w[3..3], w_anode2568w[3..3], w_anode2558w[3..3], w_anode2548w[3..3], w_anode2538w[3..3], w_anode2528w[3..3], w_anode2511w[3..3]));
	w_anode2498w[] = ( (w_anode2498w[1..1] & (! data_wire[4..4])), (w_anode2498w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2511w[] = ( (w_anode2511w[2..2] & (! w_data2496w[2..2])), (w_anode2511w[1..1] & (! w_data2496w[1..1])), (w_anode2511w[0..0] & (! w_data2496w[0..0])), w_anode2498w[2..2]);
	w_anode2528w[] = ( (w_anode2528w[2..2] & (! w_data2496w[2..2])), (w_anode2528w[1..1] & (! w_data2496w[1..1])), (w_anode2528w[0..0] & w_data2496w[0..0]), w_anode2498w[2..2]);
	w_anode2538w[] = ( (w_anode2538w[2..2] & (! w_data2496w[2..2])), (w_anode2538w[1..1] & w_data2496w[1..1]), (w_anode2538w[0..0] & (! w_data2496w[0..0])), w_anode2498w[2..2]);
	w_anode2548w[] = ( (w_anode2548w[2..2] & (! w_data2496w[2..2])), (w_anode2548w[1..1] & w_data2496w[1..1]), (w_anode2548w[0..0] & w_data2496w[0..0]), w_anode2498w[2..2]);
	w_anode2558w[] = ( (w_anode2558w[2..2] & w_data2496w[2..2]), (w_anode2558w[1..1] & (! w_data2496w[1..1])), (w_anode2558w[0..0] & (! w_data2496w[0..0])), w_anode2498w[2..2]);
	w_anode2568w[] = ( (w_anode2568w[2..2] & w_data2496w[2..2]), (w_anode2568w[1..1] & (! w_data2496w[1..1])), (w_anode2568w[0..0] & w_data2496w[0..0]), w_anode2498w[2..2]);
	w_anode2578w[] = ( (w_anode2578w[2..2] & w_data2496w[2..2]), (w_anode2578w[1..1] & w_data2496w[1..1]), (w_anode2578w[0..0] & (! w_data2496w[0..0])), w_anode2498w[2..2]);
	w_anode2588w[] = ( (w_anode2588w[2..2] & w_data2496w[2..2]), (w_anode2588w[1..1] & w_data2496w[1..1]), (w_anode2588w[0..0] & w_data2496w[0..0]), w_anode2498w[2..2]);
	w_anode2600w[] = ( (w_anode2600w[1..1] & (! data_wire[4..4])), (w_anode2600w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2609w[] = ( (w_anode2609w[2..2] & (! w_data2496w[2..2])), (w_anode2609w[1..1] & (! w_data2496w[1..1])), (w_anode2609w[0..0] & (! w_data2496w[0..0])), w_anode2600w[2..2]);
	w_anode2620w[] = ( (w_anode2620w[2..2] & (! w_data2496w[2..2])), (w_anode2620w[1..1] & (! w_data2496w[1..1])), (w_anode2620w[0..0] & w_data2496w[0..0]), w_anode2600w[2..2]);
	w_anode2630w[] = ( (w_anode2630w[2..2] & (! w_data2496w[2..2])), (w_anode2630w[1..1] & w_data2496w[1..1]), (w_anode2630w[0..0] & (! w_data2496w[0..0])), w_anode2600w[2..2]);
	w_anode2640w[] = ( (w_anode2640w[2..2] & (! w_data2496w[2..2])), (w_anode2640w[1..1] & w_data2496w[1..1]), (w_anode2640w[0..0] & w_data2496w[0..0]), w_anode2600w[2..2]);
	w_anode2650w[] = ( (w_anode2650w[2..2] & w_data2496w[2..2]), (w_anode2650w[1..1] & (! w_data2496w[1..1])), (w_anode2650w[0..0] & (! w_data2496w[0..0])), w_anode2600w[2..2]);
	w_anode2660w[] = ( (w_anode2660w[2..2] & w_data2496w[2..2]), (w_anode2660w[1..1] & (! w_data2496w[1..1])), (w_anode2660w[0..0] & w_data2496w[0..0]), w_anode2600w[2..2]);
	w_anode2670w[] = ( (w_anode2670w[2..2] & w_data2496w[2..2]), (w_anode2670w[1..1] & w_data2496w[1..1]), (w_anode2670w[0..0] & (! w_data2496w[0..0])), w_anode2600w[2..2]);
	w_anode2680w[] = ( (w_anode2680w[2..2] & w_data2496w[2..2]), (w_anode2680w[1..1] & w_data2496w[1..1]), (w_anode2680w[0..0] & w_data2496w[0..0]), w_anode2600w[2..2]);
	w_anode2691w[] = ( (w_anode2691w[1..1] & data_wire[4..4]), (w_anode2691w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2700w[] = ( (w_anode2700w[2..2] & (! w_data2496w[2..2])), (w_anode2700w[1..1] & (! w_data2496w[1..1])), (w_anode2700w[0..0] & (! w_data2496w[0..0])), w_anode2691w[2..2]);
	w_anode2711w[] = ( (w_anode2711w[2..2] & (! w_data2496w[2..2])), (w_anode2711w[1..1] & (! w_data2496w[1..1])), (w_anode2711w[0..0] & w_data2496w[0..0]), w_anode2691w[2..2]);
	w_anode2721w[] = ( (w_anode2721w[2..2] & (! w_data2496w[2..2])), (w_anode2721w[1..1] & w_data2496w[1..1]), (w_anode2721w[0..0] & (! w_data2496w[0..0])), w_anode2691w[2..2]);
	w_anode2731w[] = ( (w_anode2731w[2..2] & (! w_data2496w[2..2])), (w_anode2731w[1..1] & w_data2496w[1..1]), (w_anode2731w[0..0] & w_data2496w[0..0]), w_anode2691w[2..2]);
	w_anode2741w[] = ( (w_anode2741w[2..2] & w_data2496w[2..2]), (w_anode2741w[1..1] & (! w_data2496w[1..1])), (w_anode2741w[0..0] & (! w_data2496w[0..0])), w_anode2691w[2..2]);
	w_anode2751w[] = ( (w_anode2751w[2..2] & w_data2496w[2..2]), (w_anode2751w[1..1] & (! w_data2496w[1..1])), (w_anode2751w[0..0] & w_data2496w[0..0]), w_anode2691w[2..2]);
	w_anode2761w[] = ( (w_anode2761w[2..2] & w_data2496w[2..2]), (w_anode2761w[1..1] & w_data2496w[1..1]), (w_anode2761w[0..0] & (! w_data2496w[0..0])), w_anode2691w[2..2]);
	w_anode2771w[] = ( (w_anode2771w[2..2] & w_data2496w[2..2]), (w_anode2771w[1..1] & w_data2496w[1..1]), (w_anode2771w[0..0] & w_data2496w[0..0]), w_anode2691w[2..2]);
	w_anode2782w[] = ( (w_anode2782w[1..1] & data_wire[4..4]), (w_anode2782w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2791w[] = ( (w_anode2791w[2..2] & (! w_data2496w[2..2])), (w_anode2791w[1..1] & (! w_data2496w[1..1])), (w_anode2791w[0..0] & (! w_data2496w[0..0])), w_anode2782w[2..2]);
	w_anode2802w[] = ( (w_anode2802w[2..2] & (! w_data2496w[2..2])), (w_anode2802w[1..1] & (! w_data2496w[1..1])), (w_anode2802w[0..0] & w_data2496w[0..0]), w_anode2782w[2..2]);
	w_anode2812w[] = ( (w_anode2812w[2..2] & (! w_data2496w[2..2])), (w_anode2812w[1..1] & w_data2496w[1..1]), (w_anode2812w[0..0] & (! w_data2496w[0..0])), w_anode2782w[2..2]);
	w_anode2822w[] = ( (w_anode2822w[2..2] & (! w_data2496w[2..2])), (w_anode2822w[1..1] & w_data2496w[1..1]), (w_anode2822w[0..0] & w_data2496w[0..0]), w_anode2782w[2..2]);
	w_anode2832w[] = ( (w_anode2832w[2..2] & w_data2496w[2..2]), (w_anode2832w[1..1] & (! w_data2496w[1..1])), (w_anode2832w[0..0] & (! w_data2496w[0..0])), w_anode2782w[2..2]);
	w_anode2842w[] = ( (w_anode2842w[2..2] & w_data2496w[2..2]), (w_anode2842w[1..1] & (! w_data2496w[1..1])), (w_anode2842w[0..0] & w_data2496w[0..0]), w_anode2782w[2..2]);
	w_anode2852w[] = ( (w_anode2852w[2..2] & w_data2496w[2..2]), (w_anode2852w[1..1] & w_data2496w[1..1]), (w_anode2852w[0..0] & (! w_data2496w[0..0])), w_anode2782w[2..2]);
	w_anode2862w[] = ( (w_anode2862w[2..2] & w_data2496w[2..2]), (w_anode2862w[1..1] & w_data2496w[1..1]), (w_anode2862w[0..0] & w_data2496w[0..0]), w_anode2782w[2..2]);
	w_data2496w[2..0] = data_wire[2..0];
END;
--VALID FILE
