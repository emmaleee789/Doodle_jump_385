--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=16 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 18.0 cbx_lpm_mux 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN mux_iob
( 
	data[31..0]	:	input;
	result[15..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[15..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data295w[1..0]	: WIRE;
	w_data309w[1..0]	: WIRE;
	w_data321w[1..0]	: WIRE;
	w_data333w[1..0]	: WIRE;
	w_data345w[1..0]	: WIRE;
	w_data357w[1..0]	: WIRE;
	w_data369w[1..0]	: WIRE;
	w_data381w[1..0]	: WIRE;
	w_data393w[1..0]	: WIRE;
	w_data405w[1..0]	: WIRE;
	w_data417w[1..0]	: WIRE;
	w_data429w[1..0]	: WIRE;
	w_data441w[1..0]	: WIRE;
	w_data453w[1..0]	: WIRE;
	w_data465w[1..0]	: WIRE;
	w_data477w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data477w[1..1]) # ((! sel_node[]) & w_data477w[0..0])), ((sel_node[] & w_data465w[1..1]) # ((! sel_node[]) & w_data465w[0..0])), ((sel_node[] & w_data453w[1..1]) # ((! sel_node[]) & w_data453w[0..0])), ((sel_node[] & w_data441w[1..1]) # ((! sel_node[]) & w_data441w[0..0])), ((sel_node[] & w_data429w[1..1]) # ((! sel_node[]) & w_data429w[0..0])), ((sel_node[] & w_data417w[1..1]) # ((! sel_node[]) & w_data417w[0..0])), ((sel_node[] & w_data405w[1..1]) # ((! sel_node[]) & w_data405w[0..0])), ((sel_node[] & w_data393w[1..1]) # ((! sel_node[]) & w_data393w[0..0])), ((sel_node[] & w_data381w[1..1]) # ((! sel_node[]) & w_data381w[0..0])), ((sel_node[] & w_data369w[1..1]) # ((! sel_node[]) & w_data369w[0..0])), ((sel_node[] & w_data357w[1..1]) # ((! sel_node[]) & w_data357w[0..0])), ((sel_node[] & w_data345w[1..1]) # ((! sel_node[]) & w_data345w[0..0])), ((sel_node[] & w_data333w[1..1]) # ((! sel_node[]) & w_data333w[0..0])), ((sel_node[] & w_data321w[1..1]) # ((! sel_node[]) & w_data321w[0..0])), ((sel_node[] & w_data309w[1..1]) # ((! sel_node[]) & w_data309w[0..0])), ((sel_node[] & w_data295w[1..1]) # ((! sel_node[]) & w_data295w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data295w[] = ( data[16..16], data[0..0]);
	w_data309w[] = ( data[17..17], data[1..1]);
	w_data321w[] = ( data[18..18], data[2..2]);
	w_data333w[] = ( data[19..19], data[3..3]);
	w_data345w[] = ( data[20..20], data[4..4]);
	w_data357w[] = ( data[21..21], data[5..5]);
	w_data369w[] = ( data[22..22], data[6..6]);
	w_data381w[] = ( data[23..23], data[7..7]);
	w_data393w[] = ( data[24..24], data[8..8]);
	w_data405w[] = ( data[25..25], data[9..9]);
	w_data417w[] = ( data[26..26], data[10..10]);
	w_data429w[] = ( data[27..27], data[11..11]);
	w_data441w[] = ( data[28..28], data[12..12]);
	w_data453w[] = ( data[29..29], data[13..13]);
	w_data465w[] = ( data[30..30], data[14..14]);
	w_data477w[] = ( data[31..31], data[15..15]);
END;
--VALID FILE
